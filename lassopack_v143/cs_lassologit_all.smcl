{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/Users/kahrens/MyProjects/lassopack/cs_lassologit_all.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}27 Mar 2021, 20:33:03
{txt}
{com}. 
. which lassologit
{txt}./lassologit.ado
{res}*! lassologit (v0.3.1)
*! part of lassopack v1.4.2
*! last edited: 27mar2021
*! authors: aa/ms/cbh
{txt}
{com}. which lassologit_p
{txt}./lassologit_p.ado
{res}*! lassologit_p
*! part of lassopack v1.4.2
*! last edited: 27mar2021
*! authors: aa/ms
{txt}
{com}. which cvlassologit
{txt}./cvlassologit.ado
{res}*! cvlassologit 
*! part of lassopack v1.4.2
*! last edited: 6may2019
*! authors: aa/ms
{txt}
{com}. which rlassologit
{txt}./rlassologit.ado
{res}*! rlassologit 
*! part of lassopack v1.4.1
*! last edited: 6may2019
*! authors: aa/ms
{txt}
{com}. 
. do "cs_lassologit.do" // ok
{txt}
{com}. clear all 
{res}{txt}
{com}. 
. 
. global datafolder 
{txt}
{com}. 
. ********************************************************************************
. *** Prostate data                                                            ***
. *** comparison with glmnet                                                                                                       ***
. ********************************************************************************
.  
. $loadprostate
{txt}(11 vars, 97 obs)

{com}. 
. gen ybin = lpsa > 2
{txt}
{com}. 
. lassologit ybin lcavol-pgg45, lam(10 1 0.1 0.05 0.03 0.01) lambdan
{res}{txt}Obtaining solution for 6 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
......
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  10.00000{col 25}   0{col 31}   0.75567{col 43}  121.55230{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added _cons.
     2{txt}{col 7}{c |}{res}   3{col 13}   0.10000{col 25}   3{col 31}   4.61264{col 43}   97.36078{txt} {res}{col 56} 0.2488{txt}{col 65}{c |}{res}{col 67}Added lcavol lweight gleason.
     3{txt}{col 7}{c |}{res}   4{col 13}   0.05000{col 25}   5{col 31}  10.56586{col 43}   90.27006{txt} {res}{col 56} 0.3403{txt}{col 65}{c |}{res}{col 67}Added lbph svi.
     4{txt}{col 7}{c |}{res}   6{col 13}   0.01000{col 25}   8{col 31}  18.32126{col 43}   86.17998{txt} {res}{col 56} 0.4238{txt}{col 65}{c |}{res}{col 67}Added age lcp pgg45.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat S =  e(betas)'
{txt}
{com}. mat list S
{res}
{txt}S[9,6]
                 r1          r2          r3          r4          r5          r6
 lcavol {res}          0           0   .50144272   .60356877   .65136862    .8262603
{txt}lweight {res}          0           0   .46623224   1.0222793   1.1985052   1.4897915
{txt}    age {res}          0           0           0           0           0  -.02639874
{txt}   lbph {res}          0           0           0   .02322241    .0977888   .23427909
{txt}    svi {res}          0           0           0   .34760389   .81834702   2.1914669
{txt}    lcp {res}          0           0           0           0           0  -.20264117
{txt}gleason {res}          0           0   .27433896   .63999954   .80482493   1.2161025
{txt}  pgg45 {res}          0           0           0           0           0  -.00227197
{txt}  _cons {res}  .75566754   .75566754  -3.3706217  -7.9291814  -9.7345202  -12.132043
{reset}
{com}. mat G = ( 0,0,0.501461115822691,0.603583899226737,0.651411524139352,0.826374502058559 \ 0,0,0.466224946596217,1.02233825499837,1.19858862440819,1.48996763937638 \ 0,0,0,0,0,-0.0264071147625507 \ 0,0,0,0.0232111786772005,0.0977733878125449,0.234278942429968 \ 0,0,0,0.347557333713614,0.818269071194786,2.19023312954913 \ 0,0,0,0,0,-0.20284502575343 \ 0,0,0.274327168187838,0.639999602733867,0.804810602155823,1.21666269887086 \ 0,0,0,0,0,-0.00227895781755522 \ 0.755667537541278,0.755667537541278,-3.37053747374121,-7.92940124760532,-9.73475850480416,-12.1358873874818 )
{txt}
{com}. di mreldif(S,G)
{res}.00038672
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. lassologit ybin lcavol-pgg45, nostd l(10 1 0.1 0.05 0.03 0.01) lambdan
{res}{txt}Obtaining solution for 6 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
......
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  10.00000{col 25}   0{col 31}   0.75567{col 43}  121.55230{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}   1.00000{col 25}   1{col 31}   0.29844{col 43}  112.28197{txt} {res}{col 56} 0.0929{txt}{col 65}{c |}{res}{col 67}Added pgg45.
     3{txt}{col 7}{c |}{res}   3{col 13}   0.10000{col 25}   4{col 31}   1.21117{col 43}  101.42219{txt} {res}{col 56} 0.2320{txt}{col 65}{c |}{res}{col 67}Added lcavol age lbph.
     4{txt}{col 7}{c |}{res}   4{col 13}   0.05000{col 25}   3{col 31}   1.51415{col 43}   93.41464{txt} {res}{col 56} 0.2813{txt}{col 65}{c |}{res}{col 67}Removed age.
     5{txt}{col 7}{c |}{res}   5{col 13}   0.03000{col 25}   6{col 31}   5.20432{col 43}   94.24763{txt} {res}{col 56} 0.3242{txt}{col 65}{c |}{res}{col 67}Added lweight age gleason.
     6{txt}{col 7}{c |}{res}   6{col 13}   0.01000{col 25}   8{col 31}  15.75758{col 43}   87.63211{txt} {res}{col 56} 0.4118{txt}{col 65}{c |}{res}{col 67}Added svi lcp.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat S = e(betas)'
{txt}
{com}. mat list S
{res}
{txt}S[9,6]
                 r1          r2          r3          r4          r5          r6
 lcavol {res}          0           0   .48999457    .7693653   .85524862   .90587387
{txt}lweight {res}          0           0           0           0   .31595678   1.2171285
{txt}    age {res}          0           0   .00567835           0  -.00508425  -.03184618
{txt}   lbph {res}          0           0   .06331262   .20851714    .2390665   .28322545
{txt}    svi {res}          0           0           0           0           0   1.1479567
{txt}    lcp {res}          0           0           0           0           0  -.14337938
{txt}gleason {res}          0           0           0           0   .32609954    1.221161
{txt}  pgg45 {res}          0   .02309655   .02194763   .01826891   .01115514  -.00506532
{txt}  _cons {res}  .75566754   .27534735  -.63023247  -.51799615  -3.4517119  -10.801948
{reset}
{com}. mat G = ( 0,0,0.49000229764977,0.769318675648317,0.85526320111666,0.906069187273262 \ 0,0,0,0,0.315948623488018,1.21721663534913 \ 0,0,0.00568091171074165,0,-0.00508198583263728,-0.0318566587040123 \ 0,0,0.0633097982098456,0.208509405869272,0.239053556251706,0.283238055284736 \ 0,0,0,0,0,1.14829028427382 \ 0,0,0,0,0,-0.143667092495639 \ 0,0,0,0,0.325877300407054,1.22138220662723 \ 0,0.0230961215196978,0.0219472306702984,0.0182648564510364,0.0111575320234226,-0.00506567179207975 \ 0.755667537541278,0.27535477007396,-0.630396562134161,-0.517881010344681,-3.45041705660254,-10.8034348672065 )
{txt}
{com}. di mreldif(S,G)
{res}.00029096
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. lassologit ybin lcavol-pgg45, nocons l(10 1 0.1 0.05 0.03 0.01) lambdan
{res}{txt}Obtaining solution for 6 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
......
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   2{col 13}   1.00000{col 25}   1{col 31}   0.05598{col 43}  124.89448{txt} {res}{col 56}-0.0138{txt}{col 65}{c |}{res}{col 67}Added gleason.
     2{txt}{col 7}{c |}{res}   3{col 13}   0.10000{col 25}   2{col 31}   0.61149{col 43}  101.12678{txt} {res}{col 56} 0.1954{txt}{col 65}{c |}{res}{col 67}Added lcavol lweight. Removed gleason.
     3{txt}{col 7}{c |}{res}   4{col 13}   0.05000{col 25}   5{col 31}   1.57115{col 43}   96.27282{txt} {res}{col 56} 0.2764{txt}{col 65}{c |}{res}{col 67}Added age lbph svi pgg45. Removed lweight.
     4{txt}{col 7}{c |}{res}   5{col 13}   0.03000{col 25}   6{col 31}   2.41099{col 43}   92.88880{txt} {res}{col 56} 0.3179{txt}{col 65}{c |}{res}{col 67}Added lweight.
     5{txt}{col 7}{c |}{res}   6{col 13}   0.01000{col 25}   8{col 31}   4.49415{col 43}   90.64406{txt} {res}{col 56} 0.3638{txt}{col 65}{c |}{res}{col 67}Added lcp gleason.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat S = e(betas)'
{txt}
{com}. mat list S
{res}
{txt}S[8,6]
                 r1          r2          r3          r4          r5          r6
 lcavol {res}          0           0   .59802782   .72616476   .79875667   .92255846
{txt}lweight {res}          0           0   .01346455           0   .18176699   .48238405
{txt}    age {res}          0           0           0  -.00300917  -.01637452  -.06134834
{txt}   lbph {res}          0           0           0   .17547015   .25947085   .40786672
{txt}    svi {res}          0           0           0    .6652651   1.1500101   2.3420168
{txt}    lcp {res}          0           0           0           0           0  -.03583815
{txt}gleason {res}          0   .05597523           0           0           0   .23659329
{txt}  pgg45 {res}          0           0           0   .00123892   .00461519   .00554119
{reset}
{com}. mat G = ( 0,0,0.597904154552661,0.726122023990401,0.798790726486026,0.921752657257945 \ 0,0,0.0135028969542606,0,0.171947048951238,0.49056370807684 \ 0,0,0,-0.00300756283054592,-0.0158227880543364,-0.060846846460528 \ 0,0,0,0.175476249674279,0.259990447474341,0.405507212738994 \ 0,0,0,0.665451061416816,1.15151187861837,2.33678717583705 \ 0,0,0,0,0,-0.0347040277832361 \ 0,0.0559752315024908,0,0,5.66530864443488e-05,0.227283007307124 \ 0,0,0,0.00123728745272919,0.00458124613535244,0.0056859742231097 )
{txt}
{com}. di mreldif(S,G)
{res}.00837916
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. lassologit ybin lcavol-pgg45,  nostd nocons l(10 1 0.1 0.05 0.03 0.01) lambdan
{res}{txt}Obtaining solution for 6 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
......
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  10.00000{col 25}   1{col 31}   0.00208{col 43}  131.65873{txt} {res}{col 56}-0.0695{txt}{col 65}{c |}{res}{col 67}Added age.
     2{txt}{col 7}{c |}{res}   2{col 13}   1.00000{col 25}   2{col 31}   0.02767{col 43}  113.17565{txt} {res}{col 56} 0.0963{txt}{col 65}{c |}{res}{col 67}Added pgg45.
     3{txt}{col 7}{c |}{res}   3{col 13}   0.10000{col 25}   4{col 31}   0.58558{col 43}  100.15828{txt} {res}{col 56} 0.2308{txt}{col 65}{c |}{res}{col 67}Added lcavol lbph.
     4{txt}{col 7}{c |}{res}   5{col 13}   0.03000{col 25}   6{col 31}   1.29587{col 43}   95.27151{txt} {res}{col 56} 0.2983{txt}{col 65}{c |}{res}{col 67}Added lweight gleason.
     5{txt}{col 7}{c |}{res}   6{col 13}   0.01000{col 25}   8{col 31}   3.41425{col 43}   91.81365{txt} {res}{col 56} 0.3541{txt}{col 65}{c |}{res}{col 67}Added svi lcp.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat S = e(betas)'
{txt}
{com}. mat list S
{res}
{txt}S[8,6]
                 r1          r2          r3          r4          r5          r6
 lcavol {res}          0           0   .48036643   .76668272    .9011587   .99537589
{txt}lweight {res}          0           0           0           0     .074323   .46323122
{txt}    age {res}  .00208321   .00314937  -.00374366  -.00798619  -.01462656  -.06097121
{txt}   lbph {res}          0           0    .0794793   .22121772   .28416574   .40829837
{txt}    svi {res}          0           0           0           0           0    1.184281
{txt}    lcp {res}          0           0           0           0           0  -.07020165
{txt}gleason {res}          0           0           0           0    .0042549   .22032571
{txt}  pgg45 {res}          0   .02451818   .02198798   .01847529   .01734401   .01156431
{reset}
{com}. mat G = ( 0,0,0.480318888302968,0.766488329771494,0.901293514420413,0.994357503579643 \ 0,0,0,0,0.0675008486192263,0.471956582881281 \ 0.00208320818573869,0.00315326759834838,-0.00374253486037605,-0.00798207623817391,-0.013826952207498,-0.0604790391537946 \ 0,0,0.0794801700546684,0.221208787323384,0.283793361154338,0.405919890396927 \ 0,0,0,0,0,1.17906428190479 \ 0,0,0,0,0,-0.0688739335594197 \ 0,0,0,0,0.000169219253455043,0.210870371872184 \ 0,0.0245128044360127,0.0219880300010344,0.018475718697768,0.0173742626600768,0.0117069696335417 )
{txt}
{com}. di mreldif(S,G)
{res}.00780871
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. // penalization and standardization
. lassologit ybin lcavol-pgg45, l(10)
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.4943305      0.9095492
{txt}{space 10}lweight {c |}{col 21}{res}      0.4337542      2.0564072
{txt}{space 10}gleason {c |}{col 21}{res}      0.2539834      1.3449179
{txt}{space 12}_cons {c |}{col 21}{res}     -3.1109989    -16.4802012
{txt}{hline 18}{c BT}{hline 32}

{com}. mat bdense=e(beta_dense)
{txt}
{com}. mat psi=e(Psi)
{txt}
{com}. mat spsi=e(sPsi)
{txt}
{com}. lassologit ybin lcavol-pgg45, l(10) stdfly
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.4943481      0.9095492
{txt}{space 10}lweight {c |}{col 21}{res}      0.4337417      2.0564072
{txt}{space 10}gleason {c |}{col 21}{res}      0.2539186      1.3449179
{txt}{space 12}_cons {c |}{col 21}{res}     -3.1105423    -16.4802012
{txt}{hline 18}{c BT}{hline 32}

{com}. assert mreldif(bdense,e(beta_dense))<0.001
{txt}
{com}. lassologit ybin lcavol-pgg45, l(10) psi(psi)
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.4943305      0.9095492
{txt}{space 10}lweight {c |}{col 21}{res}      0.4337542      2.0564072
{txt}{space 10}gleason {c |}{col 21}{res}      0.2539834      1.3449179
{txt}{space 12}_cons {c |}{col 21}{res}     -3.1109989    -16.4802012
{txt}{hline 18}{c BT}{hline 32}

{com}. assert mreldif(bdense,e(beta_dense))<0.001
{txt}
{com}. lassologit ybin lcavol-pgg45, l(10) spsi(spsi)
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.4943305      0.9095492
{txt}{space 10}lweight {c |}{col 21}{res}      0.4337542      2.0564072
{txt}{space 10}gleason {c |}{col 21}{res}      0.2539834      1.3449179
{txt}{space 12}_cons {c |}{col 21}{res}     -3.1109989    -16.4802012
{txt}{hline 18}{c BT}{hline 32}

{com}. assert mreldif(bdense,e(beta_dense))<0.001
{txt}
{com}. // vs notpen
. mat psi0=psi
{txt}
{com}. mat psi0[1,1]=0
{txt}
{com}. mat spsi0=spsi
{txt}
{com}. mat spsi0[1,1]=0
{txt}
{com}. lassologit ybin lcavol-pgg45, l(10) notpen(lcavol)
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      1.2543045      1.1966898
{txt}{space 10}lweight {c |}{col 21}{res}      0.0677158      1.7891419
{txt}{space 12}_cons {c |}{col 21}{res}     -0.8951814     -6.9732078
{txt}{hline 18}{c BT}{hline 32}

{com}. mat bdense=e(beta_dense)
{txt}
{com}. lassologit ybin lcavol-pgg45, l(10) psi(psi0)
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      1.2543045      1.1966898
{txt}{space 10}lweight {c |}{col 21}{res}      0.0677158      1.7891419
{txt}{space 12}_cons {c |}{col 21}{res}     -0.8951814     -6.9732078
{txt}{hline 18}{c BT}{hline 32}

{com}. assert mreldif(bdense,e(beta_dense))<0.001
{txt}
{com}. lassologit ybin lcavol-pgg45, l(10) spsi(spsi0)
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      1.2543045      1.1966898
{txt}{space 10}lweight {c |}{col 21}{res}      0.0677158      1.7891419
{txt}{space 12}_cons {c |}{col 21}{res}     -0.8951814     -6.9732078
{txt}{hline 18}{c BT}{hline 32}

{com}. assert mreldif(bdense,e(beta_dense))<0.001
{txt}
{com}. 
. 
. 
. ********************************************************************************
. *** Spam data                                                                ***
. *** comparison with glmnet                                                                                                       ***
. ********************************************************************************
.  
. $loadspam
{txt}(58 vars, 4,601 obs)

{com}. 
. lassologit v58 v1-v57 , ///
>         l(0.18 .1 .05 .01 0.005 0.001) lambdan
{res}{txt}Obtaining solution for 6 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
......
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}   0.18000{col 25}   1{col 31}   0.47598{col 43} 6122.83847{txt} {res}{col 56} 0.0083{txt}{col 65}{c |}{res}{col 67}Added v21 _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}   0.10000{col 25}   7{col 31}   2.81070{col 43} 5083.09675{txt} {res}{col 56} 0.1804{txt}{col 65}{c |}{res}{col 67}Added v7 v16 v23 v25 v53 v57.
     3{txt}{col 7}{c |}{res}   3{col 13}   0.05000{col 25}  19{col 31}   6.90816{col 43} 3913.66594{txt} {res}{col 56} 0.3772{txt}{col 65}{c |}{res}{col 67}Added v5 v6 v8 v9 v17 v18 v19 v20 v24 v26 v27 v52.
     4{txt}{col 7}{c |}{res}   4{col 13}   0.01000{col 25}  37{col 31}  17.62002{col 43} 2616.28668{txt} {res}{col 56} 0.5984{txt}{col 65}{c |}{res}{col 67}Added v2 v3 v4 v10 v12 v22 v33 v37 v39 v42 v43 v44 v45
{txt}{col 7}{c |}{col 65}{c |}{res}{col 67}v46 v47 v48 v49 v56.
     5{txt}{col 7}{c |}{res}   5{col 13}   0.00500{col 25}  45{col 31}  23.77112{col 43} 2369.70055{txt} {res}{col 56} 0.6433{txt}{col 65}{c |}{res}{col 67}Added v1 v14 v15 v29 v35 v38 v41 v51.
     6{txt}{col 7}{c |}{res}   6{col 13}   0.00100{col 25}  53{col 31}  42.66342{col 43} 2121.90778{txt} {res}{col 56} 0.6883{txt}{col 65}{c |}{res}{col 67}Added v11 v28 v30 v31 v36 v40 v50 v54.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat S = e(betas)'
{txt}
{com}. mat list S
{res}
{txt}S[58,6]
               r1          r2          r3          r4          r5          r6
   v1 {res}          0           0           0           0  -.04225664  -.27214275
{txt}   v2 {res}          0           0           0  -.00374091  -.05127575  -.12567998
{txt}   v3 {res}          0           0           0   .10113755   .11881682    .1390962
{txt}   v4 {res}          0           0           0   .01737589   .05267573   .19596475
{txt}   v5 {res}          0           0    .1727807   .42960602   .48472386   .52680103
{txt}   v6 {res}          0           0   .21529305   .43995289    .4920479    .6398607
{txt}   v7 {res}          0   .54124424   1.1426365   2.0688244    2.229753   2.2994845
{txt}   v8 {res}          0           0   .13686861   .48085682   .53116372   .55860011
{txt}   v9 {res}          0           0   .11944365   .36017472    .4285708   .57228097
{txt}  v10 {res}          0           0           0   .03639786   .06618343   .09890413
{txt}  v11 {res}          0           0           0           0           0  -.08911314
{txt}  v12 {res}          0           0           0  -.03081446  -.08906859   -.1347646
{txt}  v13 {res}          0           0           0           0           0           0
{txt}  v14 {res}          0           0           0           0   .00804803   .09629843
{txt}  v15 {res}          0           0           0           0    .1881181   .76789388
{txt}  v16 {res}          0   .05695022   .26102054   .47444417   .58307517   .99205468
{txt}  v17 {res}          0           0    .1633635   .53762305   .66652873   .84922582
{txt}  v18 {res}          0           0   .01860956   .22357567   .23252779   .15251566
{txt}  v19 {res}          0           0   .03546808   .06846787   .07442523    .0809274
{txt}  v20 {res}          0           0   .06231727   .30238904   .40107559   .68173141
{txt}  v21 {res}  .02516619   .24481679   .28506916   .23123314   .21751699     .226894
{txt}  v22 {res}          0           0           0   .15242899   .21254888   .24812337
{txt}  v23 {res}          0   .51267335   .90878927   1.6218806   1.8809046   2.2554731
{txt}  v24 {res}          0           0   .13648679   .50236483    .5536729   .54017396
{txt}  v25 {res}          0  -.00711341  -.11940898   -.6504895  -.94776068  -1.5416988
{txt}  v26 {res}          0           0  -.03652637  -.31180458  -.47637893  -.86518479
{txt}  v27 {res}          0           0  -.00214557  -.15015757  -.46485457  -1.4429289
{txt}  v28 {res}          0           0           0           0           0   .29930437
{txt}  v29 {res}          0           0           0           0  -.11315754  -.97465088
{txt}  v30 {res}          0           0           0           0           0  -.21465474
{txt}  v31 {res}          0           0           0           0           0  -.15177803
{txt}  v32 {res}          0           0           0           0           0           0
{txt}  v33 {res}          0           0           0  -.26480919  -.46531758  -.76406289
{txt}  v34 {res}          0           0           0           0           0           0
{txt}  v35 {res}          0           0           0           0  -.06375784  -.97099141
{txt}  v36 {res}          0           0           0           0           0   .66586659
{txt}  v37 {res}          0           0           0  -.12502434  -.08893621  -.01147064
{txt}  v38 {res}          0           0           0           0  -.00646467  -.43690013
{txt}  v39 {res}          0           0           0  -.10631926  -.22456488  -.58807676
{txt}  v40 {res}          0           0           0           0           0  -.35701544
{txt}  v41 {res}          0           0           0           0   -.2996689  -2.1216478
{txt}  v42 {res}          0           0           0  -.44593572  -.70821005  -1.4707508
{txt}  v43 {res}          0           0           0  -.11633198  -.27122313  -.71018955
{txt}  v44 {res}          0           0           0  -.12871699  -.37395878  -1.0508246
{txt}  v45 {res}          0           0           0  -.30072458  -.43262396  -.67343948
{txt}  v46 {res}          0           0           0  -.41740057  -.70460002  -1.2119074
{txt}  v47 {res}          0           0           0  -.15060387  -.71411759  -1.5974548
{txt}  v48 {res}          0           0           0  -.16425604  -.58718251  -2.0645792
{txt}  v49 {res}          0           0           0  -.31893943  -.61866224  -1.0606296
{txt}  v50 {res}          0           0           0           0           0    -.127849
{txt}  v51 {res}          0           0           0           0  -.13709839  -.67051869
{txt}  v52 {res}          0           0   .18374361   .45211158   .45808122   .41951366
{txt}  v53 {res}          0   .63102486   1.5733686   3.7605486   4.4062321   5.0716909
{txt}  v54 {res}          0           0           0           0           0   1.0462338
{txt}  v55 {res}          0           0           0           0           0           0
{txt}  v56 {res}          0           0           0   .00137845   .00227828   .00462671
{txt}  v57 {res}          0   .00002668   .00028159   .00046685   .00050695   .00061037
{txt}_cons {res} -.45081192  -.81685285  -1.3345408  -1.6707147  -1.6005077   -1.532364
{reset}
{com}. mat G = ( 0,0,0,0,-0.0422529146575627,-0.272031262707042 \ 0,0,0,-0.00373203418724297,-0.0512671410498323,-0.125632626238845 \ 0,0,0,0.101141846279635,0.11883214230586,0.139109364166967 \ 0,0,0,0.0173756561991167,0.0526745401803319,0.195886595110133 \ 0,0,0.172804595227024,0.429605013071812,0.484763002454668,0.526731240528818 \ 0,0,0.215391390316697,0.439944587424189,0.491919474006125,0.638892239188151 \ 0,0.541244393029207,1.14272230384219,2.06887558871726,2.23002699666492,2.30014269388336 \ 0,0,0.136927707286204,0.480868178278047,0.531197496280493,0.55864194969041 \ 0,0,0.119571529292932,0.3601313065449,0.428423569813396,0.571760019260457 \ 0,0,0,0.0363964738545447,0.0661874609011232,0.0988644526800415 \ 0,0,0,0,0,-0.0886237382535084 \ 0,0,0,-0.0308097278466257,-0.089081775600141,-0.134749875433312 \ 0,0,0,0,0,0 \ 0,0,0,0,0.00795793603714984,0.0959052969098513 \ 0,0,0,0,0.187956709982398,0.766748734310841 \ 0,0.0569499824412161,0.261053578737326,0.474455181680385,0.582556859865158,0.992084036782018 \ 0,0,0.163352298428151,0.537635721901667,0.666555390326264,0.849404169191338 \ 0,0,0.0186179136972665,0.223578006225662,0.232610416364506,0.152792625551643 \ 0,0,0.0354864953419262,0.0684739350799352,0.0744387727276772,0.0809881016277326 \ 0,0,0.0623296656451264,0.30237957050336,0.401066076630547,0.680630170947902 \ 0.0251657497800995,0.244816018569017,0.285089535713845,0.231235215294809,0.21751235961023,0.226819320440981 \ 0,0,0,0.152438807435518,0.212558463696679,0.248079809754775 \ 0,0.512678317278518,0.908939351449302,1.62189944870526,1.88098268266277,2.25700936855849 \ 0,0,0.136512396818573,0.502377361626912,0.553687448356407,0.540585164364761 \ 0,-0.00711373831549181,-0.119341797786071,-0.650488655022833,-0.947791899988904,-1.5422976600939 \ 0,0,-0.0365713377744791,-0.311724419804555,-0.476376985691428,-0.865174810478425 \ 0,0,-0.00214239923991577,-0.150103996240846,-0.464229167129705,-1.43091728235785 \ 0,0,0,0,0,0.299518215687398 \ 0,0,0,0,-0.11287556060371,-0.970189677158865 \ 0,0,0,0,0,-0.213188194988553 \ 0,0,0,0,0,-0.15111484640071 \ 0,0,0,0,0,0 \ 0,0,0,-0.264763346644653,-0.465222166671986,-0.763495947479959 \ 0,0,0,0,0,0 \ 0,0,0,0,-0.0635939140607186,-0.963847734942651 \ 0,0,0,0,0,0.666907685726506 \ 0,0,0,-0.125014730751495,-0.0889334412435665,-0.011300721151613 \ 0,0,0,0,-0.00632977917857363,-0.436818510247387 \ 0,0,0,-0.106301779679491,-0.224438789391816,-0.586944463758824 \ 0,0,0,0,0,-0.358234655091931 \ 0,0,0,0,-0.299579530075859,-2.10564311868802 \ 0,0,0,-0.44588873213617,-0.708035508405983,-1.46655172058406 \ 0,0,0,-0.116295099407099,-0.271023655797981,-0.707676526963956 \ 0,0,0,-0.128692659562944,-0.373788716012293,-1.04867026256564 \ 0,0,0,-0.300713167088696,-0.432600838003125,-0.673078767971861 \ 0,0,0,-0.4173345191239,-0.704321130319187,-1.21019326162314 \ 0,0,0,-0.150587748961614,-0.714086849502039,-1.59652543630244 \ 0,0,0,-0.164230301991611,-0.586985955993564,-2.06052061918955 \ 0,0,0,-0.318945414490126,-0.61863047152071,-1.0603371670279 \ 0,0,0,0,0,-0.12810459024372 \ 0,0,0,0,-0.136996306452528,-0.671500830778917 \ 0,0,0.183754285937407,0.452118980142298,0.458172676826618,0.419905830636866 \ 0,0.631023867075545,1.57316434164323,3.76088285698889,4.4075093667459,5.07598763000083 \ 0,0,0,0,0,1.04898040886094 \ 0,0,0,0,0,0 \ 0,0,0,0.00137880130961895,0.00227997634698044,0.00463646241774424 \ 0,2.66765929383284e-05,0.000281563589013347,0.000466850681408009,0.000506933757806273,0.000609848729430626 \ -0.450811556523643,-0.816852292048691,-1.33465923808859,-1.67080357834546,-1.60068995272926,-1.53391838418534 )
{txt}
{com}. di mreldif(S,G)
{res}.00515341
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. lassologit v58 v1-v57 , ///
>         l(.15 .1 .05 .025 0.01 0.005) nocons  lambdan
{res}{txt}Obtaining solution for 6 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
......
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}   0.15000{col 25}   1{col 31}   0.02234{col 43} 6328.73191{txt} {res}{col 56}-0.0251{txt}{col 65}{c |}{res}{col 67}Added v25.
     2{txt}{col 7}{c |}{res}   2{col 13}   0.10000{col 25}   8{col 31}   1.01900{col 43} 5756.45348{txt} {res}{col 56} 0.0718{txt}{col 65}{c |}{res}{col 67}Added v7 v21 v23 v26 v27 v37 v53.
     3{txt}{col 7}{c |}{res}   3{col 13}   0.05000{col 25}  19{col 31}   4.75354{col 43} 4429.24805{txt} {res}{col 56} 0.2935{txt}{col 65}{c |}{res}{col 67}Added v12 v16 v17 v20 v24 v33 v42 v45 v46 v50 v52.
     4{txt}{col 7}{c |}{res}   4{col 13}   0.02500{col 25}  31{col 31}   9.77793{col 43} 3492.58347{txt} {res}{col 56} 0.4525{txt}{col 65}{c |}{res}{col 67}Added v2 v5 v6 v8 v9 v39 v43 v44 v48 v49 v56 v57.
     5{txt}{col 7}{c |}{res}   5{col 13}   0.01000{col 25}  41{col 31}  18.75168{col 43} 2807.93625{txt} {res}{col 56} 0.5695{txt}{col 65}{c |}{res}{col 67}Added v1 v15 v18 v19 v22 v29 v35 v41 v47 v51.
     6{txt}{col 7}{c |}{res}   6{col 13}   0.00500{col 25}  47{col 31}  26.67062{col 43} 2521.58283{txt} {res}{col 56} 0.6195{txt}{col 65}{c |}{res}{col 67}Added v4 v13 v30 v31 v38 v40.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat S = e(betas)'
{txt}
{com}. mat list S
{res}
{txt}S[57,6]
             r1          r2          r3          r4          r5          r6
 v1 {res}          0           0           0           0  -.02006146  -.18090915
{txt} v2 {res}          0           0           0  -.04397075  -.11544876  -.15729578
{txt} v3 {res}          0           0           0           0           0           0
{txt} v4 {res}          0           0           0           0           0   .02487242
{txt} v5 {res}          0           0           0   .06679465   .19566852    .2595454
{txt} v6 {res}          0           0           0   .00224677   .11656607   .20003938
{txt} v7 {res}          0   .26501312   .79336838   1.2430608   1.7000844   1.9126355
{txt} v8 {res}          0           0           0   .15221167    .2964563   .35787464
{txt} v9 {res}          0           0           0   .02503226   .13771482    .2228854
{txt}v10 {res}          0           0           0           0           0           0
{txt}v11 {res}          0           0           0           0           0           0
{txt}v12 {res}          0           0   -.0629518  -.19501881  -.29156238  -.31418649
{txt}v13 {res}          0           0           0           0           0  -.08752765
{txt}v14 {res}          0           0           0           0           0           0
{txt}v15 {res}          0           0           0           0   .12040248   .35415977
{txt}v16 {res}          0           0   .10674838   .21247738   .32846378   .50138712
{txt}v17 {res}          0           0   .07100616   .21720529   .42037042   .56911052
{txt}v18 {res}          0           0           0           0   .04861229   .05754801
{txt}v19 {res}          0           0           0           0   -.0207722  -.04358666
{txt}v20 {res}          0           0   .02388992   .14960086   .29274787   .39807502
{txt}v21 {res}          0    .0024332   .06800583   .08331972   .08944981   .10543508
{txt}v22 {res}          0           0           0           0   .07750573   .14207058
{txt}v23 {res}          0    .2750091   .72503215   1.0667761   1.4427915   1.7201123
{txt}v24 {res}          0           0   .04791781    .2176692   .39468616   .47242716
{txt}v25 {res}  -.0223441  -.13268058  -.31353422  -.54830069  -.93692639  -1.2345624
{txt}v26 {res}          0  -.06089072  -.17754863  -.27709908   -.4647039  -.63136187
{txt}v27 {res}          0  -.01037416  -.07015976  -.12790323  -.25766454  -.51781556
{txt}v28 {res}          0           0           0           0           0           0
{txt}v29 {res}          0           0           0           0   -.0450506  -.35917998
{txt}v30 {res}          0           0           0           0           0  -.16185654
{txt}v31 {res}          0           0           0           0           0  -.04609584
{txt}v32 {res}          0           0           0           0           0           0
{txt}v33 {res}          0           0  -.08286867  -.28532324  -.58998655  -.79166097
{txt}v34 {res}          0           0           0           0           0           0
{txt}v35 {res}          0           0           0           0  -.09188217  -.21969196
{txt}v36 {res}          0           0           0           0           0           0
{txt}v37 {res}          0  -.06303259  -.30753902  -.38442604  -.35838327  -.31491949
{txt}v38 {res}          0           0           0           0           0  -.19187318
{txt}v39 {res}          0           0           0  -.04027656  -.21187894  -.35221793
{txt}v40 {res}          0           0           0           0           0  -.04833423
{txt}v41 {res}          0           0           0           0  -.10331514  -.40679861
{txt}v42 {res}          0           0  -.10372879  -.30584167  -.65985754   -.9641552
{txt}v43 {res}          0           0           0  -.03729477  -.33016877  -.57401122
{txt}v44 {res}          0           0           0  -.12648919  -.43642652  -.76291731
{txt}v45 {res}          0           0  -.16845035  -.36942115  -.60394324  -.73782218
{txt}v46 {res}          0           0  -.15989831  -.39750034  -.80081566  -1.1105821
{txt}v47 {res}          0           0           0           0  -.51157757  -.90202991
{txt}v48 {res}          0           0           0  -.09682151  -.49240934  -.92725786
{txt}v49 {res}          0           0           0   -.1204262  -.55872185  -.85199978
{txt}v50 {res}          0           0  -.25640046  -.73441925  -1.0800519  -1.1075618
{txt}v51 {res}          0           0           0           0   -.6243036  -1.1961592
{txt}v52 {res}          0           0   .02453401   .11323843   .19691359   .22739505
{txt}v53 {res}          0   .20956966   1.1899609   2.1372702     3.28624   3.9489588
{txt}v54 {res}          0           0           0           0           0           0
{txt}v55 {res}          0           0           0           0           0           0
{txt}v56 {res}          0           0           0   .00045081   .00094955   .00149993
{txt}v57 {res}          0           0           0   .00004226   .00014186   .00021363
{reset}
{com}. mat G = ( 0,0,0,0,-0.0200867422123263,-0.180963081874258 \ 0,0,0,-0.0439725562644103,-0.115450410602825,-0.157305593166378 \ 0,0,0,0,0,0 \ 0,0,0,0,0,0.0248737630594846 \ 0,0,0,0.0667434523874724,0.195672120448769,0.259593231810163 \ 0,0,0,0.00222441489484255,0.116547135797629,0.199900956245658 \ 0,0.265014956681658,0.793520363853869,1.24314797930455,1.70013010830079,1.91290049195925 \ 0,0,0,0.152197580164138,0.296452514725046,0.357887094370555 \ 0,0,0,0.0250243043582219,0.137697541543941,0.222761802503909 \ 0,0,0,0,0,0 \ 0,0,0,0,0,0 \ 0,0,-0.0630453430573573,-0.195111020480451,-0.291546951127566,-0.314161971862145 \ 0,0,0,0,0,-0.08756211017273 \ 0,0,0,0,0,0 \ 0,0,0,0,0.120424279364554,0.354187006038407 \ 0,0,0.106750439452276,0.21245760092625,0.328425173653119,0.500696339873835 \ 0,0,0.0709425995331555,0.217156375324238,0.420379234649733,0.56920674322488 \ 0,0,0,0,0.048629175049587,0.057696989533041 \ 0,0,0,0,-0.020789895089672,-0.0436000934364041 \ 0,0,0.0239005584077038,0.149615451999137,0.292733534056024,0.398108722332453 \ 0,0.00243201716946116,0.0680387538806802,0.083328722308754,0.0894534268473376,0.105425668464145 \ 0,0,0,0,0.0775090077892467,0.142075075770615 \ 0,0.275009205461234,0.72537916118375,1.06698790895246,1.44280441321528,1.72027974501352 \ 0,0,0.0479845894262583,0.217738196069698,0.394705684203277,0.472496250592033 \ -0.0223440877877455,-0.132668414169889,-0.313488233648016,-0.54838389731916,-0.936938075822474,-1.23481713891759 \ 0,-0.0609006144400859,-0.177568921138646,-0.277026881054149,-0.464709312028651,-0.63142026128668 \ 0,-0.0103741892860181,-0.070161267233627,-0.127904803022036,-0.257652912101769,-0.517338734762027 \ 0,0,0,0,0,0 \ 0,0,0,0,-0.0450461646744678,-0.359265300176881 \ 0,0,0,0,0,-0.161867521620582 \ 0,0,0,0,0,-0.046122253319544 \ 0,0,0,0,0,0 \ 0,0,-0.0828692104212642,-0.285316225156789,-0.58997916306237,-0.791695735414731 \ 0,0,0,0,0,0 \ 0,0,0,0,-0.0918778074927649,-0.219650592530303 \ 0,0,0,0,0,0 \ 0,-0.0630371681660719,-0.307539958672982,-0.384470440494363,-0.358372967333063,-0.314884147985183 \ 0,0,0,0,0,-0.191588425277942 \ 0,0,0,-0.0403046841400879,-0.211868440351775,-0.352145422328576 \ 0,0,0,0,0,-0.0483661679280512 \ 0,0,0,0,-0.10331814625645,-0.406815105529768 \ 0,0,-0.103710299079598,-0.305807487194226,-0.659857431681319,-0.964166817374027 \ 0,0,0,-0.037295524567914,-0.330160931322528,-0.57400332534841 \ 0,0,0,-0.126478415974642,-0.436418725123807,-0.762901014782063 \ 0,0,-0.168444091298225,-0.369421777328527,-0.603931392308208,-0.737816371222742 \ 0,0,-0.159895066345096,-0.397474317934418,-0.800796674646007,-1.11051462265085 \ 0,0,0,0,-0.511551026426417,-0.901980884578981 \ 0,0,0,-0.0967782082998046,-0.492401520570917,-0.927186765734769 \ 0,0,0,-0.120380350625124,-0.558716653197135,-0.851922825943988 \ 0,0,-0.256214350603698,-0.734193287497686,-1.08003814069837,-1.1074304761778 \ 0,0,0,0,-0.624291484186726,-1.19610720319507 \ 0,0,0.0245878706303293,0.11327052634246,0.196926767089997,0.227467498113895 \ 0,0.209570688353242,1.18953467225439,2.1372473049678,3.28631916741697,3.94944398020316 \ 0,0,0,0,0,0 \ 0,0,0,0,0,0 \ 0,0,0,0.000450775511481365,0.000949618067924462,0.00150040170166375 \ 0,0,0,4.22564218203648e-05,0.000141854663994748,0.000213631540830992 )
{txt}
{com}. di mreldif(S,G)
{res}.0004603
{txt}
{com}. assert mreldif(S,G)<0.03
{txt}
{com}. 
. lassologit v58 v1-v57 , ///
>         l(10 0.1 0.05 0.01 .005 0.001) nostd lambdan
{res}{txt}Obtaining solution for 6 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
......
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  10.00000{col 25}   2{col 31}   0.75408{col 43} 5758.94875{txt} {res}{col 56} 0.0679{txt}{col 65}{c |}{res}{col 67}Added v56 v57 _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}   0.10000{col 25}   6{col 31}   1.87688{col 43} 4632.59750{txt} {res}{col 56} 0.2528{txt}{col 65}{c |}{res}{col 67}Added v19 v21 v25 v27.
     3{txt}{col 7}{c |}{res}   3{col 13}   0.05000{col 25}   9{col 31}   2.74988{col 43} 4135.43661{txt} {res}{col 56} 0.3352{txt}{col 65}{c |}{res}{col 67}Added v16 v52 v55.
     4{txt}{col 7}{c |}{res}   4{col 13}   0.01000{col 25}  27{col 31}  10.21759{col 43} 2767.41411{txt} {res}{col 56} 0.5679{txt}{col 65}{c |}{res}{col 67}Added v2 v4 v5 v7 v8 v12 v17 v18 v20 v22 v23 v24 v26
{txt}{col 7}{c |}{col 65}{c |}{res}{col 67}v33 v42 v44 v45 v46 v53. Removed v55.
     5{txt}{col 7}{c |}{res}   5{col 13}   0.00500{col 25}  31{col 31}  15.55915{col 43} 2431.09288{txt} {res}{col 56} 0.6248{txt}{col 65}{c |}{res}{col 67}Added v6 v10 v49 v55.
     6{txt}{col 7}{c |}{res}   6{col 13}   0.00100{col 25}  48{col 31}  32.78656{col 43} 2122.06825{txt} {res}{col 56} 0.6852{txt}{col 65}{c |}{res}{col 67}Added v1 v3 v9 v14 v15 v28 v29 v30 v35 v36 v37 v38 v39
{txt}{col 7}{c |}{col 65}{c |}{res}{col 67}v41 v43 v48 v54.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat S = e(betas)'
{txt}
{com}. mat list S
{res}
{txt}S[58,6]
               r1          r2          r3          r4          r5          r6
   v1 {res}          0           0           0           0           0  -.19778409
{txt}   v2 {res}          0           0           0  -.02640737  -.06282796  -.11831854
{txt}   v3 {res}          0           0           0           0           0   .10221539
{txt}   v4 {res}          0           0           0   .00518221   .04337058   .25484087
{txt}   v5 {res}          0           0           0   .37784565   .45682998   .55176417
{txt}   v6 {res}          0           0           0           0   .26936548   .62339715
{txt}   v7 {res}          0           0           0   1.1006582   1.5430766   2.1306211
{txt}   v8 {res}          0           0           0   .32065644   .44505385   .54499121
{txt}   v9 {res}          0           0           0           0           0   .44496574
{txt}  v10 {res}          0           0           0           0   .02054731   .10119139
{txt}  v11 {res}          0           0           0           0           0           0
{txt}  v12 {res}          0           0           0  -.05321805  -.11009053  -.14445188
{txt}  v13 {res}          0           0           0           0           0           0
{txt}  v14 {res}          0           0           0           0           0   .05455388
{txt}  v15 {res}          0           0           0           0           0   .11401183
{txt}  v16 {res}          0           0   .21936492   .72878669   .82821067   .93594303
{txt}  v17 {res}          0           0           0   .23558133   .45950723   .79569813
{txt}  v18 {res}          0           0           0   .08954057   .14845751   .14070056
{txt}  v19 {res}          0   .10940662    .1294832   .10910207   .10041799   .08834172
{txt}  v20 {res}          0           0           0   .09607662   .21704328   .56898511
{txt}  v21 {res}          0   .15584491   .28833021   .29535417   .26434445   .22769464
{txt}  v22 {res}          0           0           0   .05732173   .08980879   .23328379
{txt}  v23 {res}          0           0           0   .89897318      1.2347   1.8468381
{txt}  v24 {res}          0           0           0   .21392671   .39514922   .50367481
{txt}  v25 {res}          0  -.13762482  -.42827084  -1.1855121  -1.4214046   -1.785415
{txt}  v26 {res}          0           0           0  -.04584883  -.23042398  -.69433495
{txt}  v27 {res}          0   -.0487535  -.14705382  -.81880034  -1.3521354  -3.9525403
{txt}  v28 {res}          0           0           0           0           0   .22122084
{txt}  v29 {res}          0           0           0           0           0   -.5740448
{txt}  v30 {res}          0           0           0           0           0  -.03702865
{txt}  v31 {res}          0           0           0           0           0           0
{txt}  v32 {res}          0           0           0           0           0           0
{txt}  v33 {res}          0           0           0   -.0939157  -.27757642  -.66033463
{txt}  v34 {res}          0           0           0           0           0           0
{txt}  v35 {res}          0           0           0           0           0  -.37652156
{txt}  v36 {res}          0           0           0           0           0    .4602056
{txt}  v37 {res}          0           0           0           0           0  -.02352392
{txt}  v38 {res}          0           0           0           0           0  -.13248341
{txt}  v39 {res}          0           0           0           0           0    -.433889
{txt}  v40 {res}          0           0           0           0           0           0
{txt}  v41 {res}          0           0           0           0           0  -.47952157
{txt}  v42 {res}          0           0           0  -.36844948  -.62316777  -1.3808727
{txt}  v43 {res}          0           0           0           0           0   -.1410597
{txt}  v44 {res}          0           0           0  -.01742596  -.18149697  -.89246981
{txt}  v45 {res}          0           0           0  -.26919949  -.38036262  -.61729771
{txt}  v46 {res}          0           0           0  -.54664452  -.86596257  -1.3275106
{txt}  v47 {res}          0           0           0           0           0           0
{txt}  v48 {res}          0           0           0           0           0  -.78504838
{txt}  v49 {res}          0           0           0           0  -.04177491  -.76203782
{txt}  v50 {res}          0           0           0           0           0           0
{txt}  v51 {res}          0           0           0           0           0           0
{txt}  v52 {res}          0           0   .03888133    .3910668   .40061504   .40088796
{txt}  v53 {res}          0           0           0   .29974488   1.5271148   4.1510453
{txt}  v54 {res}          0           0           0           0           0   .22281122
{txt}  v55 {res}          0           0   .00218539           0  -.00176158  -.01271967
{txt}  v56 {res}   .0002509   .02115678   .01910168   .01230366    .0102625   .00877865
{txt}  v57 {res}   .0011691   .00015296   .00024273   .00041311    .0004295   .00047305
{txt}_cons {res} -.75266054   -1.403943  -1.4769654  -1.5596371  -1.5558633  -1.5282169
{reset}
{com}. mat G = ( 0,0,0,0,0,-0.196606830871361 \ 0,0,0,-0.0263959141205755,-0.0627951579638412,-0.118426808731766 \ 0,0,0,0,0,0.102694111984808 \ 0,0,0,0.00516845136302719,0.0433845100498495,0.255066666352933 \ 0,0,0,0.377850977275016,0.456724641505493,0.551590006500719 \ 0,0,0,0,0.269285747828233,0.621688751483009 \ 0,0,0,1.10087981403029,1.54368806896071,2.13177925264091 \ 0,0,0,0.320728980387188,0.445263521331234,0.544826963080417 \ 0,0,0,0,0,0.443649074799542 \ 0,0,0,0,0.0204087663270599,0.100911255476619 \ 0,0,0,0,0,0 \ 0,0,0,-0.0531937638595258,-0.110026127046077,-0.144729540552861 \ 0,0,0,0,0,0 \ 0,0,0,0,0,0.0541979592970806 \ 0,0,0,0,0,0.115097436073612 \ 0,0,0.219337625782819,0.728276302338932,0.828344228043666,0.936568757145528 \ 0,0,0,0.235627862792052,0.459662402282917,0.794066489512141 \ 0,0,0,0.0896053571721042,0.148727268825427,0.141156832349543 \ 0,0.109401406887508,0.12949040110083,0.109114656531446,0.100431962365842,0.088465900027753 \ 0,0,0,0.0960780992452676,0.217083256616456,0.56966154977343 \ 0,0.155863471226981,0.288325708867917,0.295300028640053,0.2642762693284,0.227564580072034 \ 0,0,0,0.0573220238010432,0.0897145232657215,0.233672717839671 \ 0,0,0,0.899098761929624,1.23558597332666,1.84929666229257 \ 0,0,0,0.213989045389802,0.395496066797918,0.50471797450479 \ 0,-0.137633831311825,-0.428258460781284,-1.18581357954125,-1.42295663664892,-1.78665244112237 \ 0,0,0,-0.0457689200355376,-0.229636533094445,-0.693978642684788 \ 0,-0.0487632571003764,-0.147039973104196,-0.816361941819738,-1.33920940706366,-3.83283619415318 \ 0,0,0,0,0,0.221839810370222 \ 0,0,0,0,0,-0.571676198017221 \ 0,0,0,0,0,-0.034641955163953 \ 0,0,0,0,0,0 \ 0,0,0,0,0,0 \ 0,0,0,-0.0939506854962543,-0.277644336330768,-0.660202193225169 \ 0,0,0,0,0,0 \ 0,0,0,0,0,-0.375211673639146 \ 0,0,0,0,0,0.462589340216143 \ 0,0,0,0,0,-0.0233857855396148 \ 0,0,0,0,0,-0.13273040571758 \ 0,0,0,0,0,-0.432952185786407 \ 0,0,0,0,0,0 \ 0,0,0,0,0,-0.47832595201352 \ 0,0,0,-0.368318040619443,-0.622511232094226,-1.37637221332031 \ 0,0,0,0,0,-0.139810725682437 \ 0,0,0,-0.0174002302406321,-0.181242700957882,-0.891323650902357 \ 0,0,0,-0.269149657094932,-0.380150922271061,-0.616870622105827 \ 0,0,0,-0.546281049241329,-0.864630097661637,-1.32512423900005 \ 0,0,0,0,0,0 \ 0,0,0,0,0,-0.783172594822248 \ 0,0,0,0,-0.0417654564340482,-0.762406591054006 \ 0,0,0,0,0,0 \ 0,0,0,0,0,0 \ 0,0,0.0388465427763881,0.391143596322809,0.400821242459232,0.401755305686915 \ 0,0,0,0.299926255332921,1.528093609498,4.15578120724715 \ 0,0,0,0,0,0.224049518522976 \ 0,0,0.00228751649055222,0,-0.00149114153314493,-0.0126854106956653 \ 0.000251176249855191,0.0211531130365377,0.0190977387878989,0.0123128199830305,0.0102571927074542,0.0087378756648603 \ 0.00116904746155995,0.000153035327786397,0.000242754480855713,0.000412991010293585,0.000429815225601432,0.000473779800524816 \ -0.752661384082521,-1.40386117252347,-1.47716148408643,-1.56003952656892,-1.55744581223666,-1.5298166412315 )
{txt}
{com}. di mreldif(S,G)
{res}.02476892
{txt}
{com}. assert mreldif(S,G)<0.03 // 3% deviation!
{txt}
{com}.  
. lassologit v58 v1-v57 , ///
>         l(40 10 1  0.1  0.05) nocons nostd lambdan
{res}{txt}Obtaining solution for 5 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
.....
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  40.00000{col 25}   1{col 31}   0.00003{col 43} 6368.88594{txt} {res}{col 56}-0.0316{txt}{col 65}{c |}{res}{col 67}Added v57.
     2{txt}{col 7}{c |}{res}   3{col 13}   1.00000{col 25}   2{col 31}   0.00561{col 43} 6097.93229{txt} {res}{col 56} 0.0129{txt}{col 65}{c |}{res}{col 67}Added v56.
     3{txt}{col 7}{c |}{res}   4{col 13}   0.10000{col 25}   5{col 31}   0.59380{col 43} 5138.62109{txt} {res}{col 56} 0.1702{txt}{col 65}{c |}{res}{col 67}Added v25 v27 v55.
     4{txt}{col 7}{c |}{res}   5{col 13}   0.05000{col 25}  11{col 31}   1.66613{col 43} 4497.91281{txt} {res}{col 56} 0.2776{txt}{col 65}{c |}{res}{col 67}Added v2 v12 v16 v21 v42 v45 v46. Removed v57.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat S = e(betas)'
{txt}
{com}. mat list S
{res}
{txt}S[57,5]
             r1          r2          r3          r4          r5
 v1 {res}          0           0           0           0           0
{txt} v2 {res}          0           0           0           0  -.00388742
{txt} v3 {res}          0           0           0           0           0
{txt} v4 {res}          0           0           0           0           0
{txt} v5 {res}          0           0           0           0           0
{txt} v6 {res}          0           0           0           0           0
{txt} v7 {res}          0           0           0           0           0
{txt} v8 {res}          0           0           0           0           0
{txt} v9 {res}          0           0           0           0           0
{txt}v10 {res}          0           0           0           0           0
{txt}v11 {res}          0           0           0           0           0
{txt}v12 {res}          0           0           0           0  -.06085059
{txt}v13 {res}          0           0           0           0           0
{txt}v14 {res}          0           0           0           0           0
{txt}v15 {res}          0           0           0           0           0
{txt}v16 {res}          0           0           0           0   .06414037
{txt}v17 {res}          0           0           0           0           0
{txt}v18 {res}          0           0           0           0           0
{txt}v19 {res}          0           0           0           0           0
{txt}v20 {res}          0           0           0           0           0
{txt}v21 {res}          0           0           0           0   .07938986
{txt}v22 {res}          0           0           0           0           0
{txt}v23 {res}          0           0           0           0           0
{txt}v24 {res}          0           0           0           0           0
{txt}v25 {res}          0           0           0  -.43330804  -.82648479
{txt}v26 {res}          0           0           0           0           0
{txt}v27 {res}          0           0           0  -.14477986  -.27017973
{txt}v28 {res}          0           0           0           0           0
{txt}v29 {res}          0           0           0           0           0
{txt}v30 {res}          0           0           0           0           0
{txt}v31 {res}          0           0           0           0           0
{txt}v32 {res}          0           0           0           0           0
{txt}v33 {res}          0           0           0           0           0
{txt}v34 {res}          0           0           0           0           0
{txt}v35 {res}          0           0           0           0           0
{txt}v36 {res}          0           0           0           0           0
{txt}v37 {res}          0           0           0           0           0
{txt}v38 {res}          0           0           0           0           0
{txt}v39 {res}          0           0           0           0           0
{txt}v40 {res}          0           0           0           0           0
{txt}v41 {res}          0           0           0           0           0
{txt}v42 {res}          0           0           0           0  -.00074516
{txt}v43 {res}          0           0           0           0           0
{txt}v44 {res}          0           0           0           0           0
{txt}v45 {res}          0           0           0           0  -.14858306
{txt}v46 {res}          0           0           0           0  -.18729426
{txt}v47 {res}          0           0           0           0           0
{txt}v48 {res}          0           0           0           0           0
{txt}v49 {res}          0           0           0           0           0
{txt}v50 {res}          0           0           0           0           0
{txt}v51 {res}          0           0           0           0           0
{txt}v52 {res}          0           0           0           0           0
{txt}v53 {res}          0           0           0           0           0
{txt}v54 {res}          0           0           0           0           0
{txt}v55 {res}          0           0           0   -.0063939  -.01403062
{txt}v56 {res}          0           0   .00561154   .00927929   .01054754
{txt}v57 {res}  .00003411   .00038152  -9.444e-07  -.00004264           0
{reset}
{com}. mat G = ( 0,0,0,0,0 \ 0,0,0,0,-0.00388390194575201 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,-0.0608399932100172 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0.0641514339556632 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0.0793813559307355 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,-0.433326247098604,-0.826496410034253 \ 0,0,0,0,0 \ 0,0,0,-0.144784796466159,-0.270173956885227 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,-0.000744445387214381 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,-0.148578232510563 \ 0,0,0,0,-0.187291134609176 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,-0.00636951077256207,-0.0140453997113308 \ 0,0,0.00561069230547681,0.00927731836362141,0.01054896589884 \ 3.41081748400473e-05,0.000381523296092164,-8.95105672525863e-07,-4.26170125134684e-05,0 )
{txt}
{com}. di mreldif(S,G)
{res}.00002423
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. 
. ********************************************************************************
. *** Verify largest lambda value: Spam data                                                                       ***
. *** comparison with glmnet                                                                                                       ***
. ********************************************************************************  
. 
. $loadspam
{txt}(58 vars, 4,601 obs)

{com}. 
. // OK
. lassologit v58 v1-v57 , lambdan lcount(3)
{res}{txt}Obtaining solution for 3 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
...
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}   0.18727{col 25}   0{col 31}   0.43034{col 43} 6170.15284{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}   0.01873{col 25}  28{col 31}  13.05968{col 43} 2942.59413{txt} {res}{col 56} 0.5401{txt}{col 65}{c |}{res}{col 67}Added v3 v5 v6 v7 v8 v9 v16 v17 v18 v19 v20 v21 v22 v23
{txt}{col 7}{c |}{col 65}{c |}{res}{col 67}v24 v25 v26 v27 v33 v37 v42 v44 v45 v46 v52 v53 v56 v57.
     3{txt}{col 7}{c |}{res}   3{col 13}   0.00187{col 25}  52{col 31}  35.30333{col 43} 2183.44429{txt} {res}{col 56} 0.6777{txt}{col 65}{c |}{res}{col 67}Added v1 v2 v4 v10 v12 v14 v15 v28 v29 v30 v31 v35 v36
{txt}{col 7}{c |}{col 65}{c |}{res}{col 67}v38 v39 v40 v41 v43 v47 v48 v49 v50 v51 v54.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat L= e(lambdas)
{txt}
{com}. di L[1,1]
{res}.18726511
{txt}
{com}. assert reldif(L[1,1],0.1872651)<10e-5
{txt}
{com}.   
. // OK
. lassologit v58 v1-v57 , nostd lambdan  lcount(3)
{res}{txt}Obtaining solution for 3 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
...
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  73.81646{col 25}   0{col 31}   0.43034{col 43} 6170.15284{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}   7.38165{col 25}   2{col 31}   0.78779{col 43} 5653.70028{txt} {res}{col 56} 0.0849{txt}{col 65}{c |}{res}{col 67}Added v56 v57.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat L= e(lambdas)
{txt}
{com}. di L[1,1]
{res}73.816459
{txt}
{com}. assert reldif(L[1,1],73.81646)<10e-5
{txt}
{com}.  
. // OK
. lassologit v58 v1-v57 , nocons lambdan  lcount(3)
{res}{txt}Obtaining solution for 3 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
...
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   2{col 13}   0.01603{col 25}  37{col 31}  13.90974{col 43} 3103.63775{txt} {res}{col 56} 0.5191{txt}{col 65}{c |}{res}{col 67}Added v2 v5 v6 v7 v8 v9 v12 v15 v16 v17 v18 v20 v21 v22
{txt}{col 7}{c |}{col 65}{c |}{res}{col 67}v23 v24 v25 v26 v27 v33 v35 v37 v39 v42 v43 v44 v45 v46
{txt}{col 7}{c |}{col 65}{c |}{res}{col 67}v47 v48 v49 v50 v51 v52 v53 v56 v57.
     2{txt}{col 7}{c |}{res}   3{col 13}   0.00160{col 25}  51{col 31}  40.48332{col 43} 2295.62807{txt} {res}{col 56} 0.6585{txt}{col 65}{c |}{res}{col 67}Added v1 v4 v10 v13 v14 v19 v28 v29 v30 v31 v38 v40 v41
{txt}{col 7}{c |}{col 65}{c |}{res}{col 67}v54.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat L= e(lambdas)
{txt}
{com}. di L[1,1]
{res}.16028589
{txt}
{com}. assert reldif(L[1,1],0.1602859)<10e-5
{txt}
{com}.  
. // OK
. lassologit v58 v1-v57 , nocons nostd lambdan  lcount(3)
{res}{txt}Obtaining solution for 3 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
...
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  43.80048{col 25}   0{col 31}   0.00000{col 43} 6378.34036{txt} {res}{col 56}-0.0337{txt}{col 65}{c |}{res}{col 67}Added v57.
     2{txt}{col 7}{c |}{res}   2{col 13}   4.38005{col 25}   2{col 31}   0.00246{col 43} 6170.28359{txt} {res}{col 56} 0.0012{txt}{col 65}{c |}{res}{col 67}Added v56.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat L= e(lambdas)
{txt}
{com}. di L[1,1]
{res}43.800478
{txt}
{com}. assert reldif(L[1,1],43.80048)<10e-5
{txt}
{com}. 
. 
. ********************************************************************************
. *** Verify largest lambda value: Prostate data                                                           ***
. *** comparison with glmnet                                                                                                       ***
. ********************************************************************************  
. 
. $loadprostate
{txt}(11 vars, 97 obs)

{com}. 
. gen ybin = lpsa > 2
{txt}
{com}. 
. // OK
. lassologit ybin lcavol-pgg45 , lambdan  lcount(3)
{res}{txt}Obtaining solution for 3 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
...
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}   0.24793{col 25}   0{col 31}   0.75567{col 43}  121.55230{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}   0.02479{col 25}   5{col 31}  14.15184{col 43}   85.09286{txt} {res}{col 56} 0.3829{txt}{col 65}{c |}{res}{col 67}Added lcavol lweight lbph svi gleason.
     3{txt}{col 7}{c |}{res}   3{col 13}   0.00248{col 25}   8{col 31}  25.01865{col 43}   83.24043{txt} {res}{col 56} 0.4479{txt}{col 65}{c |}{res}{col 67}Added age lcp pgg45.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat L= e(lambdas)
{txt}
{com}. di L[1,1]
{res}.2479347
{txt}
{com}. assert reldif(L[1,1],0.2479347)<10e-5
{txt}
{com}.   
. // OK
. lassologit ybin lcavol-pgg45 , nostd lambdan  lcount(3)
{res}{txt}Obtaining solution for 3 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
...
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}   4.28685{col 25}   0{col 31}   0.75567{col 43}  121.55230{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added pgg45 _cons.
     2{txt}{col 7}{c |}{res}   3{col 13}   0.04287{col 25}   3{col 31}   1.62046{col 43}   92.81631{txt} {res}{col 56} 0.2862{txt}{col 65}{c |}{res}{col 67}Added lcavol lbph.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat L= e(lambdas)
{txt}
{com}. di L[1,1]
{res}4.286853
{txt}
{com}. assert reldif(L[1,1],4.286853)<10e-5
{txt}
{com}.  
. // OK
. lassologit ybin lcavol-pgg45, nocons lambdan lcount(3)
{res}{txt}Obtaining solution for 3 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
...
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   2{col 13}   0.18871{col 25}   3{col 31}   0.29577{col 43}  113.64207{txt} {res}{col 56} 0.1061{txt}{col 65}{c |}{res}{col 67}Added lcavol lweight gleason.
     2{txt}{col 7}{c |}{res}   3{col 13}   0.01887{col 25}   7{col 31}   3.32475{col 43}   91.25771{txt} {res}{col 56} 0.3450{txt}{col 65}{c |}{res}{col 67}Added age lbph svi pgg45.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat L= e(lambdas)
{txt}
{com}. di L[1,1]
{res}1.8870631
{txt}
{com}. assert reldif(L[1,1],1.887063)<10e-5
{txt}
{com}.  
. // OK
. lassologit ybin lcavol-pgg45 , nocons nostd lambdan lcount(3)
{res}{txt}Obtaining solution for 3 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
...
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  12.14948{col 25}   0{col 31}   0.00000{col 43}  134.47055{txt} {res}{col 56}-0.1063{txt}{col 65}{c |}{res}{col 67}Added age.
     2{txt}{col 7}{c |}{res}   2{col 13}   1.21495{col 25}   2{col 31}   0.02635{col 43}  113.45851{txt} {res}{col 56} 0.0940{txt}{col 65}{c |}{res}{col 67}Added pgg45.
     3{txt}{col 7}{c |}{res}   3{col 13}   0.12149{col 25}   4{col 31}   0.42297{col 43}  103.64897{txt} {res}{col 56} 0.2020{txt}{col 65}{c |}{res}{col 67}Added lcavol lbph.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat L= e(lambdas)
{txt}
{com}. di L[1,1]
{res}12.149485
{txt}
{com}. assert reldif(L[1,1],12.14948)<10e-5
{txt}
{com}. 
. 
. ********************************************************************************
. *** plotting                                                                 ***
. ******************************************************************************** 
. 
. clear all 
{res}{txt}
{com}. 
. $loadprostate
{txt}(11 vars, 97 obs)

{com}. 
. gen ybin = lpsa > 2
{txt}
{com}. 
. lassologit ybin lcavol-pgg45, plotpath(lambda)  
{res}{txt}Obtaining solution for 50 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
..................................................    50

{res}
{txt}  Knot{c |}  ID     Lambda    s      L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  24.04967{col 25}   0{col 31}   0.75567{col 43}  121.55230{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}  21.89237{col 25}   1{col 31}   0.72708{col 43}  118.88228{txt} {res}{col 56} 0.0386{txt}{col 65}{c |}{res}{col 67}Added lcavol.
     3{txt}{col 7}{c |}{res}   7{col 13}  13.68394{col 25}   3{col 31}   0.69877{col 43}  107.79964{txt} {res}{col 56} 0.1629{txt}{col 65}{c |}{res}{col 67}Added lweight gleason.
     4{txt}{col 7}{c |}{res}  14{col 13}   7.08756{col 25}   4{col 31}   7.64951{col 43}   93.43198{txt} {res}{col 56} 0.2977{txt}{col 65}{c |}{res}{col 67}Added svi.
     5{txt}{col 7}{c |}{res}  17{col 13}   5.34623{col 25}   5{col 31}   9.95724{col 43}   91.46466{txt} {res}{col 56} 0.3305{txt}{col 65}{c |}{res}{col 67}Added lbph.
     6{txt}{col 7}{c |}{res}  28{col 13}   1.90138{col 25}   6{col 31}  15.02132{col 43}   86.13353{txt} {res}{col 56} 0.3909{txt}{col 65}{c |}{res}{col 67}Added age.
     7{txt}{col 7}{c |}{res}  31{col 13}   1.43423{col 25}   7{col 31}  15.84016{col 43}   86.71472{txt} {res}{col 56} 0.4028{txt}{col 65}{c |}{res}{col 67}Added lcp.
     8{txt}{col 7}{c |}{res}  34{col 13}   1.08186{col 25}   8{col 31}  17.52795{col 43}   86.80734{txt} {res}{col 56} 0.4186{txt}{col 65}{c |}{res}{col 67}Added pgg45.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.
{res}{txt}
{com}. 
. lassologit ybin lcavol-pgg45, plotpath(lnlambda) plotvar(age svi)
{res}{txt}Obtaining solution for 50 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
..................................................    50

{res}
{txt}  Knot{c |}  ID     Lambda    s      L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  24.04967{col 25}   0{col 31}   0.75567{col 43}  121.55230{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}  21.89237{col 25}   1{col 31}   0.72708{col 43}  118.88228{txt} {res}{col 56} 0.0386{txt}{col 65}{c |}{res}{col 67}Added lcavol.
     3{txt}{col 7}{c |}{res}   7{col 13}  13.68394{col 25}   3{col 31}   0.69877{col 43}  107.79964{txt} {res}{col 56} 0.1629{txt}{col 65}{c |}{res}{col 67}Added lweight gleason.
     4{txt}{col 7}{c |}{res}  14{col 13}   7.08756{col 25}   4{col 31}   7.64951{col 43}   93.43198{txt} {res}{col 56} 0.2977{txt}{col 65}{c |}{res}{col 67}Added svi.
     5{txt}{col 7}{c |}{res}  17{col 13}   5.34623{col 25}   5{col 31}   9.95724{col 43}   91.46466{txt} {res}{col 56} 0.3305{txt}{col 65}{c |}{res}{col 67}Added lbph.
     6{txt}{col 7}{c |}{res}  28{col 13}   1.90138{col 25}   6{col 31}  15.02132{col 43}   86.13353{txt} {res}{col 56} 0.3909{txt}{col 65}{c |}{res}{col 67}Added age.
     7{txt}{col 7}{c |}{res}  31{col 13}   1.43423{col 25}   7{col 31}  15.84016{col 43}   86.71472{txt} {res}{col 56} 0.4028{txt}{col 65}{c |}{res}{col 67}Added lcp.
     8{txt}{col 7}{c |}{res}  34{col 13}   1.08186{col 25}   8{col 31}  17.52795{col 43}   86.80734{txt} {res}{col 56} 0.4186{txt}{col 65}{c |}{res}{col 67}Added pgg45.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.
{res}{txt}(50 real changes made)
{res}{txt}
{com}. 
. lassologit ybin lcavol-pgg45, plotpath(norm) 
{res}{txt}Obtaining solution for 50 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
..................................................    50

{res}
{txt}  Knot{c |}  ID     Lambda    s      L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  24.04967{col 25}   0{col 31}   0.75567{col 43}  121.55230{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}  21.89237{col 25}   1{col 31}   0.72708{col 43}  118.88228{txt} {res}{col 56} 0.0386{txt}{col 65}{c |}{res}{col 67}Added lcavol.
     3{txt}{col 7}{c |}{res}   7{col 13}  13.68394{col 25}   3{col 31}   0.69877{col 43}  107.79964{txt} {res}{col 56} 0.1629{txt}{col 65}{c |}{res}{col 67}Added lweight gleason.
     4{txt}{col 7}{c |}{res}  14{col 13}   7.08756{col 25}   4{col 31}   7.64951{col 43}   93.43198{txt} {res}{col 56} 0.2977{txt}{col 65}{c |}{res}{col 67}Added svi.
     5{txt}{col 7}{c |}{res}  17{col 13}   5.34623{col 25}   5{col 31}   9.95724{col 43}   91.46466{txt} {res}{col 56} 0.3305{txt}{col 65}{c |}{res}{col 67}Added lbph.
     6{txt}{col 7}{c |}{res}  28{col 13}   1.90138{col 25}   6{col 31}  15.02132{col 43}   86.13353{txt} {res}{col 56} 0.3909{txt}{col 65}{c |}{res}{col 67}Added age.
     7{txt}{col 7}{c |}{res}  31{col 13}   1.43423{col 25}   7{col 31}  15.84016{col 43}   86.71472{txt} {res}{col 56} 0.4028{txt}{col 65}{c |}{res}{col 67}Added lcp.
     8{txt}{col 7}{c |}{res}  34{col 13}   1.08186{col 25}   8{col 31}  17.52795{col 43}   86.80734{txt} {res}{col 56} 0.4186{txt}{col 65}{c |}{res}{col 67}Added pgg45.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.
{res}{txt}
{com}. 
. 
. ********************************************************************************
. *** verify post-logit and log-lik value                                                                          *** 
. ********************************************************************************
. 
. clear all 
{res}{txt}
{com}. 
. 
. $loadspam
{txt}(58 vars, 4,601 obs)

{com}. 
. foreach lam of numlist 0.187 0.1 0.07 0.05 0.01 0.005 {c -(}
{txt}  2{com}.  
.         lassologit v58 v1-v57, l(`lam')   postl lambdan
{txt}  3{com}.         mat b1 = e(b)  
{txt}  4{com}.         local L1 = e(ll)
{txt}  5{com}. 
.         local sel = e(selected)
{txt}  6{com}.         di "lambda=`lam'; selected=`sel'"
{txt}  7{com}. 
.         logit v58 `sel', iterate(100)  
{txt}  8{com}.         mat b2 = e(b)  
{txt}  9{com}.         local L2 = e(ll)
{txt} 10{com}. 
.         di mreldif(b1,b2)
{txt} 11{com}. 
.         assert mreldif(b1,b2)<0.0001
{txt} 12{com}. 
.         // verify loglik
.         assert reldif(`L1',`L2')<0.01
{txt} 13{com}. 
. {c )-}
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 14}v21 {c |}{col 21}{res}      0.0009245      0.8584517
{txt}{space 12}_cons {c |}{col 21}{res}     -0.4310903     -1.1097109
{txt}{hline 18}{c BT}{hline 32}
lambda=.187; selected=v21

{res}{txt}Iteration 0:{space 3}log likelihood = {res:-3085.0764}  
Iteration 1:{space 3}log likelihood = {res:-2704.3835}  
Iteration 2:{space 3}log likelihood = {res:-2703.6411}  
Iteration 3:{space 3}log likelihood = {res:-2703.6409}  
{res}
{txt}Logistic regression{col 49}Number of obs{col 67}= {res}     4,601
{txt}{col 49}LR chi2({res}1{txt}){col 67}= {res}    762.87
{txt}{col 49}Prob > chi2{col 67}= {res}    0.0000
{txt}Log likelihood = {res}-2703.6409{txt}{col 49}Pseudo R2{col 67}= {res}    0.1236

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         v58{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      z{col 46}   P>|z|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}v21 {c |}{col 14}{res}{space 2} .8584517{col 26}{space 2} .0368163{col 37}{space 1}   23.32{col 46}{space 3}0.000{col 54}{space 4}  .786293{col 67}{space 3} .9306104
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-1.109711{col 26}{space 2} .0423539{col 37}{space 1}  -26.20{col 46}{space 3}0.000{col 54}{space 4}-1.192723{col 67}{space 3}-1.026699
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
2.234e-14
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v7 {c |}{col 21}{res}      0.5412442      4.2194397
{txt}{space 14}v16 {c |}{col 21}{res}      0.0569502      0.8984170
{txt}{space 14}v21 {c |}{col 21}{res}      0.2448168      0.3940148
{txt}{space 14}v23 {c |}{col 21}{res}      0.5126734      3.8072262
{txt}{space 14}v25 {c |}{col 21}{res}     -0.0071134     -2.7490367
{txt}{space 14}v53 {c |}{col 21}{res}      0.6310249      7.5984195
{txt}{space 14}v57 {c |}{col 21}{res}      0.0000267      0.0011889
{txt}{space 12}_cons {c |}{col 21}{res}     -0.8168528     -1.7667647
{txt}{hline 18}{c BT}{hline 32}
lambda=.1; selected=v7 v16 v21 v23 v25 v53 v57

{res}{txt}Iteration 0:{space 3}log likelihood = {res:-3085.0764}  
Iteration 1:{space 3}log likelihood = {res:-1756.6861}  
Iteration 2:{space 3}log likelihood = {res:-1569.5018}  
Iteration 3:{space 3}log likelihood = {res:-1512.4228}  
Iteration 4:{space 3}log likelihood = {res:-1506.6144}  
Iteration 5:{space 3}log likelihood = {res:-1506.5064}  
Iteration 6:{space 3}log likelihood = {res:-1506.5064}  
{res}
{txt}Logistic regression{col 49}Number of obs{col 67}= {res}     4,601
{txt}{col 49}LR chi2({res}7{txt}){col 67}= {res}   3157.14
{txt}{col 49}Prob > chi2{col 67}= {res}    0.0000
{txt}Log likelihood = {res}-1506.5064{txt}{col 49}Pseudo R2{col 67}= {res}    0.5117

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         v58{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      z{col 46}   P>|z|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 10}v7 {c |}{col 14}{res}{space 2}  4.21944{col 26}{space 2} .3657308{col 37}{space 1}   11.54{col 46}{space 3}0.000{col 54}{space 4} 3.502621{col 67}{space 3} 4.936259
{txt}{space 9}v16 {c |}{col 14}{res}{space 2}  .898417{col 26}{space 2} .0914536{col 37}{space 1}    9.82{col 46}{space 3}0.000{col 54}{space 4} .7191713{col 67}{space 3} 1.077663
{txt}{space 9}v21 {c |}{col 14}{res}{space 2} .3940148{col 26}{space 2}  .036492{col 37}{space 1}   10.80{col 46}{space 3}0.000{col 54}{space 4} .3224919{col 67}{space 3} .4655378
{txt}{space 9}v23 {c |}{col 14}{res}{space 2} 3.807226{col 26}{space 2} .4987968{col 37}{space 1}    7.63{col 46}{space 3}0.000{col 54}{space 4} 2.829602{col 67}{space 3}  4.78485
{txt}{space 9}v25 {c |}{col 14}{res}{space 2}-2.749037{col 26}{space 2} .2717015{col 37}{space 1}  -10.12{col 46}{space 3}0.000{col 54}{space 4}-3.281562{col 67}{space 3}-2.216512
{txt}{space 9}v53 {c |}{col 14}{res}{space 2} 7.598419{col 26}{space 2} .6620765{col 37}{space 1}   11.48{col 46}{space 3}0.000{col 54}{space 4} 6.300773{col 67}{space 3} 8.896066
{txt}{space 9}v57 {c |}{col 14}{res}{space 2} .0011889{col 26}{space 2} .0001322{col 37}{space 1}    8.99{col 46}{space 3}0.000{col 54}{space 4} .0009298{col 67}{space 3} .0014481
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-1.766765{col 26}{space 2} .0655888{col 37}{space 1}  -26.94{col 46}{space 3}0.000{col 54}{space 4}-1.895316{col 67}{space 3}-1.638213
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 6 2}Note: 79 failures and 21 successes completely determined.{p_end}
1.460e-14
{res}warning: post-logit did not converge after 100 iterations.

{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v5 {c |}{col 21}{res}      0.0887044      0.4964612
{txt}{space 15}v6 {c |}{col 21}{res}      0.0811235      0.6855995
{txt}{space 15}v7 {c |}{col 21}{res}      0.8573039      3.7048664
{txt}{space 15}v9 {c |}{col 21}{res}      0.0064684      0.9253495
{txt}{space 14}v16 {c |}{col 21}{res}      0.1696675      0.7676800
{txt}{space 14}v17 {c |}{col 21}{res}      0.0894093      1.3384307
{txt}{space 14}v19 {c |}{col 21}{res}      0.0204993      0.0869667
{txt}{space 14}v21 {c |}{col 21}{res}      0.2812394      0.2667653
{txt}{space 14}v23 {c |}{col 21}{res}      0.7421537      3.4884730
{txt}{space 14}v24 {c |}{col 21}{res}      0.0176598      0.9186041
{txt}{space 14}v25 {c |}{col 21}{res}     -0.0664837     -2.5250532
{txt}{space 14}v52 {c |}{col 21}{res}      0.0938832      0.6999923
{txt}{space 14}v53 {c |}{col 21}{res}      1.1233156      6.3545899
{txt}{space 14}v57 {c |}{col 21}{res}      0.0001765      0.0011362
{txt}{space 12}_cons {c |}{col 21}{res}     -1.0934878     -2.3874793
{txt}{hline 18}{c BT}{hline 32}
lambda=.07; selected=v5 v6 v7 v9 v16 v17 v19 v21 v23 v24 v25 v52 v53 v57

{res}{txt}Iteration 0:{space 3}log likelihood = {res:-3085.0764}  
Iteration 1:{space 3}log likelihood = {res:-1562.0991}  
Iteration 2:{space 3}log likelihood = {res:-1386.1929}  
Iteration 3:{space 3}log likelihood = {res:-1344.9381}  
Iteration 4:{space 3}log likelihood = {res:-1339.1676}  
Iteration 5:{space 3}log likelihood = {res:-1339.1627}  
Iteration 6:{space 3}log likelihood = {res:-1339.1627}  (backed up)
Iteration 7:{space 3}log likelihood = {res:-1339.1627}  (backed up)
Iteration 8:{space 3}log likelihood = {res:-1339.1627}  (backed up)
Iteration 9:{space 3}log likelihood = {res:-1339.1627}  (backed up)
Iteration 10:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 11:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 12:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 13:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 14:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 15:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 16:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 17:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 18:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 19:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 20:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 21:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 22:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 23:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 24:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 25:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 26:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 27:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 28:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 29:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 30:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 31:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 32:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 33:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 34:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 35:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 36:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 37:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 38:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 39:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 40:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 41:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 42:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 43:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 44:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 45:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 46:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 47:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 48:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 49:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 50:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 51:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 52:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 53:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 54:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 55:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 56:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 57:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 58:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 59:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 60:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 61:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 62:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 63:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 64:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 65:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 66:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 67:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 68:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 69:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 70:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 71:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 72:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 73:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 74:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 75:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 76:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 77:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 78:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 79:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 80:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 81:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 82:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 83:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 84:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 85:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 86:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 87:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 88:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 89:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 90:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 91:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 92:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 93:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 94:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 95:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 96:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 97:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 98:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 99:{space 2}log likelihood = {res:-1339.1627}  (backed up)
Iteration 100:{space 1}log likelihood = {res:-1339.1627}  (backed up)
convergence not achieved
{res}
{txt}Logistic regression{col 49}Number of obs{col 67}= {res}     4,601
{txt}{col 49}LR chi2({res}14{txt}){col 67}= {res}   3491.83
{txt}{col 49}Prob > chi2{col 67}= {res}    0.0000
{txt}Log likelihood = {res}-1339.1627{txt}{col 49}Pseudo R2{col 67}= {res}    0.5659

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         v58{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      z{col 46}   P>|z|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 10}v5 {c |}{col 14}{res}{space 2} .4964612{col 26}{space 2} .0662678{col 37}{space 1}    7.49{col 46}{space 3}0.000{col 54}{space 4} .3665786{col 67}{space 3} .6263438
{txt}{space 10}v6 {c |}{col 14}{res}{space 2} .6855995{col 26}{space 2} .1707563{col 37}{space 1}    4.02{col 46}{space 3}0.000{col 54}{space 4} .3509233{col 67}{space 3} 1.020276
{txt}{space 10}v7 {c |}{col 14}{res}{space 2} 3.704866{col 26}{space 2} .3543443{col 37}{space 1}   10.46{col 46}{space 3}0.000{col 54}{space 4} 3.010364{col 67}{space 3} 4.399368
{txt}{space 10}v9 {c |}{col 14}{res}{space 2} .9253495{col 26}{space 2} .2263174{col 37}{space 1}    4.09{col 46}{space 3}0.000{col 54}{space 4} .4817756{col 67}{space 3} 1.368923
{txt}{space 9}v16 {c |}{col 14}{res}{space 2}   .76768{col 26}{space 2} .0927178{col 37}{space 1}    8.28{col 46}{space 3}0.000{col 54}{space 4} .5859564{col 67}{space 3} .9494035
{txt}{space 9}v17 {c |}{col 14}{res}{space 2} 1.338431{col 26}{space 2} .1903765{col 37}{space 1}    7.03{col 46}{space 3}0.000{col 54}{space 4} .9652997{col 67}{space 3} 1.711562
{txt}{space 9}v19 {c |}{col 14}{res}{space 2} .0869667{col 26}{space 2} .0268194{col 37}{space 1}    3.24{col 46}{space 3}0.001{col 54}{space 4} .0344016{col 67}{space 3} .1395319
{txt}{space 9}v21 {c |}{col 14}{res}{space 2} .2667653{col 26}{space 2} .0375431{col 37}{space 1}    7.11{col 46}{space 3}0.000{col 54}{space 4} .1931822{col 67}{space 3} .3403484
{txt}{space 9}v23 {c |}{col 14}{res}{space 2} 3.488473{col 26}{space 2} .5040752{col 37}{space 1}    6.92{col 46}{space 3}0.000{col 54}{space 4} 2.500504{col 67}{space 3} 4.476442
{txt}{space 9}v24 {c |}{col 14}{res}{space 2} .9186041{col 26}{space 2} .2129006{col 37}{space 1}    4.31{col 46}{space 3}0.000{col 54}{space 4} .5013267{col 67}{space 3} 1.335882
{txt}{space 9}v25 {c |}{col 14}{res}{space 2}-2.525053{col 26}{space 2} .2702294{col 37}{space 1}   -9.34{col 46}{space 3}0.000{col 54}{space 4}-3.054693{col 67}{space 3}-1.995413
{txt}{space 9}v52 {c |}{col 14}{res}{space 2} .6999923{col 26}{space 2} .0971799{col 37}{space 1}    7.20{col 46}{space 3}0.000{col 54}{space 4} .5095232{col 67}{space 3} .8904614
{txt}{space 9}v53 {c |}{col 14}{res}{space 2}  6.35459{col 26}{space 2} .6513838{col 37}{space 1}    9.76{col 46}{space 3}0.000{col 54}{space 4} 5.077901{col 67}{space 3} 7.631279
{txt}{space 9}v57 {c |}{col 14}{res}{space 2} .0011362{col 26}{space 2} .0001317{col 37}{space 1}    8.63{col 46}{space 3}0.000{col 54}{space 4} .0008781{col 67}{space 3} .0013943
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-2.387479{col 26}{space 2} .0916472{col 37}{space 1}  -26.05{col 46}{space 3}0.000{col 54}{space 4}-2.567105{col 67}{space 3}-2.207854
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 6 2}Note: 74 failures and 19 successes completely determined.{p_end}
Warning: convergence not achieved
1.688e-14
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v5 {c |}{col 21}{res}      0.1727807      0.4550969
{txt}{space 15}v6 {c |}{col 21}{res}      0.2152931      0.9614203
{txt}{space 15}v7 {c |}{col 21}{res}      1.1426365      3.2847248
{txt}{space 15}v8 {c |}{col 21}{res}      0.1368686      0.6228345
{txt}{space 15}v9 {c |}{col 21}{res}      0.1194438      1.2686870
{txt}{space 14}v16 {c |}{col 21}{res}      0.2610206      1.1365279
{txt}{space 14}v17 {c |}{col 21}{res}      0.1633636      1.1000374
{txt}{space 14}v18 {c |}{col 21}{res}      0.0186096      0.3792675
{txt}{space 14}v19 {c |}{col 21}{res}      0.0354681      0.0478566
{txt}{space 14}v20 {c |}{col 21}{res}      0.0623173      1.6419546
{txt}{space 14}v21 {c |}{col 21}{res}      0.2850692      0.2785537
{txt}{space 14}v23 {c |}{col 21}{res}      0.9087893      3.0333616
{txt}{space 14}v24 {c |}{col 21}{res}      0.1364868      0.7890926
{txt}{space 14}v25 {c |}{col 21}{res}     -0.1194090     -1.8286444
{txt}{space 14}v26 {c |}{col 21}{res}     -0.0365264     -1.1537435
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0021456     -8.0061923
{txt}{space 14}v52 {c |}{col 21}{res}      0.1837436      0.4989944
{txt}{space 14}v53 {c |}{col 21}{res}      1.5733685      5.1962139
{txt}{space 14}v57 {c |}{col 21}{res}      0.0002816      0.0009413
{txt}{space 12}_cons {c |}{col 21}{res}     -1.3345409     -2.1960013
{txt}{hline 18}{c BT}{hline 32}
lambda=.05; selected=v5 v6 v7 v8 v9 v16 v17 v18 v19 v20 v21 v23 v24 v25 v26 v27 v52 v53 v57

{res}{txt}Iteration 0:{space 3}log likelihood = {res:-3085.0764}  
Iteration 1:{space 3}log likelihood = {res:-1469.0752}  
Iteration 2:{space 3}log likelihood = {res:-1283.6935}  
Iteration 3:{space 3}log likelihood = {res:-1197.5571}  
Iteration 4:{space 3}log likelihood = {res:-1176.8582}  
Iteration 5:{space 3}log likelihood = {res: -1171.683}  
Iteration 6:{space 3}log likelihood = {res:-1170.4581}  
Iteration 7:{space 3}log likelihood = {res:-1170.4163}  
Iteration 8:{space 3}log likelihood = {res:-1170.4162}  
{res}
{txt}Logistic regression{col 49}Number of obs{col 67}= {res}     4,601
{txt}{col 49}LR chi2({res}19{txt}){col 67}= {res}   3829.32
{txt}{col 49}Prob > chi2{col 67}= {res}    0.0000
{txt}Log likelihood = {res}-1170.4162{txt}{col 49}Pseudo R2{col 67}= {res}    0.6206

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         v58{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      z{col 46}   P>|z|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 10}v5 {c |}{col 14}{res}{space 2} .4550969{col 26}{space 2} .0707022{col 37}{space 1}    6.44{col 46}{space 3}0.000{col 54}{space 4} .3165231{col 67}{space 3} .5936707
{txt}{space 10}v6 {c |}{col 14}{res}{space 2} .9614203{col 26}{space 2} .2095233{col 37}{space 1}    4.59{col 46}{space 3}0.000{col 54}{space 4} .5507623{col 67}{space 3} 1.372078
{txt}{space 10}v7 {c |}{col 14}{res}{space 2} 3.284725{col 26}{space 2} .3554478{col 37}{space 1}    9.24{col 46}{space 3}0.000{col 54}{space 4}  2.58806{col 67}{space 3}  3.98139
{txt}{space 10}v8 {c |}{col 14}{res}{space 2} .6228345{col 26}{space 2} .1469756{col 37}{space 1}    4.24{col 46}{space 3}0.000{col 54}{space 4} .3347677{col 67}{space 3} .9109014
{txt}{space 10}v9 {c |}{col 14}{res}{space 2} 1.268687{col 26}{space 2} .2753861{col 37}{space 1}    4.61{col 46}{space 3}0.000{col 54}{space 4} .7289401{col 67}{space 3} 1.808434
{txt}{space 9}v16 {c |}{col 14}{res}{space 2} 1.136528{col 26}{space 2} .1236747{col 37}{space 1}    9.19{col 46}{space 3}0.000{col 54}{space 4} .8941299{col 67}{space 3} 1.378926
{txt}{space 9}v17 {c |}{col 14}{res}{space 2} 1.100037{col 26}{space 2}  .213033{col 37}{space 1}    5.16{col 46}{space 3}0.000{col 54}{space 4} .6825004{col 67}{space 3} 1.517574
{txt}{space 9}v18 {c |}{col 14}{res}{space 2} .3792675{col 26}{space 2}  .111105{col 37}{space 1}    3.41{col 46}{space 3}0.001{col 54}{space 4} .1615056{col 67}{space 3} .5970294
{txt}{space 9}v19 {c |}{col 14}{res}{space 2} .0478566{col 26}{space 2} .0294369{col 37}{space 1}    1.63{col 46}{space 3}0.104{col 54}{space 4}-.0098386{col 67}{space 3} .1055518
{txt}{space 9}v20 {c |}{col 14}{res}{space 2} 1.641955{col 26}{space 2} .4716646{col 37}{space 1}    3.48{col 46}{space 3}0.000{col 54}{space 4}  .717509{col 67}{space 3}   2.5664
{txt}{space 9}v21 {c |}{col 14}{res}{space 2} .2785537{col 26}{space 2} .0413681{col 37}{space 1}    6.73{col 46}{space 3}0.000{col 54}{space 4} .1974738{col 67}{space 3} .3596336
{txt}{space 9}v23 {c |}{col 14}{res}{space 2} 3.033362{col 26}{space 2} .4879427{col 37}{space 1}    6.22{col 46}{space 3}0.000{col 54}{space 4} 2.077011{col 67}{space 3} 3.989712
{txt}{space 9}v24 {c |}{col 14}{res}{space 2} .7890926{col 26}{space 2} .2063253{col 37}{space 1}    3.82{col 46}{space 3}0.000{col 54}{space 4} .3847024{col 67}{space 3} 1.193483
{txt}{space 9}v25 {c |}{col 14}{res}{space 2}-1.828644{col 26}{space 2} .2862979{col 37}{space 1}   -6.39{col 46}{space 3}0.000{col 54}{space 4}-2.389778{col 67}{space 3}-1.267511
{txt}{space 9}v26 {c |}{col 14}{res}{space 2}-1.153743{col 26}{space 2} .4202757{col 37}{space 1}   -2.75{col 46}{space 3}0.006{col 54}{space 4}-1.977469{col 67}{space 3}-.3300183
{txt}{space 9}v27 {c |}{col 14}{res}{space 2}-8.006192{col 26}{space 2} 1.986354{col 37}{space 1}   -4.03{col 46}{space 3}0.000{col 54}{space 4}-11.89937{col 67}{space 3} -4.11301
{txt}{space 9}v52 {c |}{col 14}{res}{space 2} .4989944{col 26}{space 2} .0862705{col 37}{space 1}    5.78{col 46}{space 3}0.000{col 54}{space 4} .3299073{col 67}{space 3} .6680815
{txt}{space 9}v53 {c |}{col 14}{res}{space 2} 5.196214{col 26}{space 2} .6349955{col 37}{space 1}    8.18{col 46}{space 3}0.000{col 54}{space 4} 3.951646{col 67}{space 3} 6.440782
{txt}{space 9}v57 {c |}{col 14}{res}{space 2} .0009413{col 26}{space 2} .0001316{col 37}{space 1}    7.15{col 46}{space 3}0.000{col 54}{space 4} .0006834{col 67}{space 3} .0011992
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-2.196001{col 26}{space 2} .0999864{col 37}{space 1}  -21.96{col 46}{space 3}0.000{col 54}{space 4}-2.391971{col 67}{space 3}-2.000032
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 6 2}Note: 410 failures and 17 successes completely determined.{p_end}
9.842e-14
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v2 {c |}{col 21}{res}     -0.0037409     -0.1389110
{txt}{space 15}v3 {c |}{col 21}{res}      0.1011375      0.1052528
{txt}{space 15}v4 {c |}{col 21}{res}      0.0173759      2.3399989
{txt}{space 15}v5 {c |}{col 21}{res}      0.4296060      0.5853019
{txt}{space 15}v6 {c |}{col 21}{res}      0.4399529      0.8359847
{txt}{space 15}v7 {c |}{col 21}{res}      2.0688244      2.4042943
{txt}{space 15}v8 {c |}{col 21}{res}      0.4808568      0.5882269
{txt}{space 15}v9 {c |}{col 21}{res}      0.3601749      0.7213125
{txt}{space 14}v10 {c |}{col 21}{res}      0.0363979      0.1183907
{txt}{space 14}v12 {c |}{col 21}{res}     -0.0308145     -0.1612150
{txt}{space 14}v16 {c |}{col 21}{res}      0.4744442      0.9566529
{txt}{space 14}v17 {c |}{col 21}{res}      0.5376230      1.0240614
{txt}{space 14}v18 {c |}{col 21}{res}      0.2235757      0.1589568
{txt}{space 14}v19 {c |}{col 21}{res}      0.0684679      0.0765814
{txt}{space 14}v20 {c |}{col 21}{res}      0.3023891      1.3204219
{txt}{space 14}v21 {c |}{col 21}{res}      0.2312331      0.1788195
{txt}{space 14}v22 {c |}{col 21}{res}      0.1524290      0.3431311
{txt}{space 14}v23 {c |}{col 21}{res}      1.6218808      2.2021820
{txt}{space 14}v24 {c |}{col 21}{res}      0.5023649      0.4542068
{txt}{space 14}v25 {c |}{col 21}{res}     -0.6504894     -1.9495298
{txt}{space 14}v26 {c |}{col 21}{res}     -0.3118048     -0.8067431
{txt}{space 14}v27 {c |}{col 21}{res}     -0.1501577    -11.7835281
{txt}{space 14}v33 {c |}{col 21}{res}     -0.2648093     -0.8002706
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1250243      0.0036378
{txt}{space 14}v39 {c |}{col 21}{res}     -0.1063193     -0.7635106
{txt}{space 14}v42 {c |}{col 21}{res}     -0.4459358     -2.6936770
{txt}{space 14}v43 {c |}{col 21}{res}     -0.1163321     -1.3224400
{txt}{space 14}v44 {c |}{col 21}{res}     -0.1287170     -1.7394127
{txt}{space 14}v45 {c |}{col 21}{res}     -0.3007246     -0.7909711
{txt}{space 14}v46 {c |}{col 21}{res}     -0.4174007     -1.5924053
{txt}{space 14}v47 {c |}{col 21}{res}     -0.1506039     -2.2954658
{txt}{space 14}v48 {c |}{col 21}{res}     -0.1642561     -4.4529880
{txt}{space 14}v49 {c |}{col 21}{res}     -0.3189394     -1.2608654
{txt}{space 14}v52 {c |}{col 21}{res}      0.4521116      0.3611414
{txt}{space 14}v53 {c |}{col 21}{res}      3.7605479      5.7431487
{txt}{space 14}v56 {c |}{col 21}{res}      0.0013784      0.0113141
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004669      0.0005325
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6707145     -1.5458167
{txt}{hline 18}{c BT}{hline 32}
lambda=.01; selected=v2 v3 v4 v5 v6 v7 v8 v9 v10 v12 v16 v17 v18 v19 v20 v21 v22 v23 v24 v25 v26 v27 v33 v37 v39 v42 v43 v44 v45 v46 v47 v48 v49 v52 v53 v56 v57

{res}{txt}Iteration 0:{space 3}log likelihood = {res:-3085.0764}  
Iteration 1:{space 3}log likelihood = {res: -1289.242}  
Iteration 2:{space 3}log likelihood = {res:-1093.1269}  
Iteration 3:{space 3}log likelihood = {res:-985.64363}  
Iteration 4:{space 3}log likelihood = {res: -964.6346}  
Iteration 5:{space 3}log likelihood = {res:-952.99295}  
Iteration 6:{space 3}log likelihood = {res:-951.33099}  
Iteration 7:{space 3}log likelihood = {res:-951.31994}  
Iteration 8:{space 3}log likelihood = {res:-951.31994}  
{res}
{txt}Logistic regression{col 49}Number of obs{col 67}= {res}     4,601
{txt}{col 49}LR chi2({res}37{txt}){col 67}= {res}   4267.51
{txt}{col 49}Prob > chi2{col 67}= {res}    0.0000
{txt}Log likelihood = {res}-951.31994{txt}{col 49}Pseudo R2{col 67}= {res}    0.6916

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         v58{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      z{col 46}   P>|z|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 10}v2 {c |}{col 14}{res}{space 2} -.138911{col 26}{space 2} .0658722{col 37}{space 1}   -2.11{col 46}{space 3}0.035{col 54}{space 4} -.268018{col 67}{space 3}-.0098039
{txt}{space 10}v3 {c |}{col 14}{res}{space 2} .1052528{col 26}{space 2} .1068607{col 37}{space 1}    0.98{col 46}{space 3}0.325{col 54}{space 4}-.1041904{col 67}{space 3}  .314696
{txt}{space 10}v4 {c |}{col 14}{res}{space 2} 2.339999{col 26}{space 2} 1.504231{col 37}{space 1}    1.56{col 46}{space 3}0.120{col 54}{space 4}-.6082389{col 67}{space 3} 5.288237
{txt}{space 10}v5 {c |}{col 14}{res}{space 2} .5853019{col 26}{space 2} .1019135{col 37}{space 1}    5.74{col 46}{space 3}0.000{col 54}{space 4}  .385555{col 67}{space 3} .7850487
{txt}{space 10}v6 {c |}{col 14}{res}{space 2} .8359847{col 26}{space 2} .2422989{col 37}{space 1}    3.45{col 46}{space 3}0.001{col 54}{space 4} .3610875{col 67}{space 3} 1.310882
{txt}{space 10}v7 {c |}{col 14}{res}{space 2} 2.404294{col 26}{space 2}  .328566{col 37}{space 1}    7.32{col 46}{space 3}0.000{col 54}{space 4} 1.760317{col 67}{space 3} 3.048272
{txt}{space 10}v8 {c |}{col 14}{res}{space 2} .5882269{col 26}{space 2} .1577331{col 37}{space 1}    3.73{col 46}{space 3}0.000{col 54}{space 4} .2790758{col 67}{space 3}  .897378
{txt}{space 10}v9 {c |}{col 14}{res}{space 2} .7213125{col 26}{space 2} .2736839{col 37}{space 1}    2.64{col 46}{space 3}0.008{col 54}{space 4}  .184902{col 67}{space 3} 1.257723
{txt}{space 9}v10 {c |}{col 14}{res}{space 2} .1183907{col 26}{space 2} .0692106{col 37}{space 1}    1.71{col 46}{space 3}0.087{col 54}{space 4}-.0172595{col 67}{space 3}  .254041
{txt}{space 9}v12 {c |}{col 14}{res}{space 2} -.161215{col 26}{space 2} .0723741{col 37}{space 1}   -2.23{col 46}{space 3}0.026{col 54}{space 4}-.3030656{col 67}{space 3}-.0193644
{txt}{space 9}v16 {c |}{col 14}{res}{space 2} .9566529{col 26}{space 2} .1347323{col 37}{space 1}    7.10{col 46}{space 3}0.000{col 54}{space 4} .6925825{col 67}{space 3} 1.220723
{txt}{space 9}v17 {c |}{col 14}{res}{space 2} 1.024061{col 26}{space 2} .2235529{col 37}{space 1}    4.58{col 46}{space 3}0.000{col 54}{space 4} .5859058{col 67}{space 3} 1.462217
{txt}{space 9}v18 {c |}{col 14}{res}{space 2} .1589568{col 26}{space 2} .1116703{col 37}{space 1}    1.42{col 46}{space 3}0.155{col 54}{space 4} -.059913{col 67}{space 3} .3778267
{txt}{space 9}v19 {c |}{col 14}{res}{space 2} .0765814{col 26}{space 2}  .034181{col 37}{space 1}    2.24{col 46}{space 3}0.025{col 54}{space 4} .0095879{col 67}{space 3} .1435749
{txt}{space 9}v20 {c |}{col 14}{res}{space 2} 1.320422{col 26}{space 2} .5628815{col 37}{space 1}    2.35{col 46}{space 3}0.019{col 54}{space 4} .2171945{col 67}{space 3} 2.423649
{txt}{space 9}v21 {c |}{col 14}{res}{space 2} .1788195{col 26}{space 2}  .044944{col 37}{space 1}    3.98{col 46}{space 3}0.000{col 54}{space 4} .0907309{col 67}{space 3}  .266908
{txt}{space 9}v22 {c |}{col 14}{res}{space 2} .3431311{col 26}{space 2} .1360397{col 37}{space 1}    2.52{col 46}{space 3}0.012{col 54}{space 4} .0764983{col 67}{space 3} .6097639
{txt}{space 9}v23 {c |}{col 14}{res}{space 2} 2.202182{col 26}{space 2} .4686514{col 37}{space 1}    4.70{col 46}{space 3}0.000{col 54}{space 4} 1.283642{col 67}{space 3} 3.120722
{txt}{space 9}v24 {c |}{col 14}{res}{space 2} .4542068{col 26}{space 2} .1703579{col 37}{space 1}    2.67{col 46}{space 3}0.008{col 54}{space 4} .1203116{col 67}{space 3} .7881021
{txt}{space 9}v25 {c |}{col 14}{res}{space 2} -1.94953{col 26}{space 2} .2976284{col 37}{space 1}   -6.55{col 46}{space 3}0.000{col 54}{space 4}-2.532871{col 67}{space 3}-1.366189
{txt}{space 9}v26 {c |}{col 14}{res}{space 2}-.8067431{col 26}{space 2} .4032844{col 37}{space 1}   -2.00{col 46}{space 3}0.045{col 54}{space 4}-1.597166{col 67}{space 3}-.0163202
{txt}{space 9}v27 {c |}{col 14}{res}{space 2}-11.78353{col 26}{space 2} 1.787256{col 37}{space 1}   -6.59{col 46}{space 3}0.000{col 54}{space 4}-15.28649{col 67}{space 3} -8.28057
{txt}{space 9}v33 {c |}{col 14}{res}{space 2}-.8002706{col 26}{space 2} .2982082{col 37}{space 1}   -2.68{col 46}{space 3}0.007{col 54}{space 4}-1.384748{col 67}{space 3}-.2157932
{txt}{space 9}v37 {c |}{col 14}{res}{space 2} .0036378{col 26}{space 2}  .174055{col 37}{space 1}    0.02{col 46}{space 3}0.983{col 54}{space 4}-.3375037{col 67}{space 3} .3447792
{txt}{space 9}v39 {c |}{col 14}{res}{space 2}-.7635106{col 26}{space 2} .3752802{col 37}{space 1}   -2.03{col 46}{space 3}0.042{col 54}{space 4}-1.499046{col 67}{space 3} -.027975
{txt}{space 9}v42 {c |}{col 14}{res}{space 2}-2.693677{col 26}{space 2} .8363757{col 37}{space 1}   -3.22{col 46}{space 3}0.001{col 54}{space 4}-4.332943{col 67}{space 3}-1.054411
{txt}{space 9}v43 {c |}{col 14}{res}{space 2} -1.32244{col 26}{space 2} .8192734{col 37}{space 1}   -1.61{col 46}{space 3}0.106{col 54}{space 4}-2.928186{col 67}{space 3} .2833064
{txt}{space 9}v44 {c |}{col 14}{res}{space 2}-1.739413{col 26}{space 2} .5320299{col 37}{space 1}   -3.27{col 46}{space 3}0.001{col 54}{space 4}-2.782172{col 67}{space 3}-.6966533
{txt}{space 9}v45 {c |}{col 14}{res}{space 2}-.7909711{col 26}{space 2}  .153113{col 37}{space 1}   -5.17{col 46}{space 3}0.000{col 54}{space 4}-1.091067{col 67}{space 3}-.4908751
{txt}{space 9}v46 {c |}{col 14}{res}{space 2}-1.592405{col 26}{space 2} .2733737{col 37}{space 1}   -5.83{col 46}{space 3}0.000{col 54}{space 4}-2.128208{col 67}{space 3}-1.056603
{txt}{space 9}v47 {c |}{col 14}{res}{space 2}-2.295466{col 26}{space 2} 1.622999{col 37}{space 1}   -1.41{col 46}{space 3}0.157{col 54}{space 4}-5.476486{col 67}{space 3} .8855545
{txt}{space 9}v48 {c |}{col 14}{res}{space 2}-4.452988{col 26}{space 2} 1.726587{col 37}{space 1}   -2.58{col 46}{space 3}0.010{col 54}{space 4}-7.837036{col 67}{space 3} -1.06894
{txt}{space 9}v49 {c |}{col 14}{res}{space 2}-1.260865{col 26}{space 2} .4175197{col 37}{space 1}   -3.02{col 46}{space 3}0.003{col 54}{space 4}-2.079189{col 67}{space 3}-.4425418
{txt}{space 9}v52 {c |}{col 14}{res}{space 2} .3611414{col 26}{space 2} .0890868{col 37}{space 1}    4.05{col 46}{space 3}0.000{col 54}{space 4} .1865345{col 67}{space 3} .5357482
{txt}{space 9}v53 {c |}{col 14}{res}{space 2} 5.743149{col 26}{space 2} .7275702{col 37}{space 1}    7.89{col 46}{space 3}0.000{col 54}{space 4} 4.317137{col 67}{space 3}  7.16916
{txt}{space 9}v56 {c |}{col 14}{res}{space 2} .0113141{col 26}{space 2} .0017512{col 37}{space 1}    6.46{col 46}{space 3}0.000{col 54}{space 4} .0078818{col 67}{space 3} .0147463
{txt}{space 9}v57 {c |}{col 14}{res}{space 2} .0005325{col 26}{space 2} .0001693{col 37}{space 1}    3.15{col 46}{space 3}0.002{col 54}{space 4} .0002008{col 67}{space 3} .0008642
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-1.545817{col 26}{space 2} .1258941{col 37}{space 1}  -12.28{col 46}{space 3}0.000{col 54}{space 4}-1.792565{col 67}{space 3}-1.299069
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 6 2}Note: 544 failures and 30 successes completely determined.{p_end}
1.334e-13
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.0422566     -0.4523281
{txt}{space 15}v2 {c |}{col 21}{res}     -0.0512758     -0.1504532
{txt}{space 15}v3 {c |}{col 21}{res}      0.1188168      0.0988274
{txt}{space 15}v4 {c |}{col 21}{res}      0.0526757      2.3116675
{txt}{space 15}v5 {c |}{col 21}{res}      0.4847238      0.5488941
{txt}{space 15}v6 {c |}{col 21}{res}      0.4920480      0.8192193
{txt}{space 15}v7 {c |}{col 21}{res}      2.2297529      2.3093270
{txt}{space 15}v8 {c |}{col 21}{res}      0.5311637      0.5722020
{txt}{space 15}v9 {c |}{col 21}{res}      0.4285709      0.6623599
{txt}{space 14}v10 {c |}{col 21}{res}      0.0661834      0.1173268
{txt}{space 14}v12 {c |}{col 21}{res}     -0.0890686     -0.1378215
{txt}{space 14}v14 {c |}{col 21}{res}      0.0080481      0.1683385
{txt}{space 14}v15 {c |}{col 21}{res}      0.1881182      1.2441411
{txt}{space 14}v16 {c |}{col 21}{res}      0.5830756      0.9982845
{txt}{space 14}v17 {c |}{col 21}{res}      0.6665287      1.0019607
{txt}{space 14}v18 {c |}{col 21}{res}      0.2325277      0.1128352
{txt}{space 14}v19 {c |}{col 21}{res}      0.0744252      0.0714617
{txt}{space 14}v20 {c |}{col 21}{res}      0.4010756      1.0847420
{txt}{space 14}v21 {c |}{col 21}{res}      0.2175170      0.2185119
{txt}{space 14}v22 {c |}{col 21}{res}      0.2125489      0.3520371
{txt}{space 14}v23 {c |}{col 21}{res}      1.8809046      2.1495116
{txt}{space 14}v24 {c |}{col 21}{res}      0.5536729      0.4271774
{txt}{space 14}v25 {c |}{col 21}{res}     -0.9477607     -1.8589437
{txt}{space 14}v26 {c |}{col 21}{res}     -0.4763787     -0.8881947
{txt}{space 14}v27 {c |}{col 21}{res}     -0.4648550    -11.4017757
{txt}{space 14}v29 {c |}{col 21}{res}     -0.1131577     -2.4736247
{txt}{space 14}v33 {c |}{col 21}{res}     -0.4653176     -0.7285395
{txt}{space 14}v35 {c |}{col 21}{res}     -0.0637580     -2.1615035
{txt}{space 14}v37 {c |}{col 21}{res}     -0.0889362      0.0075332
{txt}{space 14}v38 {c |}{col 21}{res}     -0.0064648     -0.5566300
{txt}{space 14}v39 {c |}{col 21}{res}     -0.2245650     -0.7307393
{txt}{space 14}v41 {c |}{col 21}{res}     -0.2996689    -44.0279212
{txt}{space 14}v42 {c |}{col 21}{res}     -0.7082101     -2.5860352
{txt}{space 14}v43 {c |}{col 21}{res}     -0.2712233     -1.3714545
{txt}{space 14}v44 {c |}{col 21}{res}     -0.3739589     -1.5813728
{txt}{space 14}v45 {c |}{col 21}{res}     -0.4326240     -0.7865380
{txt}{space 14}v46 {c |}{col 21}{res}     -0.7046002     -1.4113620
{txt}{space 14}v47 {c |}{col 21}{res}     -0.7141176     -2.0788162
{txt}{space 14}v48 {c |}{col 21}{res}     -0.5871826     -3.8399523
{txt}{space 14}v49 {c |}{col 21}{res}     -0.6186623     -1.3437230
{txt}{space 14}v51 {c |}{col 21}{res}     -0.1370985     -0.6993427
{txt}{space 14}v52 {c |}{col 21}{res}      0.4580812      0.3452447
{txt}{space 14}v53 {c |}{col 21}{res}      4.4062312      5.5578661
{txt}{space 14}v56 {c |}{col 21}{res}      0.0022783      0.0105219
{txt}{space 14}v57 {c |}{col 21}{res}      0.0005070      0.0007773
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6005076     -1.4811996
{txt}{hline 18}{c BT}{hline 32}
lambda=.005; selected=v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v12 v14 v15 v16 v17 v18 v19 v20 v21 v22 v23 v24 v25 v26 v27 v29 v33 v35 v37 v38 v39 v41 v42 v43 v44 v45 v46 v47 v48 v49 v51 v52 v53 v56 v57

{res}{txt}Iteration 0:{space 3}log likelihood = {res:-3085.0764}  
Iteration 1:{space 3}log likelihood = {res:-1280.6273}  
Iteration 2:{space 3}log likelihood = {res:-1082.8591}  
Iteration 3:{space 3}log likelihood = {res:-965.79036}  
Iteration 4:{space 3}log likelihood = {res:-938.03089}  
Iteration 5:{space 3}log likelihood = {res:-924.35308}  
Iteration 6:{space 3}log likelihood = {res:-922.17964}  
Iteration 7:{space 3}log likelihood = {res:-921.83284}  
Iteration 8:{space 3}log likelihood = {res:-921.81424}  
Iteration 9:{space 3}log likelihood = {res:-921.81424}  
{res}
{txt}Logistic regression{col 49}Number of obs{col 67}= {res}     4,601
{txt}{col 49}LR chi2({res}45{txt}){col 67}= {res}   4326.52
{txt}{col 49}Prob > chi2{col 67}= {res}    0.0000
{txt}Log likelihood = {res}-921.81424{txt}{col 49}Pseudo R2{col 67}= {res}    0.7012

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         v58{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      z{col 46}   P>|z|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 10}v1 {c |}{col 14}{res}{space 2}-.4523281{col 26}{space 2} .2136864{col 37}{space 1}   -2.12{col 46}{space 3}0.034{col 54}{space 4}-.8711458{col 67}{space 3}-.0335104
{txt}{space 10}v2 {c |}{col 14}{res}{space 2}-.1504532{col 26}{space 2} .0688535{col 37}{space 1}   -2.19{col 46}{space 3}0.029{col 54}{space 4}-.2854035{col 67}{space 3}-.0155029
{txt}{space 10}v3 {c |}{col 14}{res}{space 2} .0988274{col 26}{space 2} .1092798{col 37}{space 1}    0.90{col 46}{space 3}0.366{col 54}{space 4}-.1153571{col 67}{space 3} .3130119
{txt}{space 10}v4 {c |}{col 14}{res}{space 2} 2.311668{col 26}{space 2} 1.502323{col 37}{space 1}    1.54{col 46}{space 3}0.124{col 54}{space 4}-.6328316{col 67}{space 3} 5.256167
{txt}{space 10}v5 {c |}{col 14}{res}{space 2} .5488941{col 26}{space 2} .1006594{col 37}{space 1}    5.45{col 46}{space 3}0.000{col 54}{space 4} .3516054{col 67}{space 3} .7461829
{txt}{space 10}v6 {c |}{col 14}{res}{space 2} .8192193{col 26}{space 2} .2426995{col 37}{space 1}    3.38{col 46}{space 3}0.001{col 54}{space 4}  .343537{col 67}{space 3} 1.294902
{txt}{space 10}v7 {c |}{col 14}{res}{space 2} 2.309327{col 26}{space 2} .3256075{col 37}{space 1}    7.09{col 46}{space 3}0.000{col 54}{space 4} 1.671148{col 67}{space 3} 2.947506
{txt}{space 10}v8 {c |}{col 14}{res}{space 2}  .572202{col 26}{space 2} .1662842{col 37}{space 1}    3.44{col 46}{space 3}0.001{col 54}{space 4} .2462909{col 67}{space 3}  .898113
{txt}{space 10}v9 {c |}{col 14}{res}{space 2} .6623599{col 26}{space 2} .2741028{col 37}{space 1}    2.42{col 46}{space 3}0.016{col 54}{space 4} .1251284{col 67}{space 3} 1.199592
{txt}{space 9}v10 {c |}{col 14}{res}{space 2} .1173268{col 26}{space 2} .0700561{col 37}{space 1}    1.67{col 46}{space 3}0.094{col 54}{space 4}-.0199806{col 67}{space 3} .2546342
{txt}{space 9}v12 {c |}{col 14}{res}{space 2}-.1378215{col 26}{space 2} .0731265{col 37}{space 1}   -1.88{col 46}{space 3}0.059{col 54}{space 4}-.2811467{col 67}{space 3} .0055037
{txt}{space 9}v14 {c |}{col 14}{res}{space 2} .1683385{col 26}{space 2} .1335325{col 37}{space 1}    1.26{col 46}{space 3}0.207{col 54}{space 4}-.0933804{col 67}{space 3} .4300573
{txt}{space 9}v15 {c |}{col 14}{res}{space 2} 1.244141{col 26}{space 2} .7075049{col 37}{space 1}    1.76{col 46}{space 3}0.079{col 54}{space 4} -.142543{col 67}{space 3} 2.630825
{txt}{space 9}v16 {c |}{col 14}{res}{space 2} .9982845{col 26}{space 2} .1421045{col 37}{space 1}    7.03{col 46}{space 3}0.000{col 54}{space 4} .7197648{col 67}{space 3} 1.276804
{txt}{space 9}v17 {c |}{col 14}{res}{space 2} 1.001961{col 26}{space 2} .2249686{col 37}{space 1}    4.45{col 46}{space 3}0.000{col 54}{space 4} .5610304{col 67}{space 3} 1.442891
{txt}{space 9}v18 {c |}{col 14}{res}{space 2} .1128352{col 26}{space 2} .1164141{col 37}{space 1}    0.97{col 46}{space 3}0.332{col 54}{space 4}-.1153322{col 67}{space 3} .3410026
{txt}{space 9}v19 {c |}{col 14}{res}{space 2} .0714617{col 26}{space 2} .0343223{col 37}{space 1}    2.08{col 46}{space 3}0.037{col 54}{space 4} .0041913{col 67}{space 3} .1387321
{txt}{space 9}v20 {c |}{col 14}{res}{space 2} 1.084742{col 26}{space 2} .5365706{col 37}{space 1}    2.02{col 46}{space 3}0.043{col 54}{space 4} .0330829{col 67}{space 3} 2.136401
{txt}{space 9}v21 {c |}{col 14}{res}{space 2} .2185119{col 26}{space 2} .0491656{col 37}{space 1}    4.44{col 46}{space 3}0.000{col 54}{space 4} .1221491{col 67}{space 3} .3148746
{txt}{space 9}v22 {c |}{col 14}{res}{space 2} .3520371{col 26}{space 2} .1420235{col 37}{space 1}    2.48{col 46}{space 3}0.013{col 54}{space 4} .0736761{col 67}{space 3}  .630398
{txt}{space 9}v23 {c |}{col 14}{res}{space 2} 2.149512{col 26}{space 2} .4689064{col 37}{space 1}    4.58{col 46}{space 3}0.000{col 54}{space 4} 1.230472{col 67}{space 3} 3.068551
{txt}{space 9}v24 {c |}{col 14}{res}{space 2} .4271774{col 26}{space 2} .1639774{col 37}{space 1}    2.61{col 46}{space 3}0.009{col 54}{space 4} .1057875{col 67}{space 3} .7485672
{txt}{space 9}v25 {c |}{col 14}{res}{space 2}-1.858944{col 26}{space 2} .2968632{col 37}{space 1}   -6.26{col 46}{space 3}0.000{col 54}{space 4}-2.440785{col 67}{space 3}-1.277103
{txt}{space 9}v26 {c |}{col 14}{res}{space 2}-.8881947{col 26}{space 2} .4157542{col 37}{space 1}   -2.14{col 46}{space 3}0.033{col 54}{space 4}-1.703058{col 67}{space 3}-.0733314
{txt}{space 9}v27 {c |}{col 14}{res}{space 2}-11.40178{col 26}{space 2} 1.810696{col 37}{space 1}   -6.30{col 46}{space 3}0.000{col 54}{space 4}-14.95068{col 67}{space 3}-7.852876
{txt}{space 9}v29 {c |}{col 14}{res}{space 2}-2.473625{col 26}{space 2} 1.460205{col 37}{space 1}   -1.69{col 46}{space 3}0.090{col 54}{space 4}-5.335573{col 67}{space 3} .3883235
{txt}{space 9}v33 {c |}{col 14}{res}{space 2}-.7285395{col 26}{space 2} .3046051{col 37}{space 1}   -2.39{col 46}{space 3}0.017{col 54}{space 4}-1.325555{col 67}{space 3}-.1315244
{txt}{space 9}v35 {c |}{col 14}{res}{space 2}-2.161504{col 26}{space 2} .8112503{col 37}{space 1}   -2.66{col 46}{space 3}0.008{col 54}{space 4}-3.751525{col 67}{space 3}-.5714821
{txt}{space 9}v37 {c |}{col 14}{res}{space 2} .0075332{col 26}{space 2} .1741224{col 37}{space 1}    0.04{col 46}{space 3}0.965{col 54}{space 4}-.3337404{col 67}{space 3} .3488067
{txt}{space 9}v38 {c |}{col 14}{res}{space 2}  -.55663{col 26}{space 2}  .391743{col 37}{space 1}   -1.42{col 46}{space 3}0.155{col 54}{space 4}-1.324432{col 67}{space 3} .2111722
{txt}{space 9}v39 {c |}{col 14}{res}{space 2}-.7307393{col 26}{space 2} .3666382{col 37}{space 1}   -1.99{col 46}{space 3}0.046{col 54}{space 4}-1.449337{col 67}{space 3}-.0121417
{txt}{space 9}v41 {c |}{col 14}{res}{space 2}-44.02792{col 26}{space 2} 26.27617{col 37}{space 1}   -1.68{col 46}{space 3}0.094{col 54}{space 4}-95.52826{col 67}{space 3} 7.472421
{txt}{space 9}v42 {c |}{col 14}{res}{space 2}-2.586035{col 26}{space 2} .8220483{col 37}{space 1}   -3.15{col 46}{space 3}0.002{col 54}{space 4} -4.19722{col 67}{space 3}-.9748502
{txt}{space 9}v43 {c |}{col 14}{res}{space 2}-1.371454{col 26}{space 2} .8306267{col 37}{space 1}   -1.65{col 46}{space 3}0.099{col 54}{space 4}-2.999453{col 67}{space 3} .2565439
{txt}{space 9}v44 {c |}{col 14}{res}{space 2}-1.581373{col 26}{space 2} .5311944{col 37}{space 1}   -2.98{col 46}{space 3}0.003{col 54}{space 4}-2.622495{col 67}{space 3} -.540251
{txt}{space 9}v45 {c |}{col 14}{res}{space 2} -.786538{col 26}{space 2}  .153215{col 37}{space 1}   -5.13{col 46}{space 3}0.000{col 54}{space 4}-1.086834{col 67}{space 3}-.4862421
{txt}{space 9}v46 {c |}{col 14}{res}{space 2}-1.411362{col 26}{space 2} .2658589{col 37}{space 1}   -5.31{col 46}{space 3}0.000{col 54}{space 4}-1.932436{col 67}{space 3}-.8902881
{txt}{space 9}v47 {c |}{col 14}{res}{space 2}-2.078816{col 26}{space 2} 1.571554{col 37}{space 1}   -1.32{col 46}{space 3}0.186{col 54}{space 4}-5.159006{col 67}{space 3} 1.001374
{txt}{space 9}v48 {c |}{col 14}{res}{space 2}-3.839952{col 26}{space 2} 1.589496{col 37}{space 1}   -2.42{col 46}{space 3}0.016{col 54}{space 4}-6.955306{col 67}{space 3}-.7245981
{txt}{space 9}v49 {c |}{col 14}{res}{space 2}-1.343723{col 26}{space 2} .4369923{col 37}{space 1}   -3.07{col 46}{space 3}0.002{col 54}{space 4}-2.200212{col 67}{space 3}-.4872339
{txt}{space 9}v51 {c |}{col 14}{res}{space 2}-.6993427{col 26}{space 2} .8448507{col 37}{space 1}   -0.83{col 46}{space 3}0.408{col 54}{space 4} -2.35522{col 67}{space 3} .9565343
{txt}{space 9}v52 {c |}{col 14}{res}{space 2} .3452447{col 26}{space 2} .0885411{col 37}{space 1}    3.90{col 46}{space 3}0.000{col 54}{space 4} .1717072{col 67}{space 3} .5187821
{txt}{space 9}v53 {c |}{col 14}{res}{space 2} 5.557866{col 26}{space 2} .7125045{col 37}{space 1}    7.80{col 46}{space 3}0.000{col 54}{space 4} 4.161383{col 67}{space 3} 6.954349
{txt}{space 9}v56 {c |}{col 14}{res}{space 2} .0105219{col 26}{space 2} .0017995{col 37}{space 1}    5.85{col 46}{space 3}0.000{col 54}{space 4}  .006995{col 67}{space 3} .0140489
{txt}{space 9}v57 {c |}{col 14}{res}{space 2} .0007773{col 26}{space 2} .0002096{col 37}{space 1}    3.71{col 46}{space 3}0.000{col 54}{space 4} .0003664{col 67}{space 3} .0011882
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}  -1.4812{col 26}{space 2} .1296569{col 37}{space 1}  -11.42{col 46}{space 3}0.000{col 54}{space 4}-1.735323{col 67}{space 3}-1.227077
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 6 2}Note: 665 failures and 29 successes completely determined.{p_end}
5.897e-13

{com}. //
. 
. 
. ********************************************************************************
. *** compare results: single vs multiple lambdas                                                          *** 
. ********************************************************************************
. 
. 
. clear all 
{res}{txt}
{com}. 
. $loadspam
{txt}(58 vars, 4,601 obs)

{com}. 
. 
. *******
. 
. lassologit v58 v1-v57, l(0.187 0.1 0.07 0.05 0.01 ) lambdan quadp noseqr tolopt(1e-14)
{res}{txt}Obtaining solution for 5 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
.....
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}   0.18700{col 25}   1{col 31}   0.43201{col 43} 6171.98872{txt} {res}{col 56} 0.0003{txt}{col 65}{c |}{res}{col 67}Added v21 _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}   0.10000{col 25}   7{col 31}   2.81070{col 43} 5083.09675{txt} {res}{col 56} 0.1804{txt}{col 65}{c |}{res}{col 67}Added v7 v16 v23 v25 v53 v57.
     3{txt}{col 7}{c |}{res}   3{col 13}   0.07000{col 25}  14{col 31}   4.73158{col 43} 4418.72233{txt} {res}{col 56} 0.2924{txt}{col 65}{c |}{res}{col 67}Added v5 v6 v9 v17 v19 v24 v52.
     4{txt}{col 7}{c |}{res}   4{col 13}   0.05000{col 25}  19{col 31}   6.90816{col 43} 3913.66596{txt} {res}{col 56} 0.3772{txt}{col 65}{c |}{res}{col 67}Added v8 v18 v20 v26 v27.
     5{txt}{col 7}{c |}{res}   5{col 13}   0.01000{col 25}  37{col 31}  17.62002{col 43} 2616.28666{txt} {res}{col 56} 0.5984{txt}{col 65}{c |}{res}{col 67}Added v2 v3 v4 v10 v12 v22 v33 v37 v39 v42 v43 v44 v45
{txt}{col 7}{c |}{col 65}{c |}{res}{col 67}v46 v47 v48 v49 v56.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat B = e(betas)
{txt}
{com}. 
. 
. local j = 1
{txt}
{com}. foreach lam of numlist 0.187 0.1 0.07 0.05 0.01 {c -(}
{txt}  2{com}.  
.         lassologit v58 v1-v57, l(`lam')   lambdan quadp noseqr tolopt(1e-14)
{txt}  3{com}.         mat bj = e(beta)
{txt}  4{com}.         
.         mat Bj = B[`j',1..58]
{txt}  5{com}.         
.         di "lambda=`lam'"
{txt}  6{com}.         
.         di mreldif(bj,Bj)
{txt}  7{com}.         
.         assert mreldif(bj,Bj)<0.001
{txt}  8{com}.         
.         local j = `j' + 1
{txt}  9{com}. 
. {c )-}
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 14}v21 {c |}{col 21}{res}      0.0009245      0.8584517
{txt}{space 12}_cons {c |}{col 21}{res}     -0.4310903     -1.1097109
{txt}{hline 18}{c BT}{hline 32}
lambda=.187
0
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v7 {c |}{col 21}{res}      0.5412443      4.2194397
{txt}{space 14}v16 {c |}{col 21}{res}      0.0569502      0.8984170
{txt}{space 14}v21 {c |}{col 21}{res}      0.2448168      0.3940148
{txt}{space 14}v23 {c |}{col 21}{res}      0.5126733      3.8072262
{txt}{space 14}v25 {c |}{col 21}{res}     -0.0071134     -2.7490367
{txt}{space 14}v53 {c |}{col 21}{res}      0.6310249      7.5984195
{txt}{space 14}v57 {c |}{col 21}{res}      0.0000267      0.0011889
{txt}{space 12}_cons {c |}{col 21}{res}     -0.8168529     -1.7667647
{txt}{hline 18}{c BT}{hline 32}
lambda=.1
1.313e-16
{res}warning: post-logit did not converge after 100 iterations.

{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v5 {c |}{col 21}{res}      0.0887044      0.4964612
{txt}{space 15}v6 {c |}{col 21}{res}      0.0811233      0.6855995
{txt}{space 15}v7 {c |}{col 21}{res}      0.8573037      3.7048664
{txt}{space 15}v9 {c |}{col 21}{res}      0.0064682      0.9253495
{txt}{space 14}v16 {c |}{col 21}{res}      0.1696674      0.7676800
{txt}{space 14}v17 {c |}{col 21}{res}      0.0894092      1.3384307
{txt}{space 14}v19 {c |}{col 21}{res}      0.0204993      0.0869667
{txt}{space 14}v21 {c |}{col 21}{res}      0.2812394      0.2667653
{txt}{space 14}v23 {c |}{col 21}{res}      0.7421539      3.4884730
{txt}{space 14}v24 {c |}{col 21}{res}      0.0176598      0.9186041
{txt}{space 14}v25 {c |}{col 21}{res}     -0.0664838     -2.5250532
{txt}{space 14}v52 {c |}{col 21}{res}      0.0938832      0.6999923
{txt}{space 14}v53 {c |}{col 21}{res}      1.1233156      6.3545899
{txt}{space 14}v57 {c |}{col 21}{res}      0.0001765      0.0011362
{txt}{space 12}_cons {c |}{col 21}{res}     -1.0934877     -2.3874793
{txt}{hline 18}{c BT}{hline 32}
lambda=.07
1.951e-15
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v5 {c |}{col 21}{res}      0.1727808      0.4550969
{txt}{space 15}v6 {c |}{col 21}{res}      0.2152931      0.9614203
{txt}{space 15}v7 {c |}{col 21}{res}      1.1426366      3.2847248
{txt}{space 15}v8 {c |}{col 21}{res}      0.1368687      0.6228345
{txt}{space 15}v9 {c |}{col 21}{res}      0.1194436      1.2686870
{txt}{space 14}v16 {c |}{col 21}{res}      0.2610205      1.1365279
{txt}{space 14}v17 {c |}{col 21}{res}      0.1633634      1.1000374
{txt}{space 14}v18 {c |}{col 21}{res}      0.0186095      0.3792675
{txt}{space 14}v19 {c |}{col 21}{res}      0.0354680      0.0478566
{txt}{space 14}v20 {c |}{col 21}{res}      0.0623172      1.6419546
{txt}{space 14}v21 {c |}{col 21}{res}      0.2850691      0.2785537
{txt}{space 14}v23 {c |}{col 21}{res}      0.9087891      3.0333616
{txt}{space 14}v24 {c |}{col 21}{res}      0.1364868      0.7890926
{txt}{space 14}v25 {c |}{col 21}{res}     -0.1194090     -1.8286444
{txt}{space 14}v26 {c |}{col 21}{res}     -0.0365264     -1.1537435
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0021456     -8.0061923
{txt}{space 14}v52 {c |}{col 21}{res}      0.1837436      0.4989944
{txt}{space 14}v53 {c |}{col 21}{res}      1.5733687      5.1962139
{txt}{space 14}v57 {c |}{col 21}{res}      0.0002816      0.0009413
{txt}{space 12}_cons {c |}{col 21}{res}     -1.3345407     -2.1960013
{txt}{hline 18}{c BT}{hline 32}
lambda=.05
1.587e-15
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v2 {c |}{col 21}{res}     -0.0037409     -0.1389110
{txt}{space 15}v3 {c |}{col 21}{res}      0.1011375      0.1052528
{txt}{space 15}v4 {c |}{col 21}{res}      0.0173759      2.3399989
{txt}{space 15}v5 {c |}{col 21}{res}      0.4296060      0.5853019
{txt}{space 15}v6 {c |}{col 21}{res}      0.4399529      0.8359847
{txt}{space 15}v7 {c |}{col 21}{res}      2.0688244      2.4042943
{txt}{space 15}v8 {c |}{col 21}{res}      0.4808568      0.5882269
{txt}{space 15}v9 {c |}{col 21}{res}      0.3601745      0.7213125
{txt}{space 14}v10 {c |}{col 21}{res}      0.0363978      0.1183907
{txt}{space 14}v12 {c |}{col 21}{res}     -0.0308144     -0.1612150
{txt}{space 14}v16 {c |}{col 21}{res}      0.4744442      0.9566529
{txt}{space 14}v17 {c |}{col 21}{res}      0.5376233      1.0240614
{txt}{space 14}v18 {c |}{col 21}{res}      0.2235756      0.1589568
{txt}{space 14}v19 {c |}{col 21}{res}      0.0684679      0.0765814
{txt}{space 14}v20 {c |}{col 21}{res}      0.3023890      1.3204219
{txt}{space 14}v21 {c |}{col 21}{res}      0.2312331      0.1788195
{txt}{space 14}v22 {c |}{col 21}{res}      0.1524290      0.3431311
{txt}{space 14}v23 {c |}{col 21}{res}      1.6218802      2.2021820
{txt}{space 14}v24 {c |}{col 21}{res}      0.5023647      0.4542068
{txt}{space 14}v25 {c |}{col 21}{res}     -0.6504901     -1.9495298
{txt}{space 14}v26 {c |}{col 21}{res}     -0.3118043     -0.8067431
{txt}{space 14}v27 {c |}{col 21}{res}     -0.1501575    -11.7835281
{txt}{space 14}v33 {c |}{col 21}{res}     -0.2648091     -0.8002706
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1250244      0.0036378
{txt}{space 14}v39 {c |}{col 21}{res}     -0.1063192     -0.7635106
{txt}{space 14}v42 {c |}{col 21}{res}     -0.4459357     -2.6936770
{txt}{space 14}v43 {c |}{col 21}{res}     -0.1163318     -1.3224400
{txt}{space 14}v44 {c |}{col 21}{res}     -0.1287169     -1.7394127
{txt}{space 14}v45 {c |}{col 21}{res}     -0.3007246     -0.7909711
{txt}{space 14}v46 {c |}{col 21}{res}     -0.4174005     -1.5924053
{txt}{space 14}v47 {c |}{col 21}{res}     -0.1506038     -2.2954658
{txt}{space 14}v48 {c |}{col 21}{res}     -0.1642560     -4.4529880
{txt}{space 14}v49 {c |}{col 21}{res}     -0.3189394     -1.2608654
{txt}{space 14}v52 {c |}{col 21}{res}      0.4521115      0.3611414
{txt}{space 14}v53 {c |}{col 21}{res}      3.7605492      5.7431487
{txt}{space 14}v56 {c |}{col 21}{res}      0.0013784      0.0113141
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004669      0.0005325
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6707146     -1.5458167
{txt}{hline 18}{c BT}{hline 32}
lambda=.01
3.229e-15

{com}. //
. 
. *******
. 
. lassologit v58 v1-v57, l(0.187 0.1 0.07 0.05 0.01 ) postl lambdan quadp noseqr tolopt(1e-14)
{res}{txt}Obtaining solution for 5 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
.....
{res}warning: post-logit did not converge after 100 iterations.

{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}   0.18700{col 25}   1{col 31}   1.96816{col 43} 5411.02908{txt} {res}{col 56} 0.1236{txt}{col 65}{c |}{res}{col 67}Added v21 _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}   0.10000{col 25}   7{col 31}  21.43451{col 43} 3039.24390{txt} {res}{col 56} 0.5117{txt}{col 65}{c |}{res}{col 67}Added v7 v16 v23 v25 v53 v57.
     3{txt}{col 7}{c |}{res}   3{col 13}   0.07000{col 25}  14{col 31}  24.64745{col 43} 2736.65101{txt} {res}{col 56} 0.5650{txt}{col 65}{c |}{res}{col 67}Added v5 v6 v9 v17 v19 v24 v52.
     4{txt}{col 7}{c |}{res}   4{col 13}   0.05000{col 25}  19{col 31}  33.88015{col 43} 2412.03109{txt} {res}{col 56} 0.6206{txt}{col 65}{c |}{res}{col 67}Added v8 v18 v20 v26 v27.
     5{txt}{col 7}{c |}{res}   5{col 13}   0.01000{col 25}  37{col 31}  54.63130{col 43} 2041.28998{txt} {res}{col 56} 0.6916{txt}{col 65}{c |}{res}{col 67}Added v2 v3 v4 v10 v12 v22 v33 v37 v39 v42 v43 v44 v45
{txt}{col 7}{c |}{col 65}{c |}{res}{col 67}v46 v47 v48 v49 v56.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat B = e(betas)
{txt}
{com}. 
. 
. local j = 1
{txt}
{com}. foreach lam of numlist 0.187 0.1 0.07 0.05 0.01 {c -(}
{txt}  2{com}.  
.         lassologit v58 v1-v57, l(`lam') postl lambdan   quadp noseqr tolopt(1e-14)
{txt}  3{com}.         mat bj = e(beta_post)
{txt}  4{com}.         
.         mat Bj = B[`j',1..58]
{txt}  5{com}.         
.         di "lambda=`lam'"
{txt}  6{com}.         
.         di mreldif(bj,Bj)
{txt}  7{com}.         
.         assert mreldif(bj,Bj)<1e-10
{txt}  8{com}.         
.         local j = `j' + 1
{txt}  9{com}. 
. {c )-}
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 14}v21 {c |}{col 21}{res}      0.0009245      0.8584517
{txt}{space 12}_cons {c |}{col 21}{res}     -0.4310903     -1.1097109
{txt}{hline 18}{c BT}{hline 32}
lambda=.187
0
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v7 {c |}{col 21}{res}      0.5412443      4.2194397
{txt}{space 14}v16 {c |}{col 21}{res}      0.0569502      0.8984170
{txt}{space 14}v21 {c |}{col 21}{res}      0.2448168      0.3940148
{txt}{space 14}v23 {c |}{col 21}{res}      0.5126733      3.8072262
{txt}{space 14}v25 {c |}{col 21}{res}     -0.0071134     -2.7490367
{txt}{space 14}v53 {c |}{col 21}{res}      0.6310249      7.5984195
{txt}{space 14}v57 {c |}{col 21}{res}      0.0000267      0.0011889
{txt}{space 12}_cons {c |}{col 21}{res}     -0.8168529     -1.7667647
{txt}{hline 18}{c BT}{hline 32}
lambda=.1
0
{res}warning: post-logit did not converge after 100 iterations.

{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v5 {c |}{col 21}{res}      0.0887044      0.4964612
{txt}{space 15}v6 {c |}{col 21}{res}      0.0811233      0.6855995
{txt}{space 15}v7 {c |}{col 21}{res}      0.8573037      3.7048664
{txt}{space 15}v9 {c |}{col 21}{res}      0.0064682      0.9253495
{txt}{space 14}v16 {c |}{col 21}{res}      0.1696674      0.7676800
{txt}{space 14}v17 {c |}{col 21}{res}      0.0894092      1.3384307
{txt}{space 14}v19 {c |}{col 21}{res}      0.0204993      0.0869667
{txt}{space 14}v21 {c |}{col 21}{res}      0.2812394      0.2667653
{txt}{space 14}v23 {c |}{col 21}{res}      0.7421539      3.4884730
{txt}{space 14}v24 {c |}{col 21}{res}      0.0176598      0.9186041
{txt}{space 14}v25 {c |}{col 21}{res}     -0.0664838     -2.5250532
{txt}{space 14}v52 {c |}{col 21}{res}      0.0938832      0.6999923
{txt}{space 14}v53 {c |}{col 21}{res}      1.1233156      6.3545899
{txt}{space 14}v57 {c |}{col 21}{res}      0.0001765      0.0011362
{txt}{space 12}_cons {c |}{col 21}{res}     -1.0934877     -2.3874793
{txt}{hline 18}{c BT}{hline 32}
lambda=.07
0
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v5 {c |}{col 21}{res}      0.1727808      0.4550969
{txt}{space 15}v6 {c |}{col 21}{res}      0.2152931      0.9614203
{txt}{space 15}v7 {c |}{col 21}{res}      1.1426366      3.2847248
{txt}{space 15}v8 {c |}{col 21}{res}      0.1368687      0.6228345
{txt}{space 15}v9 {c |}{col 21}{res}      0.1194436      1.2686870
{txt}{space 14}v16 {c |}{col 21}{res}      0.2610205      1.1365279
{txt}{space 14}v17 {c |}{col 21}{res}      0.1633634      1.1000374
{txt}{space 14}v18 {c |}{col 21}{res}      0.0186095      0.3792675
{txt}{space 14}v19 {c |}{col 21}{res}      0.0354680      0.0478566
{txt}{space 14}v20 {c |}{col 21}{res}      0.0623172      1.6419546
{txt}{space 14}v21 {c |}{col 21}{res}      0.2850691      0.2785537
{txt}{space 14}v23 {c |}{col 21}{res}      0.9087891      3.0333616
{txt}{space 14}v24 {c |}{col 21}{res}      0.1364868      0.7890926
{txt}{space 14}v25 {c |}{col 21}{res}     -0.1194090     -1.8286444
{txt}{space 14}v26 {c |}{col 21}{res}     -0.0365264     -1.1537435
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0021456     -8.0061923
{txt}{space 14}v52 {c |}{col 21}{res}      0.1837436      0.4989944
{txt}{space 14}v53 {c |}{col 21}{res}      1.5733687      5.1962139
{txt}{space 14}v57 {c |}{col 21}{res}      0.0002816      0.0009413
{txt}{space 12}_cons {c |}{col 21}{res}     -1.3345407     -2.1960013
{txt}{hline 18}{c BT}{hline 32}
lambda=.05
0
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v2 {c |}{col 21}{res}     -0.0037409     -0.1389110
{txt}{space 15}v3 {c |}{col 21}{res}      0.1011375      0.1052528
{txt}{space 15}v4 {c |}{col 21}{res}      0.0173759      2.3399989
{txt}{space 15}v5 {c |}{col 21}{res}      0.4296060      0.5853019
{txt}{space 15}v6 {c |}{col 21}{res}      0.4399529      0.8359847
{txt}{space 15}v7 {c |}{col 21}{res}      2.0688244      2.4042943
{txt}{space 15}v8 {c |}{col 21}{res}      0.4808568      0.5882269
{txt}{space 15}v9 {c |}{col 21}{res}      0.3601745      0.7213125
{txt}{space 14}v10 {c |}{col 21}{res}      0.0363978      0.1183907
{txt}{space 14}v12 {c |}{col 21}{res}     -0.0308144     -0.1612150
{txt}{space 14}v16 {c |}{col 21}{res}      0.4744442      0.9566529
{txt}{space 14}v17 {c |}{col 21}{res}      0.5376233      1.0240614
{txt}{space 14}v18 {c |}{col 21}{res}      0.2235756      0.1589568
{txt}{space 14}v19 {c |}{col 21}{res}      0.0684679      0.0765814
{txt}{space 14}v20 {c |}{col 21}{res}      0.3023890      1.3204219
{txt}{space 14}v21 {c |}{col 21}{res}      0.2312331      0.1788195
{txt}{space 14}v22 {c |}{col 21}{res}      0.1524290      0.3431311
{txt}{space 14}v23 {c |}{col 21}{res}      1.6218802      2.2021820
{txt}{space 14}v24 {c |}{col 21}{res}      0.5023647      0.4542068
{txt}{space 14}v25 {c |}{col 21}{res}     -0.6504901     -1.9495298
{txt}{space 14}v26 {c |}{col 21}{res}     -0.3118043     -0.8067431
{txt}{space 14}v27 {c |}{col 21}{res}     -0.1501575    -11.7835281
{txt}{space 14}v33 {c |}{col 21}{res}     -0.2648091     -0.8002706
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1250244      0.0036378
{txt}{space 14}v39 {c |}{col 21}{res}     -0.1063192     -0.7635106
{txt}{space 14}v42 {c |}{col 21}{res}     -0.4459357     -2.6936770
{txt}{space 14}v43 {c |}{col 21}{res}     -0.1163318     -1.3224400
{txt}{space 14}v44 {c |}{col 21}{res}     -0.1287169     -1.7394127
{txt}{space 14}v45 {c |}{col 21}{res}     -0.3007246     -0.7909711
{txt}{space 14}v46 {c |}{col 21}{res}     -0.4174005     -1.5924053
{txt}{space 14}v47 {c |}{col 21}{res}     -0.1506038     -2.2954658
{txt}{space 14}v48 {c |}{col 21}{res}     -0.1642560     -4.4529880
{txt}{space 14}v49 {c |}{col 21}{res}     -0.3189394     -1.2608654
{txt}{space 14}v52 {c |}{col 21}{res}      0.4521115      0.3611414
{txt}{space 14}v53 {c |}{col 21}{res}      3.7605492      5.7431487
{txt}{space 14}v56 {c |}{col 21}{res}      0.0013784      0.0113141
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004669      0.0005325
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6707146     -1.5458167
{txt}{hline 18}{c BT}{hline 32}
lambda=.01
0

{com}. //
. 
. 
. *******
. 
. lassologit v58 v1-v57, l(0.1 0.07 0.05 0.01 0.005 ) nocons lambdan  quadp noseqr tolopt(1e-14)
{res}{txt}Obtaining solution for 5 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
.....
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}   0.10000{col 25}   8{col 31}   1.01900{col 43} 5756.45351{txt} {res}{col 56} 0.0718{txt}{col 65}{c |}{res}{col 67}Added v7 v21 v23 v25 v26 v27 v37 v53.
     2{txt}{col 7}{c |}{res}   2{col 13}   0.07000{col 25}  13{col 31}   2.65604{col 43} 5053.70201{txt} {res}{col 56} 0.1887{txt}{col 65}{c |}{res}{col 67}Added v16 v42 v45 v46 v50.
     3{txt}{col 7}{c |}{res}   3{col 13}   0.05000{col 25}  19{col 31}   4.75354{col 43} 4429.24802{txt} {res}{col 56} 0.2935{txt}{col 65}{c |}{res}{col 67}Added v12 v17 v20 v24 v33 v52.
     4{txt}{col 7}{c |}{res}   4{col 13}   0.01000{col 25}  41{col 31}  18.75168{col 43} 2807.93614{txt} {res}{col 56} 0.5695{txt}{col 65}{c |}{res}{col 67}Added v1 v2 v5 v6 v8 v9 v15 v18 v19 v22 v29 v35 v39 v41
{txt}{col 7}{c |}{col 65}{c |}{res}{col 67}v43 v44 v47 v48 v49 v51 v56 v57.
     5{txt}{col 7}{c |}{res}   5{col 13}   0.00500{col 25}  47{col 31}  26.67062{col 43} 2521.58278{txt} {res}{col 56} 0.6195{txt}{col 65}{c |}{res}{col 67}Added v4 v13 v30 v31 v38 v40.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat B = e(betas)
{txt}
{com}. 
. 
. local j = 1
{txt}
{com}. foreach lam of numlist 0.1 0.07 0.05 0.01 0.005 {c -(}
{txt}  2{com}.  
.         di "lambda=`lam'"
{txt}  3{com}.         lassologit v58 v1-v57, l(`lam')  nocons   lambdan quadp noseqr tolopt(1e-14)
{txt}  4{com}.         mat bj = e(beta)
{txt}  5{com}.         
.         mat Bj = B[`j',1..57]
{txt}  6{com}.         
.         di mreldif(bj,Bj)
{txt}  7{com}.         
.         assert mreldif(bj,Bj)<1e-5
{txt}  8{com}.         
.         local j = `j' + 1
{txt}  9{com}. 
. {c )-}
lambda=.1
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v7 {c |}{col 21}{res}      0.2650131      3.4924194
{txt}{space 14}v21 {c |}{col 21}{res}      0.0024332      0.1020325
{txt}{space 14}v23 {c |}{col 21}{res}      0.2750091      3.3829459
{txt}{space 14}v25 {c |}{col 21}{res}     -0.1326805     -2.3257051
{txt}{space 14}v26 {c |}{col 21}{res}     -0.0608908     -1.8382049
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0103742     -7.6421148
{txt}{space 14}v37 {c |}{col 21}{res}     -0.0630326     -1.3603202
{txt}{space 14}v53 {c |}{col 21}{res}      0.2095697      5.9704748
{txt}{hline 18}{c BT}{hline 32}
0
lambda=.07
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v7 {c |}{col 21}{res}      0.5502769      2.8098039
{txt}{space 14}v16 {c |}{col 21}{res}      0.0359280      1.0087524
{txt}{space 14}v21 {c |}{col 21}{res}      0.0412445      0.1584121
{txt}{space 14}v23 {c |}{col 21}{res}      0.5169110      2.9032142
{txt}{space 14}v25 {c |}{col 21}{res}     -0.2210698     -2.1101118
{txt}{space 14}v26 {c |}{col 21}{res}     -0.1311193     -1.9259327
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0427956     -7.5412564
{txt}{space 14}v37 {c |}{col 21}{res}     -0.2308411     -0.5046334
{txt}{space 14}v42 {c |}{col 21}{res}     -0.0191658     -3.1272642
{txt}{space 14}v45 {c |}{col 21}{res}     -0.0778126     -0.9861816
{txt}{space 14}v46 {c |}{col 21}{res}     -0.0645772     -2.5562092
{txt}{space 14}v50 {c |}{col 21}{res}     -0.0694340     -0.9862391
{txt}{space 14}v53 {c |}{col 21}{res}      0.6548612      7.7706313
{txt}{hline 18}{c BT}{hline 32}
1.091e-15
lambda=.05
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v7 {c |}{col 21}{res}      0.7933684      2.6253635
{txt}{space 14}v12 {c |}{col 21}{res}     -0.0629520     -0.4247379
{txt}{space 14}v16 {c |}{col 21}{res}      0.1067483      0.9324610
{txt}{space 14}v17 {c |}{col 21}{res}      0.0710059      1.1060487
{txt}{space 14}v20 {c |}{col 21}{res}      0.0238898      1.5232256
{txt}{space 14}v21 {c |}{col 21}{res}      0.0680058      0.1468137
{txt}{space 14}v23 {c |}{col 21}{res}      0.7250323      2.6941404
{txt}{space 14}v24 {c |}{col 21}{res}      0.0479179      0.4504684
{txt}{space 14}v25 {c |}{col 21}{res}     -0.3135342     -2.1956773
{txt}{space 14}v26 {c |}{col 21}{res}     -0.1775486     -1.3329447
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0701598     -7.2267825
{txt}{space 14}v33 {c |}{col 21}{res}     -0.0828687     -1.0037807
{txt}{space 14}v37 {c |}{col 21}{res}     -0.3075390     -0.3504000
{txt}{space 14}v42 {c |}{col 21}{res}     -0.1037288     -3.1005426
{txt}{space 14}v45 {c |}{col 21}{res}     -0.1684504     -1.1473849
{txt}{space 14}v46 {c |}{col 21}{res}     -0.1598983     -2.3516123
{txt}{space 14}v50 {c |}{col 21}{res}     -0.2564002     -0.9437476
{txt}{space 14}v52 {c |}{col 21}{res}      0.0245341      0.2775914
{txt}{space 14}v53 {c |}{col 21}{res}      1.1899611      6.9886589
{txt}{hline 18}{c BT}{hline 32}
4.393e-15
lambda=.01
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.0200604     -0.5365942
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1154487     -0.2437637
{txt}{space 15}v5 {c |}{col 21}{res}      0.1956693      0.3515775
{txt}{space 15}v6 {c |}{col 21}{res}      0.1165670      0.4697127
{txt}{space 15}v7 {c |}{col 21}{res}      1.7000859      2.1879866
{txt}{space 15}v8 {c |}{col 21}{res}      0.2964567      0.4535168
{txt}{space 15}v9 {c |}{col 21}{res}      0.1377150      0.4396796
{txt}{space 14}v12 {c |}{col 21}{res}     -0.2915624     -0.3305314
{txt}{space 14}v15 {c |}{col 21}{res}      0.1204020      1.2645380
{txt}{space 14}v16 {c |}{col 21}{res}      0.3284637      0.8163235
{txt}{space 14}v17 {c |}{col 21}{res}      0.4203698      0.8761621
{txt}{space 14}v18 {c |}{col 21}{res}      0.0486121     -0.0057940
{txt}{space 14}v19 {c |}{col 21}{res}     -0.0207725     -0.0906895
{txt}{space 14}v20 {c |}{col 21}{res}      0.2927474      1.2550231
{txt}{space 14}v21 {c |}{col 21}{res}      0.0894496      0.1403134
{txt}{space 14}v22 {c |}{col 21}{res}      0.0775057      0.3317326
{txt}{space 14}v23 {c |}{col 21}{res}      1.4427900      2.0218483
{txt}{space 14}v24 {c |}{col 21}{res}      0.3946860      0.4193053
{txt}{space 14}v25 {c |}{col 21}{res}     -0.9369266     -2.2361590
{txt}{space 14}v26 {c |}{col 21}{res}     -0.4647040     -1.0145500
{txt}{space 14}v27 {c |}{col 21}{res}     -0.2576645     -9.4452785
{txt}{space 14}v29 {c |}{col 21}{res}     -0.0450505     -3.5975876
{txt}{space 14}v33 {c |}{col 21}{res}     -0.5899869     -1.0400269
{txt}{space 14}v35 {c |}{col 21}{res}     -0.0918822     -2.1362442
{txt}{space 14}v37 {c |}{col 21}{res}     -0.3583838     -0.2102179
{txt}{space 14}v39 {c |}{col 21}{res}     -0.2118789     -0.9262838
{txt}{space 14}v41 {c |}{col 21}{res}     -0.1033153    -34.1557491
{txt}{space 14}v42 {c |}{col 21}{res}     -0.6598578     -2.8553308
{txt}{space 14}v43 {c |}{col 21}{res}     -0.3301687     -1.8439233
{txt}{space 14}v44 {c |}{col 21}{res}     -0.4364266     -2.1931420
{txt}{space 14}v45 {c |}{col 21}{res}     -0.6039432     -0.9957092
{txt}{space 14}v46 {c |}{col 21}{res}     -0.8008154     -1.8714535
{txt}{space 14}v47 {c |}{col 21}{res}     -0.5115771     -2.5744130
{txt}{space 14}v48 {c |}{col 21}{res}     -0.4924094     -3.7971354
{txt}{space 14}v49 {c |}{col 21}{res}     -0.5587218     -1.6343045
{txt}{space 14}v50 {c |}{col 21}{res}     -1.0800523     -0.9360925
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6243036     -1.6360753
{txt}{space 14}v52 {c |}{col 21}{res}      0.1969137      0.2376949
{txt}{space 14}v53 {c |}{col 21}{res}      3.2862406      4.9338768
{txt}{space 14}v56 {c |}{col 21}{res}      0.0009495      0.0077243
{txt}{space 14}v57 {c |}{col 21}{res}      0.0001419      0.0004734
{txt}{hline 18}{c BT}{hline 32}
7.358e-15
lambda=.005
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.1809080     -0.5378352
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1572957     -0.2437759
{txt}{space 15}v4 {c |}{col 21}{res}      0.0248724      2.1049508
{txt}{space 15}v5 {c |}{col 21}{res}      0.2595463      0.3597005
{txt}{space 15}v6 {c |}{col 21}{res}      0.2000403      0.5341243
{txt}{space 15}v7 {c |}{col 21}{res}      1.9126371      2.1816531
{txt}{space 15}v8 {c |}{col 21}{res}      0.3578749      0.4345871
{txt}{space 15}v9 {c |}{col 21}{res}      0.2228853      0.5035271
{txt}{space 14}v12 {c |}{col 21}{res}     -0.3141866     -0.3285839
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0875279     -0.3838125
{txt}{space 14}v15 {c |}{col 21}{res}      0.3541592      1.5264669
{txt}{space 14}v16 {c |}{col 21}{res}      0.5013867      0.8534160
{txt}{space 14}v17 {c |}{col 21}{res}      0.5691097      0.9140972
{txt}{space 14}v18 {c |}{col 21}{res}      0.0575477     -0.0097427
{txt}{space 14}v19 {c |}{col 21}{res}     -0.0435870     -0.0856511
{txt}{space 14}v20 {c |}{col 21}{res}      0.3980743      1.1929666
{txt}{space 14}v21 {c |}{col 21}{res}      0.1054349      0.1407157
{txt}{space 14}v22 {c |}{col 21}{res}      0.1420705      0.3282761
{txt}{space 14}v23 {c |}{col 21}{res}      1.7201106      2.0721137
{txt}{space 14}v24 {c |}{col 21}{res}      0.4724270      0.3984504
{txt}{space 14}v25 {c |}{col 21}{res}     -1.2345627     -2.1574582
{txt}{space 14}v26 {c |}{col 21}{res}     -0.6313621     -1.0300730
{txt}{space 14}v27 {c |}{col 21}{res}     -0.5178153     -9.3080993
{txt}{space 14}v29 {c |}{col 21}{res}     -0.3591798     -3.5319597
{txt}{space 14}v30 {c |}{col 21}{res}     -0.1618564     -0.4851814
{txt}{space 14}v31 {c |}{col 21}{res}     -0.0460959     -0.3252689
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7916616     -1.0259040
{txt}{space 14}v35 {c |}{col 21}{res}     -0.2196920     -2.2944999
{txt}{space 14}v37 {c |}{col 21}{res}     -0.3149201     -0.2114374
{txt}{space 14}v38 {c |}{col 21}{res}     -0.1918731     -0.6960359
{txt}{space 14}v39 {c |}{col 21}{res}     -0.3522178     -0.9350352
{txt}{space 14}v40 {c |}{col 21}{res}     -0.0483344     -0.3780015
{txt}{space 14}v41 {c |}{col 21}{res}     -0.4067988    -35.1248659
{txt}{space 14}v42 {c |}{col 21}{res}     -0.9641556     -2.7912247
{txt}{space 14}v43 {c |}{col 21}{res}     -0.5740112     -1.8487342
{txt}{space 14}v44 {c |}{col 21}{res}     -0.7629174     -2.1331338
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7378222     -1.0101051
{txt}{space 14}v46 {c |}{col 21}{res}     -1.1105819     -1.8257851
{txt}{space 14}v47 {c |}{col 21}{res}     -0.9020293     -2.4623539
{txt}{space 14}v48 {c |}{col 21}{res}     -0.9272582     -3.7774305
{txt}{space 14}v49 {c |}{col 21}{res}     -0.8519997     -1.6597352
{txt}{space 14}v50 {c |}{col 21}{res}     -1.1075620     -0.9226955
{txt}{space 14}v51 {c |}{col 21}{res}     -1.1961593     -1.6631168
{txt}{space 14}v52 {c |}{col 21}{res}      0.2273952      0.2330733
{txt}{space 14}v53 {c |}{col 21}{res}      3.9489600      5.0332783
{txt}{space 14}v56 {c |}{col 21}{res}      0.0014999      0.0077103
{txt}{space 14}v57 {c |}{col 21}{res}      0.0002136      0.0004576
{txt}{hline 18}{c BT}{hline 32}
7.780e-15

{com}. //
. 
. 
. *******
. 
. lassologit v58 v1-v57, l(0.187 0.16 0.12 0.1   ) nostd lambdan quadp noseqr tolopt(1e-14)
{res}{txt}Obtaining solution for 4 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
....
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}   0.18700{col 25}   3{col 31}   1.33158{col 43} 5134.22819{txt} {res}{col 56} 0.1697{txt}{col 65}{c |}{res}{col 67}Added v19 v56 v57 _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}   0.16000{col 25}   5{col 31}   1.43737{col 43} 5052.83772{txt} {res}{col 56} 0.1841{txt}{col 65}{c |}{res}{col 67}Added v25 v27.
     3{txt}{col 7}{c |}{res}   3{col 13}   0.12000{col 25}   6{col 31}   1.71424{col 43} 4772.80828{txt} {res}{col 56} 0.2301{txt}{col 65}{c |}{res}{col 67}Added v21.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat B = e(betas)
{txt}
{com}. 
. 
. local j = 1
{txt}
{com}. foreach lam of numlist 0.187 0.16 0.12 0.1   {c -(}
{txt}  2{com}.  
.         lassologit v58 v1-v57, l(`lam')  nostd  lambdan  quadp noseqr tolopt(1e-14)
{txt}  3{com}.         mat bj = e(beta)
{txt}  4{com}.         
.         mat Bj = B[`j',1..58]
{txt}  5{com}.         
.         di "lambda=`lam'"
{txt}  6{com}. 
.         di mreldif(bj,Bj)
{txt}  7{com}.         
.         assert mreldif(bj,Bj)<0.001
{txt}  8{com}.         
.         local j = `j' + 1
{txt}  9{com}. 
. {c )-}
{res}warning: post-logit did not converge after 100 iterations.

{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 14}v19 {c |}{col 21}{res}      0.0322627      0.3256872
{txt}{space 14}v56 {c |}{col 21}{res}      0.0232286      0.0244083
{txt}{space 14}v57 {c |}{col 21}{res}      0.0000956      0.0002090
{txt}{space 12}_cons {c |}{col 21}{res}     -1.2759899     -1.8573580
{txt}{hline 18}{c BT}{hline 32}
lambda=.187
1.756e-15
{res}warning: post-logit did not converge after 100 iterations.

{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 14}v19 {c |}{col 21}{res}      0.0706403      0.2337384
{txt}{space 14}v25 {c |}{col 21}{res}     -0.0066139     -3.2040010
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0112998    -22.0263104
{txt}{space 14}v56 {c |}{col 21}{res}      0.0229998      0.0258484
{txt}{space 14}v57 {c |}{col 21}{res}      0.0001044      0.0004109
{txt}{space 12}_cons {c |}{col 21}{res}     -1.3257117     -1.0884138
{txt}{hline 18}{c BT}{hline 32}
lambda=.16
6.683e-16
{res}warning: post-logit did not converge after 100 iterations.

{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 14}v19 {c |}{col 21}{res}      0.0975655      0.1267263
{txt}{space 14}v21 {c |}{col 21}{res}      0.1010912      0.5220624
{txt}{space 14}v25 {c |}{col 21}{res}     -0.0801956     -2.9933831
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0332827    -23.0492091
{txt}{space 14}v56 {c |}{col 21}{res}      0.0217725      0.0233477
{txt}{space 14}v57 {c |}{col 21}{res}      0.0001340      0.0004653
{txt}{space 12}_cons {c |}{col 21}{res}     -1.3801941     -1.2967833
{txt}{hline 18}{c BT}{hline 32}
lambda=.12
1.119e-14
{res}warning: post-logit did not converge after 100 iterations.

{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 14}v19 {c |}{col 21}{res}      0.1094069      0.1267263
{txt}{space 14}v21 {c |}{col 21}{res}      0.1558447      0.5220624
{txt}{space 14}v25 {c |}{col 21}{res}     -0.1376249     -2.9933831
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0487535    -23.0492091
{txt}{space 14}v56 {c |}{col 21}{res}      0.0211568      0.0233477
{txt}{space 14}v57 {c |}{col 21}{res}      0.0001530      0.0004653
{txt}{space 12}_cons {c |}{col 21}{res}     -1.4039432     -1.2967833
{txt}{hline 18}{c BT}{hline 32}
lambda=.1
1.376e-14

{com}. //
. 
. 
{txt}end of do-file

{com}. 
. do "cs_cvlassologit.do" // 
{txt}
{com}. 
. clear all 
{res}{txt}
{com}. 
. $loadprostate
{txt}(11 vars, 97 obs)

{com}. 
. gen ybin = lpsa > 2
{txt}
{com}. 
. gen myf = 1
{txt}
{com}. replace myf = 2 if _n > 25
{txt}(72 real changes made)

{com}. replace myf = 3 if _n > 50
{txt}(47 real changes made)

{com}. replace myf = 4 if _n > 75
{txt}(22 real changes made)

{com}. 
. local tol = 0.01
{txt}
{com}. 
. ********************************************************************************
. *** deviance                                                                                                                             ***
. ********************************************************************************
. 
. // ok
. cvlassologit ybin lcavol-pgg45, foldv(myf) l(.2 0.11 .1 0.05 0.001) lossm(deviance)  lambdan 
{txt}Use user-specified fold variable.
{res}{txt}K-fold cross-validation with 4 folds.
Fold {res}1 2 3 4 
{txt}          {c |} {space 3} {txt}  Lambda/N {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}        .2 {space 3} {res} 2.0825447 {space 3} {res} .97441364  ^
{txt}         5{c |} {space 3} {res}      .001 {space 3} {res} 1.8496369 {space 3} {res} .77513024  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. mat Scvm = e(mloss)'
{txt}
{com}. mat Scvsd = e(cvsd)'
{txt}
{com}. mat Gcvm = ( 2.08254581596245 \ 2.01772455876113 \ 2.01521038363898 \ 1.85552483852628 \ 1.84971975634164 )
{txt}
{com}. mat Gcvsd = ( 0.983003948645934 \ 1.01362212332398 \ 1.01620614729319 \ 0.891321820785998 \ 0.769254466742782 )
{txt}
{com}. assert mreldif(Scvm,Gcvm)<`tol'
{txt}
{com}. assert mreldif(Scvsd,Gcvsd)<`tol'
{txt}
{com}. // > cv$lambda.min
. // [1] 0.001
. // > cv$lambda.1se
. // [1] 0.2
. // >
. assert e(lopt)==0.001
{txt}
{com}. assert e(lse)==0.2
{txt}
{com}. 
. // ok
. cvlassologit ybin lcavol-pgg45, foldv(myf) l(.2 0.11 .1 0.05 0.001) lossm(deviance) nocons lambdan storeest(d)
{txt}Use user-specified fold variable.
{res}{txt}K-fold cross-validation with 4 folds.
Fold {res}1 2 3 4 
{txt}          {c |} {space 3} {txt}  Lambda/N {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}        .2 {space 3} {res} 1.8870548 {space 3} {res} .80058934  ^
{txt}         4{c |} {space 3} {res}       .05 {space 3} {res}  1.712839 {space 3} {res} .82969722  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. mat Scvm = e(mloss)'
{txt}
{com}. mat Scvsd = e(cvsd)'
{txt}
{com}. mat Gcvm = ( 1.88703159578689 \ 1.84295622517937 \ 1.84604832914781 \ 1.71315139941324 \ 2.06072320470385 )
{txt}
{com}. mat Gcvsd = ( 0.807683652389135 \ 0.890207093045443 \ 0.89735498493324 \ 0.831483091061569 \ 0.885306606625466 )
{txt}
{com}. assert mreldif(Scvm,Gcvm)<`tol'
{txt}
{com}. assert mreldif(Scvsd,Gcvsd)<`tol'
{txt}
{com}. // > cv$lambda.min
. // [1] 0.05
. // > cv$lambda.1se
. // [1] 0.2
. assert e(lopt)==0.05
{txt}
{com}. assert e(lse)==0.2
{txt}
{com}. 
. //ok
. cvlassologit ybin lcavol-pgg45, foldv(myf) l(.2 0.11 .1 0.05 0.001) lossm(deviance) nostd lambdan
{txt}Use user-specified fold variable.
{res}{txt}K-fold cross-validation with 4 folds.
Fold {res}1 2 3 4 
{txt}          {c |} {space 3} {txt}  Lambda/N {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}        .2 {space 3} {res} 2.1712806 {space 3} {res} .97214791  ^
{txt}         5{c |} {space 3} {res}      .001 {space 3} {res} 1.8633088 {space 3} {res} .77838717  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. mat Scvm = e(mloss)'
{txt}
{com}. mat Scvsd = e(cvsd)'
{txt}
{com}. mat Gcvm = ( 2.17122209560962 \ 2.07796719364886 \ 2.06600265938377 \ 1.92873373066042 \ 1.86328278602207 )
{txt}
{com}. mat Gcvsd = ( 0.976586472178121 \ 0.994800183102049 \ 1.00164196360505 \ 0.919465328924813 \ 0.772522333205428 )
{txt}
{com}. assert mreldif(Scvm,Gcvm)<`tol'
{txt}
{com}. assert mreldif(Scvsd,Gcvsd)<`tol'
{txt}
{com}. // > cv$lambda.min
. // [1] 0.001
. // > cv$lambda.1se
. // [1] 0.2
. assert e(lopt)==0.001
{txt}
{com}. assert e(lse)==0.2
{txt}
{com}. 
. // ok
. cvlassologit ybin lcavol-pgg45, foldv(myf) l(.2 0.11 .1 0.05 0.001) lossm(deviance) nocons nostd lambdan 
{txt}Use user-specified fold variable.
{res}{txt}K-fold cross-validation with 4 folds.
Fold {res}1 2 3 4 
{txt}          {c |} {space 3} {txt}  Lambda/N {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}        .2 {space 3} {res} 2.0462999 {space 3} {res}  .8777467  ^
{txt}         4{c |} {space 3} {res}       .05 {space 3} {res} 1.7732799 {space 3} {res}  .8121304  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. mat Scvm = e(mloss)'
{txt}
{com}. mat Scvsd = e(cvsd)'
{txt}
{com}. mat Gcvm = ( 2.04631386499165 \ 1.96612060457599 \ 1.95374855866588 \ 1.77310874352822 \ 2.07059117964739 )
{txt}
{com}. mat Gcvsd = ( 0.881443394729349 \ 0.910706849371597 \ 0.915312643481268 \ 0.812051490921067 \ 0.890972059994161 )
{txt}
{com}. assert mreldif(Scvm,Gcvm)<`tol'
{txt}
{com}. assert mreldif(Scvsd,Gcvsd)<`tol'
{txt}
{com}. // > cv$lambda.min
. // [1] 0.05
. // > cv$lambda.1se
. // [1] 0.2
. assert e(lopt)==0.05
{txt}
{com}. assert e(lse)==0.2
{txt}
{com}. 
. ********************************************************************************
. *** classification                                                                                                                       ***
. ********************************************************************************
. 
. // ok
. cvlassologit ybin lcavol-pgg45, foldv(myf) l(.2 0.11 .1 0.05 0.001) lossm(class) lambdan  
{txt}Use user-specified fold variable.
{res}{txt}K-fold cross-validation with 4 folds.
Fold {res}1 2 3 4 
{txt}          {c |} {space 3} {txt}  Lambda/N {space 3} {txt}Missclass. {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}        .2 {space 3} {res} .32989691 {space 3} {res} .23273587  *^
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. mat Scvm = e(mloss)'
{txt}
{com}. mat Scvsd = e(cvsd)'
{txt}
{com}. mat Gcvm = ( 0.329896907216495 \ 0.422680412371134 \ 0.422680412371134 \ 0.422680412371134 \ 0.371134020618557 )
{txt}
{com}. mat Gcvsd = ( 0.233921440752119 \ 0.21546802804412 \ 0.21546802804412 \ 0.219888311955527 \ 0.175517201389091 )
{txt}
{com}. assert mreldif(Scvm,Gcvm)<`tol'
{txt}
{com}. assert mreldif(Scvsd,Gcvsd)<`tol'
{txt}
{com}. // > cv$lambda.min
. // [1] 0.2
. // > cv$lambda.1se
. // [1] 0.2
. assert e(lopt)==0.2
{txt}
{com}. assert e(lse)==0.2
{txt}
{com}. 
. // ok
. cvlassologit ybin lcavol-pgg45, foldv(myf) l(.2 0.11 .1 0.05 0.001) lossm(class) nocons lambdan
{txt}Use user-specified fold variable.
{res}{txt}K-fold cross-validation with 4 folds.
Fold {res}1 2 3 4 
{txt}          {c |} {space 3} {txt}  Lambda/N {space 3} {txt}Missclass. {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}        .2 {space 3} {res} .32989691 {space 3} {res} .23273587  *^
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. mat Scvm = e(mloss)'
{txt}
{com}. mat Scvsd = e(cvsd)'
{txt}
{com}. mat Gcvm =( 0.329896907216495 \ 0.391752577319588 \ 0.391752577319588 \ 0.422680412371134 \ 0.43298969072165 )
{txt}
{com}. mat Gcvsd = ( 0.233921440752119 \ 0.21676631645944 \ 0.21676631645944 \ 0.210302540152146 \ 0.201492992636001 )
{txt}
{com}. assert mreldif(Scvm,Gcvm)<`tol'
{txt}
{com}. assert mreldif(Scvsd,Gcvsd)<`tol'
{txt}
{com}. // > cv$lambda.min
. // [1] 0.2
. // > cv$lambda.1se
. // [1] 0.2
. assert e(lopt)==0.2
{txt}
{com}. assert e(lse)==0.2
{txt}
{com}. 
. //ok
. cvlassologit ybin lcavol-pgg45, foldv(myf) l(.2 0.11 .1 0.05 0.001) lossm(class) nostd lambdan
{txt}Use user-specified fold variable.
{res}{txt}K-fold cross-validation with 4 folds.
Fold {res}1 2 3 4 
{txt}          {c |} {space 3} {txt}  Lambda/N {space 3} {txt}Missclass. {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}        .2 {space 3} {res} .48453608 {space 3} {res} .19658288  ^
{txt}         5{c |} {space 3} {res}      .001 {space 3} {res}  .3814433 {space 3} {res} .17692482  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. mat Scvm = e(mloss)'
{txt}
{com}. mat Scvsd = e(cvsd)'
{txt}
{com}. mat Gcvm = ( 0.484536082474227 \ 0.443298969072165 \ 0.43298969072165 \ 0.43298969072165 \ 0.381443298969072 )
{txt}
{com}. mat Gcvsd = ( 0.195557378626205 \ 0.212481204585373 \ 0.215980406627655 \ 0.215980406627655 \ 0.176370943087664 )
{txt}
{com}. assert mreldif(Scvm,Gcvm)<`tol'
{txt}
{com}. assert mreldif(Scvsd,Gcvsd)<`tol'
{txt}
{com}. // > cv$lambda.min
. // [1] 0.001
. // > cv$lambda.1se
. // [1] 0.2
. assert e(lopt)==0.001
{txt}
{com}. assert e(lse)==0.2
{txt}
{com}. 
. // ok
. cvlassologit ybin lcavol-pgg45, foldv(myf) l(.2 0.11 .1 0.05 0.001) lossm(class) nocons nostd lambdan  
{txt}Use user-specified fold variable.
{res}{txt}K-fold cross-validation with 4 folds.
Fold {res}1 2 3 4 
{txt}          {c |} {space 3} {txt}  Lambda/N {space 3} {txt}Missclass. {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}        .2 {space 3} {res} .45360825 {space 3} {res} .21117543  ^
{txt}         2{c |} {space 3} {res}       .11 {space 3} {res} .41237113 {space 3} {res} .21614273  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. mat Scvm = e(mloss)'
{txt}
{com}. mat Scvsd = e(cvsd)'
{txt}
{com}. mat Gcvm = ( 0.45360824742268 \ 0.412371134020619 \ 0.422680412371134 \ 0.422680412371134 \ 0.43298969072165 )
{txt}
{com}. mat Gcvsd = ( 0.209411194781137 \ 0.215428563830343 \ 0.21546802804412 \ 0.212254330138366 \ 0.201492992636001 )
{txt}
{com}. assert mreldif(Scvm,Gcvm)<`tol'
{txt}
{com}. assert mreldif(Scvsd,Gcvsd)<`tol'
{txt}
{com}. // > cv$lambda.min
. // [1] 0.11
. // > cv$lambda.1se
. // [1] 0.2
. assert e(lopt)==0.11
{txt}
{com}. assert e(lse)==0.2
{txt}
{com}. 
. 
. ********************************************************************************
. *** plotting                                                                 ***
. ******************************************************************************** 
. 
. clear all 
{res}{txt}
{com}. 
. $loadprostate
{txt}(11 vars, 97 obs)

{com}. 
. gen ybin = lpsa > 2
{txt}
{com}. 
. cvlassologit ybin lcavol-pgg45 , plotcv nfol(3)
{res}{txt}K-fold cross-validation with 3 folds.
Fold {res}1 2 3 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}        15{c |} {space 3} {res} 3.3416903 {space 3} {res}  .9731376 {space 3} {res} .03166328  ^
{txt}        19{c |} {space 3} {res}  1.901377 {space 3} {res} .96232217 {space 3} {res} .01310367  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.
{res}{txt}
{com}. 
. cvlassologit ybin lcavol-pgg45 , plotcv plotopt(legend(off)) nfol(3)
{res}{txt}K-fold cross-validation with 3 folds.
Fold {res}1 2 3 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}        11{c |} {space 3} {res} 5.8730562 {space 3} {res} .93948093 {space 3} {res}  .0595762  ^
{txt}        18{c |} {space 3} {res} 2.1892367 {space 3} {res} .87866877 {space 3} {res} .06192741  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.
{res}{txt}
{com}. 
. 
. ********************************************************************************
. *** stratified option                                                        ***
. ******************************************************************************** 
. 
. clear all 
{res}{txt}
{com}. 
. $loadprostate
{txt}(11 vars, 97 obs)

{com}. 
. gen ybin = lpsa > 3
{txt}
{com}. 
. gen f = ceil(rpoisson(3))+1
{txt}
{com}. 
. cvlassologit ybin lcavol-pgg45, tabfold strat

           {txt}{c |}                          Fold
      ybin {c |}         1          2          3          4          5 {c |}     Total
{hline 11}{c +}{hline 55}{c +}{hline 10}
         0 {c |}{res}        14         14         14         14         14 {txt}{c |}{res}        70 
{txt}         1 {c |}{res}         5          5          6          5          6 {txt}{c |}{res}        27 
{txt}{hline 11}{c +}{hline 55}{c +}{hline 10}
     Total {c |}{res}        19         19         20         19         20 {txt}{c |}{res}        97 
{txt}K-fold cross-validation with 5 folds.
Fold {res}1 2 3 4 5 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         8{c |} {space 3} {res} 10.095769 {space 3} {res}  .7969594 {space 3} {res} .06185211  ^
{txt}        17{c |} {space 3} {res} 2.8386966 {space 3} {res} .71465814 {space 3} {res} .10621538  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. 
. cvlassologit ybin lcavol-pgg45, tabfold 

           {txt}{c |}                          Fold
      ybin {c |}         1          2          3          4          5 {c |}     Total
{hline 11}{c +}{hline 55}{c +}{hline 10}
         0 {c |}{res}        15         15         13         13         14 {txt}{c |}{res}        70 
{txt}         1 {c |}{res}         4          4          7          6          6 {txt}{c |}{res}        27 
{txt}{hline 11}{c +}{hline 55}{c +}{hline 10}
     Total {c |}{res}        19         19         20         19         20 {txt}{c |}{res}        97 
{txt}K-fold cross-validation with 5 folds.
Fold {res}1 2 3 4 5 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}        10{c |} {space 3} {res} 7.6153595 {space 3} {res} .75455639 {space 3} {res}  .0298891  ^
{txt}        19{c |} {space 3} {res} 2.1412629 {space 3} {res} .70055555 {space 3} {res} .06123135  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. 
. cvlassologit ybin lcavol-pgg45 [fw=f], tabfold strat

           {txt}{c |}                          Fold
      ybin {c |}         1          2          3          4          5 {c |}     Total
{hline 11}{c +}{hline 55}{c +}{hline 10}
         0 {c |}{res}        53         63         55         59         60 {txt}{c |}{res}       290 
{txt}         1 {c |}{res}        23         22         24         25         26 {txt}{c |}{res}       120 
{txt}{hline 11}{c +}{hline 55}{c +}{hline 10}
     Total {c |}{res}        76         85         79         84         86 {txt}{c |}{res}       410 
{txt}K-fold cross-validation with 5 folds.
Fold {res}1 2 3 4 5 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         6{c |} {space 3} {res} 13.501417 {space 3} {res} .92371393 {space 3} {res} .06411391  ^
{txt}        14{c |} {space 3} {res} 4.3710266 {space 3} {res}  .8307944 {space 3} {res} .12140523  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}.  
. cvlassologit ybin lcavol-pgg45 [fw=f], tabfold 

           {txt}{c |}                          Fold
      ybin {c |}         1          2          3          4          5 {c |}     Total
{hline 11}{c +}{hline 55}{c +}{hline 10}
         0 {c |}{res}        56         51         66         49         68 {txt}{c |}{res}       290 
{txt}         1 {c |}{res}        23         31         19         31         16 {txt}{c |}{res}       120 
{txt}{hline 11}{c +}{hline 55}{c +}{hline 10}
     Total {c |}{res}        79         82         85         80         84 {txt}{c |}{res}       410 
{txt}K-fold cross-validation with 5 folds.
Fold {res}1 2 3 4 5 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         8{c |} {space 3} {res} 10.184281 {space 3} {res} .88581592 {space 3} {res} .04883048  ^
{txt}        13{c |} {space 3} {res} 5.0327799 {space 3} {res} .83725617 {space 3} {res} .06729742  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. 
{txt}end of do-file

{com}. 
. do "cs_rlassologit.do"
{txt}
{com}. clear all 
{res}{txt}
{com}. 
. 
. 
. *************************************************************** 
. *** verifying against "hdm" package in R (Spindler et al.)      ***
. *** hdmlambda option ensures same lambda is used                        ***
. ***************************************************************
. 
. 
. $loadspam
{txt}(58 vars, 4,601 obs)

{com}. 
. 
. rlassologit v58 v1-v57  , hdmlambda
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v3 {c |}{col 21}{res}      0.0818368      0.0911749
{txt}{space 15}v5 {c |}{col 21}{res}      0.3792664      0.6003482
{txt}{space 15}v6 {c |}{col 21}{res}      0.4090015      0.8485870
{txt}{space 15}v7 {c |}{col 21}{res}      1.8997413      2.4474283
{txt}{space 15}v8 {c |}{col 21}{res}      0.4309734      0.6402136
{txt}{space 15}v9 {c |}{col 21}{res}      0.3156239      0.7260621
{txt}{space 14}v10 {c |}{col 21}{res}      0.0048763      0.1082446
{txt}{space 14}v16 {c |}{col 21}{res}      0.4478750      0.9990454
{txt}{space 14}v17 {c |}{col 21}{res}      0.4436761      0.9908264
{txt}{space 14}v18 {c |}{col 21}{res}      0.1927575      0.1262342
{txt}{space 14}v19 {c |}{col 21}{res}      0.0624956      0.0760883
{txt}{space 14}v20 {c |}{col 21}{res}      0.2483980      1.2342767
{txt}{space 14}v21 {c |}{col 21}{res}      0.2451824      0.1639695
{txt}{space 14}v22 {c |}{col 21}{res}      0.1095403      0.3409440
{txt}{space 14}v23 {c |}{col 21}{res}      1.4367753      2.1978709
{txt}{space 14}v24 {c |}{col 21}{res}      0.4404862      0.5174827
{txt}{space 14}v25 {c |}{col 21}{res}     -0.4796520     -1.9504124
{txt}{space 14}v26 {c |}{col 21}{res}     -0.2233588     -0.8650710
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0873983    -12.3111997
{txt}{space 14}v33 {c |}{col 21}{res}     -0.1435278     -0.8031068
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1344360      0.0241819
{txt}{space 14}v39 {c |}{col 21}{res}     -0.0322820     -0.8265198
{txt}{space 14}v42 {c |}{col 21}{res}     -0.2993749     -2.7999670
{txt}{space 14}v43 {c |}{col 21}{res}     -0.0176101     -1.2816720
{txt}{space 14}v44 {c |}{col 21}{res}     -0.0403139     -1.7105127
{txt}{space 14}v45 {c |}{col 21}{res}     -0.2157528     -0.7307022
{txt}{space 14}v46 {c |}{col 21}{res}     -0.2559548     -1.5712564
{txt}{space 14}v48 {c |}{col 21}{res}     -0.0046234     -4.5397346
{txt}{space 14}v49 {c |}{col 21}{res}     -0.1124130     -1.2103938
{txt}{space 14}v52 {c |}{col 21}{res}      0.4188453      0.3924539
{txt}{space 14}v53 {c |}{col 21}{res}      3.2560118      5.7099315
{txt}{space 14}v56 {c |}{col 21}{res}      0.0009226      0.0119033
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004327      0.0005627
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6692523     -1.6805612
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta)'
{txt}
{com}. mat G = ( 0 \ 0 \ 0.0818948712695488 \ 0 \ 0.379429361719609 \ 0.409109085956748 \ 1.9003258692222 \ 0.431150805857511 \ 0.315744217129519 \ 0.0049820928287534 \ 0 \ 0 \ 0 \ 0 \ 0 \ 0.447978507142549 \ 0.443934277021981 \ 0.192865405720127 \ 0.0625091762029476 \ 0.248557045294218 \ 0.245131827365983 \ 0.109668219678555 \ 1.43731652314774 \ 0.440704475266581 \ -0.480122280718989 \ -0.223595359843765 \ -0.0875263945521702 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.14385510842836 \ 0 \ 0 \ 0 \ -0.134425982189653 \ 0 \ -0.0324979517942505 \ 0 \ 0 \ -0.299792597221532 \ -0.0178914234516845 \ -0.0405270661669486 \ -0.215984667465846 \ -0.256364202865828 \ 0 \ -0.00501707194224279 \ -0.113031184465464 \ 0 \ 0 \ 0.418975832790503 \ 3.25756538129954 \ 0 \ 0 \ 0.000923864682472632 \ 0.000432834090656421 \ -1.66933973402153 )
{txt}
{com}. di mreldif(S,G)
{res}.00055543
{txt}
{com}. di e(lambda)
{res}69.269209
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. rlassologit v58 v1-v57 ,nocons hdmlambda
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v2 {c |}{col 21}{res}     -0.0864021     -0.2438703
{txt}{space 15}v5 {c |}{col 21}{res}      0.1420729      0.3237584
{txt}{space 15}v6 {c |}{col 21}{res}      0.0696148      0.3658951
{txt}{space 15}v7 {c |}{col 21}{res}      1.5124094      2.1483182
{txt}{space 15}v8 {c |}{col 21}{res}      0.2413068      0.5279629
{txt}{space 15}v9 {c |}{col 21}{res}      0.0892406      0.4630417
{txt}{space 14}v12 {c |}{col 21}{res}     -0.2626754     -0.4051575
{txt}{space 14}v15 {c |}{col 21}{res}      0.0219289      1.2633487
{txt}{space 14}v16 {c |}{col 21}{res}      0.2736968      0.7948602
{txt}{space 14}v17 {c |}{col 21}{res}      0.3267519      0.8489358
{txt}{space 14}v18 {c |}{col 21}{res}      0.0176134     -0.0498307
{txt}{space 14}v20 {c |}{col 21}{res}      0.2297984      1.3342773
{txt}{space 14}v21 {c |}{col 21}{res}      0.0820892      0.0455995
{txt}{space 14}v22 {c |}{col 21}{res}      0.0349657      0.3273623
{txt}{space 14}v23 {c |}{col 21}{res}      1.2756734      1.9759747
{txt}{space 14}v24 {c |}{col 21}{res}      0.3183246      0.3824989
{txt}{space 14}v25 {c |}{col 21}{res}     -0.7536021     -2.2393589
{txt}{space 14}v26 {c |}{col 21}{res}     -0.3712635     -0.9748771
{txt}{space 14}v27 {c |}{col 21}{res}     -0.1840658     -9.3264461
{txt}{space 14}v33 {c |}{col 21}{res}     -0.4515223     -1.0869808
{txt}{space 14}v35 {c |}{col 21}{res}     -0.0468163     -2.1547606
{txt}{space 14}v37 {c |}{col 21}{res}     -0.3779250     -0.2253376
{txt}{space 14}v39 {c |}{col 21}{res}     -0.1360625     -0.9567674
{txt}{space 14}v42 {c |}{col 21}{res}     -0.4949375     -3.0244352
{txt}{space 14}v43 {c |}{col 21}{res}     -0.1919771     -1.9012782
{txt}{space 14}v44 {c |}{col 21}{res}     -0.2743111     -2.3028157
{txt}{space 14}v45 {c |}{col 21}{res}     -0.5126451     -1.1017958
{txt}{space 14}v46 {c |}{col 21}{res}     -0.6227560     -2.1768003
{txt}{space 14}v47 {c |}{col 21}{res}     -0.2272200     -2.6396062
{txt}{space 14}v48 {c |}{col 21}{res}     -0.2895492     -4.3496106
{txt}{space 14}v49 {c |}{col 21}{res}     -0.3642791     -1.6163529
{txt}{space 14}v50 {c |}{col 21}{res}     -0.9797083     -1.0482526
{txt}{space 14}v51 {c |}{col 21}{res}     -0.3254104     -1.6765103
{txt}{space 14}v52 {c |}{col 21}{res}      0.1608367      0.2229926
{txt}{space 14}v53 {c |}{col 21}{res}      2.8008371      5.1863222
{txt}{space 14}v56 {c |}{col 21}{res}      0.0007093      0.0078098
{txt}{space 14}v57 {c |}{col 21}{res}      0.0000976      0.0003042
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta)'
{txt}
{com}. mat G = ( 0 \ -0.0864040297967744 \ 0 \ 0 \ 0.14203538121037 \ 0.0696029895895297 \ 1.5124020295351 \ 0.241304873304514 \ 0.089231885869934 \ 0 \ 0 \ -0.262648802099565 \ 0 \ 0 \ 0.0221381492679238 \ 0.273749502669813 \ 0.32684735941686 \ 0.0176157322393083 \ 0 \ 0.229847624122447 \ 0.0820838755349145 \ 0.0349736719705019 \ 1.27572289568391 \ 0.318345425501668 \ -0.75361780468791 \ -0.371276657650674 \ -0.184069780173229 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.451510644154917 \ 0 \ -0.0468459332646387 \ 0 \ -0.377889219838404 \ 0 \ -0.136072245922347 \ 0 \ 0 \ -0.494978796805398 \ -0.191973864938743 \ -0.274310171697392 \ -0.512607089354212 \ -0.622744742178529 \ -0.227169791356443 \ -0.289531930392509 \ -0.364271673492403 \ -0.979682797504907 \ -0.325414901150868 \ 0.160823428575976 \ 2.80067037980844 \ 0 \ 0 \ 0.00070917591496024 \ 9.75715276693764e-05 )
{txt}
{com}. di mreldif(S,G)
{res}.00020467
{txt}
{com}. di e(lambda) 
{res}69.187102
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. rlassologit v58 v1-v57 , postl hdmlambda
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v3 {c |}{col 21}{res}      0.0818368      0.0911749
{txt}{space 15}v5 {c |}{col 21}{res}      0.3792664      0.6003482
{txt}{space 15}v6 {c |}{col 21}{res}      0.4090015      0.8485870
{txt}{space 15}v7 {c |}{col 21}{res}      1.8997413      2.4474283
{txt}{space 15}v8 {c |}{col 21}{res}      0.4309734      0.6402136
{txt}{space 15}v9 {c |}{col 21}{res}      0.3156239      0.7260621
{txt}{space 14}v10 {c |}{col 21}{res}      0.0048763      0.1082446
{txt}{space 14}v16 {c |}{col 21}{res}      0.4478750      0.9990454
{txt}{space 14}v17 {c |}{col 21}{res}      0.4436761      0.9908264
{txt}{space 14}v18 {c |}{col 21}{res}      0.1927575      0.1262342
{txt}{space 14}v19 {c |}{col 21}{res}      0.0624956      0.0760883
{txt}{space 14}v20 {c |}{col 21}{res}      0.2483980      1.2342767
{txt}{space 14}v21 {c |}{col 21}{res}      0.2451824      0.1639695
{txt}{space 14}v22 {c |}{col 21}{res}      0.1095403      0.3409440
{txt}{space 14}v23 {c |}{col 21}{res}      1.4367753      2.1978709
{txt}{space 14}v24 {c |}{col 21}{res}      0.4404862      0.5174827
{txt}{space 14}v25 {c |}{col 21}{res}     -0.4796520     -1.9504124
{txt}{space 14}v26 {c |}{col 21}{res}     -0.2233588     -0.8650710
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0873983    -12.3111997
{txt}{space 14}v33 {c |}{col 21}{res}     -0.1435278     -0.8031068
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1344360      0.0241819
{txt}{space 14}v39 {c |}{col 21}{res}     -0.0322820     -0.8265198
{txt}{space 14}v42 {c |}{col 21}{res}     -0.2993749     -2.7999670
{txt}{space 14}v43 {c |}{col 21}{res}     -0.0176101     -1.2816720
{txt}{space 14}v44 {c |}{col 21}{res}     -0.0403139     -1.7105127
{txt}{space 14}v45 {c |}{col 21}{res}     -0.2157528     -0.7307022
{txt}{space 14}v46 {c |}{col 21}{res}     -0.2559548     -1.5712564
{txt}{space 14}v48 {c |}{col 21}{res}     -0.0046234     -4.5397346
{txt}{space 14}v49 {c |}{col 21}{res}     -0.1124130     -1.2103938
{txt}{space 14}v52 {c |}{col 21}{res}      0.4188453      0.3924539
{txt}{space 14}v53 {c |}{col 21}{res}      3.2560118      5.7099315
{txt}{space 14}v56 {c |}{col 21}{res}      0.0009226      0.0119033
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004327      0.0005627
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6692523     -1.6805612
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta_post)'
{txt}
{com}. mat G = ( 0 \ 0 \ 0.0911749035363913 \ 0 \ 0.600348234636252 \ 0.848587006358465 \ 2.4474282743846 \ 0.640213550033936 \ 0.72606218429801 \ 0.108244564804095 \ 0 \ 0 \ 0 \ 0 \ 0 \ 0.999045440309051 \ 0.990826392555297 \ 0.126234229254353 \ 0.0760883260691006 \ 1.23427664731182 \ 0.163969519238026 \ 0.340943971216137 \ 2.19787084433997 \ 0.517482714211636 \ -1.95041244716883 \ -0.865071034109125 \ -12.3112008896115 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.803106762101585 \ 0 \ 0 \ 0 \ 0.0241819026296822 \ 0 \ -0.826519776504054 \ 0 \ 0 \ -2.79996722215776 \ -1.28167204241549 \ -1.71051269617404 \ -0.730702205605326 \ -1.57125641472336 \ 0 \ -4.53973467862469 \ -1.21039378912067 \ 0 \ 0 \ 0.392453914192812 \ 5.70993167564932 \ 0 \ 0 \ 0.0119032569623226 \ 0.000562741641538757 \ -1.6805612492106 )
{txt}
{com}. di mreldif(S,G)
{res}9.266e-08
{txt}
{com}. di e(lambda) 
{res}69.269209
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. rlassologit v58 v1-v57 ,postl nocons hdmlambda
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v2 {c |}{col 21}{res}     -0.0864021     -0.2438703
{txt}{space 15}v5 {c |}{col 21}{res}      0.1420729      0.3237584
{txt}{space 15}v6 {c |}{col 21}{res}      0.0696148      0.3658951
{txt}{space 15}v7 {c |}{col 21}{res}      1.5124094      2.1483182
{txt}{space 15}v8 {c |}{col 21}{res}      0.2413068      0.5279629
{txt}{space 15}v9 {c |}{col 21}{res}      0.0892406      0.4630417
{txt}{space 14}v12 {c |}{col 21}{res}     -0.2626754     -0.4051575
{txt}{space 14}v15 {c |}{col 21}{res}      0.0219289      1.2633487
{txt}{space 14}v16 {c |}{col 21}{res}      0.2736968      0.7948602
{txt}{space 14}v17 {c |}{col 21}{res}      0.3267519      0.8489358
{txt}{space 14}v18 {c |}{col 21}{res}      0.0176134     -0.0498307
{txt}{space 14}v20 {c |}{col 21}{res}      0.2297984      1.3342773
{txt}{space 14}v21 {c |}{col 21}{res}      0.0820892      0.0455995
{txt}{space 14}v22 {c |}{col 21}{res}      0.0349657      0.3273623
{txt}{space 14}v23 {c |}{col 21}{res}      1.2756734      1.9759747
{txt}{space 14}v24 {c |}{col 21}{res}      0.3183246      0.3824989
{txt}{space 14}v25 {c |}{col 21}{res}     -0.7536021     -2.2393589
{txt}{space 14}v26 {c |}{col 21}{res}     -0.3712635     -0.9748771
{txt}{space 14}v27 {c |}{col 21}{res}     -0.1840658     -9.3264461
{txt}{space 14}v33 {c |}{col 21}{res}     -0.4515223     -1.0869808
{txt}{space 14}v35 {c |}{col 21}{res}     -0.0468163     -2.1547606
{txt}{space 14}v37 {c |}{col 21}{res}     -0.3779250     -0.2253376
{txt}{space 14}v39 {c |}{col 21}{res}     -0.1360625     -0.9567674
{txt}{space 14}v42 {c |}{col 21}{res}     -0.4949375     -3.0244352
{txt}{space 14}v43 {c |}{col 21}{res}     -0.1919771     -1.9012782
{txt}{space 14}v44 {c |}{col 21}{res}     -0.2743111     -2.3028157
{txt}{space 14}v45 {c |}{col 21}{res}     -0.5126451     -1.1017958
{txt}{space 14}v46 {c |}{col 21}{res}     -0.6227560     -2.1768003
{txt}{space 14}v47 {c |}{col 21}{res}     -0.2272200     -2.6396062
{txt}{space 14}v48 {c |}{col 21}{res}     -0.2895492     -4.3496106
{txt}{space 14}v49 {c |}{col 21}{res}     -0.3642791     -1.6163529
{txt}{space 14}v50 {c |}{col 21}{res}     -0.9797083     -1.0482526
{txt}{space 14}v51 {c |}{col 21}{res}     -0.3254104     -1.6765103
{txt}{space 14}v52 {c |}{col 21}{res}      0.1608367      0.2229926
{txt}{space 14}v53 {c |}{col 21}{res}      2.8008371      5.1863222
{txt}{space 14}v56 {c |}{col 21}{res}      0.0007093      0.0078098
{txt}{space 14}v57 {c |}{col 21}{res}      0.0000976      0.0003042
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta_post)'
{txt}
{com}. mat G = ( 0 \ -0.243870343170744 \ 0 \ 0 \ 0.323758365384805 \ 0.365895137099397 \ 2.14831819350489 \ 0.52796289907392 \ 0.463041759179273 \ 0 \ 0 \ -0.40515745464642 \ 0 \ 0 \ 1.26334873669496 \ 0.794860192566074 \ 0.848935809630871 \ -0.0498307343945656 \ 0 \ 1.33427727401593 \ 0.0455995142062725 \ 0.327362342472093 \ 1.975974600918 \ 0.382498934793842 \ -2.23935890965794 \ -0.974877197129703 \ -9.3264468573156 \ 0 \ 0 \ 0 \ 0 \ 0 \ -1.08698081175868 \ 0 \ -2.15476075561477 \ 0 \ -0.225337578437582 \ 0 \ -0.956767386369015 \ 0 \ 0 \ -3.02443544634889 \ -1.90127824511308 \ -2.30281566974477 \ -1.10179581057555 \ -2.17680028017689 \ -2.63960623014879 \ -4.34961066961778 \ -1.61635289440844 \ -1.04825259598903 \ -1.67651030427761 \ 0.222992581890547 \ 5.18632237505927 \ 0 \ 0 \ 0.00780983251377047 \ 0.000304166775336087 )
{txt}
{com}. di mreldif(S,G)
{res}7.670e-08
{txt}
{com}. di e(lambda)
{res}69.187102
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
{txt}end of do-file

{com}. 
. do "cs_lassologit_predict.do"
{txt}
{com}. 
. clear all 
{res}{txt}
{com}. 
. 
. ********************************************************************************
. *** Verify post-logit predictions                                                                                        ***
. ********************************************************************************
. 
. $loadspam
{txt}(58 vars, 4,601 obs)

{com}. 
. gen myholdout = _n>4000
{txt}
{com}. 
. foreach lam in 0.18 .1 .05 .01 0.005 0.001 {c -(}
{txt}  2{com}.         
.         cap drop yhat* phat*
{txt}  3{com}.         
.         lassologit v58 v1-v57, l(`lam') postlogit lambdan
{txt}  4{com}.         predict double yhat_my, xb
{txt}  5{com}.         predict double phat_my, pr
{txt}  6{com}. 
.         local sel = e(selected)
{txt}  7{com}.         logit v58 `sel'
{txt}  8{com}.         predict double yhat_logit, xb
{txt}  9{com}.         predict double phat_logit, pr
{txt} 10{com}.         
.         assert reldif(yhat_my,yhat_logit)<10e4
{txt} 11{com}.         assert reldif(phat_my,phat_logit)<10e4
{txt} 12{com}. {c )-}
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 14}v21 {c |}{col 21}{res}      0.0251662      0.8584517
{txt}{space 12}_cons {c |}{col 21}{res}     -0.4508119     -1.1097109
{txt}{hline 18}{c BT}{hline 32}
Uses lasso for prediction
storing linear predictions
Uses lasso for prediction
storing predicted probabilities

{res}{txt}Iteration 0:{space 3}log likelihood = {res:-3085.0764}  
Iteration 1:{space 3}log likelihood = {res:-2704.3835}  
Iteration 2:{space 3}log likelihood = {res:-2703.6411}  
Iteration 3:{space 3}log likelihood = {res:-2703.6409}  
{res}
{txt}Logistic regression{col 49}Number of obs{col 67}= {res}     4,601
{txt}{col 49}LR chi2({res}1{txt}){col 67}= {res}    762.87
{txt}{col 49}Prob > chi2{col 67}= {res}    0.0000
{txt}Log likelihood = {res}-2703.6409{txt}{col 49}Pseudo R2{col 67}= {res}    0.1236

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         v58{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      z{col 46}   P>|z|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}v21 {c |}{col 14}{res}{space 2} .8584517{col 26}{space 2} .0368163{col 37}{space 1}   23.32{col 46}{space 3}0.000{col 54}{space 4}  .786293{col 67}{space 3} .9306104
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-1.109711{col 26}{space 2} .0423539{col 37}{space 1}  -26.20{col 46}{space 3}0.000{col 54}{space 4}-1.192723{col 67}{space 3}-1.026699
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v7 {c |}{col 21}{res}      0.5412442      4.2194397
{txt}{space 14}v16 {c |}{col 21}{res}      0.0569502      0.8984170
{txt}{space 14}v21 {c |}{col 21}{res}      0.2448168      0.3940148
{txt}{space 14}v23 {c |}{col 21}{res}      0.5126734      3.8072262
{txt}{space 14}v25 {c |}{col 21}{res}     -0.0071134     -2.7490367
{txt}{space 14}v53 {c |}{col 21}{res}      0.6310249      7.5984195
{txt}{space 14}v57 {c |}{col 21}{res}      0.0000267      0.0011889
{txt}{space 12}_cons {c |}{col 21}{res}     -0.8168528     -1.7667647
{txt}{hline 18}{c BT}{hline 32}
Uses lasso for prediction
storing linear predictions
Uses lasso for prediction
storing predicted probabilities

{res}{txt}Iteration 0:{space 3}log likelihood = {res:-3085.0764}  
Iteration 1:{space 3}log likelihood = {res:-1756.6861}  
Iteration 2:{space 3}log likelihood = {res:-1569.5018}  
Iteration 3:{space 3}log likelihood = {res:-1512.4228}  
Iteration 4:{space 3}log likelihood = {res:-1506.6144}  
Iteration 5:{space 3}log likelihood = {res:-1506.5064}  
Iteration 6:{space 3}log likelihood = {res:-1506.5064}  
{res}
{txt}Logistic regression{col 49}Number of obs{col 67}= {res}     4,601
{txt}{col 49}LR chi2({res}7{txt}){col 67}= {res}   3157.14
{txt}{col 49}Prob > chi2{col 67}= {res}    0.0000
{txt}Log likelihood = {res}-1506.5064{txt}{col 49}Pseudo R2{col 67}= {res}    0.5117

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         v58{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      z{col 46}   P>|z|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 10}v7 {c |}{col 14}{res}{space 2}  4.21944{col 26}{space 2} .3657308{col 37}{space 1}   11.54{col 46}{space 3}0.000{col 54}{space 4} 3.502621{col 67}{space 3} 4.936259
{txt}{space 9}v16 {c |}{col 14}{res}{space 2}  .898417{col 26}{space 2} .0914536{col 37}{space 1}    9.82{col 46}{space 3}0.000{col 54}{space 4} .7191713{col 67}{space 3} 1.077663
{txt}{space 9}v21 {c |}{col 14}{res}{space 2} .3940148{col 26}{space 2}  .036492{col 37}{space 1}   10.80{col 46}{space 3}0.000{col 54}{space 4} .3224919{col 67}{space 3} .4655378
{txt}{space 9}v23 {c |}{col 14}{res}{space 2} 3.807226{col 26}{space 2} .4987968{col 37}{space 1}    7.63{col 46}{space 3}0.000{col 54}{space 4} 2.829602{col 67}{space 3}  4.78485
{txt}{space 9}v25 {c |}{col 14}{res}{space 2}-2.749037{col 26}{space 2} .2717015{col 37}{space 1}  -10.12{col 46}{space 3}0.000{col 54}{space 4}-3.281562{col 67}{space 3}-2.216512
{txt}{space 9}v53 {c |}{col 14}{res}{space 2} 7.598419{col 26}{space 2} .6620765{col 37}{space 1}   11.48{col 46}{space 3}0.000{col 54}{space 4} 6.300773{col 67}{space 3} 8.896066
{txt}{space 9}v57 {c |}{col 14}{res}{space 2} .0011889{col 26}{space 2} .0001322{col 37}{space 1}    8.99{col 46}{space 3}0.000{col 54}{space 4} .0009298{col 67}{space 3} .0014481
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-1.766765{col 26}{space 2} .0655888{col 37}{space 1}  -26.94{col 46}{space 3}0.000{col 54}{space 4}-1.895316{col 67}{space 3}-1.638213
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 6 2}Note: 79 failures and 21 successes completely determined.{p_end}
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v5 {c |}{col 21}{res}      0.1727807      0.4550969
{txt}{space 15}v6 {c |}{col 21}{res}      0.2152931      0.9614203
{txt}{space 15}v7 {c |}{col 21}{res}      1.1426365      3.2847248
{txt}{space 15}v8 {c |}{col 21}{res}      0.1368686      0.6228345
{txt}{space 15}v9 {c |}{col 21}{res}      0.1194438      1.2686870
{txt}{space 14}v16 {c |}{col 21}{res}      0.2610206      1.1365279
{txt}{space 14}v17 {c |}{col 21}{res}      0.1633636      1.1000374
{txt}{space 14}v18 {c |}{col 21}{res}      0.0186096      0.3792675
{txt}{space 14}v19 {c |}{col 21}{res}      0.0354681      0.0478566
{txt}{space 14}v20 {c |}{col 21}{res}      0.0623173      1.6419546
{txt}{space 14}v21 {c |}{col 21}{res}      0.2850692      0.2785537
{txt}{space 14}v23 {c |}{col 21}{res}      0.9087893      3.0333616
{txt}{space 14}v24 {c |}{col 21}{res}      0.1364868      0.7890926
{txt}{space 14}v25 {c |}{col 21}{res}     -0.1194090     -1.8286444
{txt}{space 14}v26 {c |}{col 21}{res}     -0.0365264     -1.1537435
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0021456     -8.0061923
{txt}{space 14}v52 {c |}{col 21}{res}      0.1837436      0.4989944
{txt}{space 14}v53 {c |}{col 21}{res}      1.5733685      5.1962139
{txt}{space 14}v57 {c |}{col 21}{res}      0.0002816      0.0009413
{txt}{space 12}_cons {c |}{col 21}{res}     -1.3345409     -2.1960013
{txt}{hline 18}{c BT}{hline 32}
Uses lasso for prediction
storing linear predictions
Uses lasso for prediction
storing predicted probabilities

{res}{txt}Iteration 0:{space 3}log likelihood = {res:-3085.0764}  
Iteration 1:{space 3}log likelihood = {res:-1469.0752}  
Iteration 2:{space 3}log likelihood = {res:-1283.6935}  
Iteration 3:{space 3}log likelihood = {res:-1197.5571}  
Iteration 4:{space 3}log likelihood = {res:-1176.8582}  
Iteration 5:{space 3}log likelihood = {res: -1171.683}  
Iteration 6:{space 3}log likelihood = {res:-1170.4581}  
Iteration 7:{space 3}log likelihood = {res:-1170.4163}  
Iteration 8:{space 3}log likelihood = {res:-1170.4162}  
{res}
{txt}Logistic regression{col 49}Number of obs{col 67}= {res}     4,601
{txt}{col 49}LR chi2({res}19{txt}){col 67}= {res}   3829.32
{txt}{col 49}Prob > chi2{col 67}= {res}    0.0000
{txt}Log likelihood = {res}-1170.4162{txt}{col 49}Pseudo R2{col 67}= {res}    0.6206

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         v58{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      z{col 46}   P>|z|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 10}v5 {c |}{col 14}{res}{space 2} .4550969{col 26}{space 2} .0707022{col 37}{space 1}    6.44{col 46}{space 3}0.000{col 54}{space 4} .3165231{col 67}{space 3} .5936707
{txt}{space 10}v6 {c |}{col 14}{res}{space 2} .9614203{col 26}{space 2} .2095233{col 37}{space 1}    4.59{col 46}{space 3}0.000{col 54}{space 4} .5507623{col 67}{space 3} 1.372078
{txt}{space 10}v7 {c |}{col 14}{res}{space 2} 3.284725{col 26}{space 2} .3554478{col 37}{space 1}    9.24{col 46}{space 3}0.000{col 54}{space 4}  2.58806{col 67}{space 3}  3.98139
{txt}{space 10}v8 {c |}{col 14}{res}{space 2} .6228345{col 26}{space 2} .1469756{col 37}{space 1}    4.24{col 46}{space 3}0.000{col 54}{space 4} .3347677{col 67}{space 3} .9109014
{txt}{space 10}v9 {c |}{col 14}{res}{space 2} 1.268687{col 26}{space 2} .2753861{col 37}{space 1}    4.61{col 46}{space 3}0.000{col 54}{space 4} .7289401{col 67}{space 3} 1.808434
{txt}{space 9}v16 {c |}{col 14}{res}{space 2} 1.136528{col 26}{space 2} .1236747{col 37}{space 1}    9.19{col 46}{space 3}0.000{col 54}{space 4} .8941299{col 67}{space 3} 1.378926
{txt}{space 9}v17 {c |}{col 14}{res}{space 2} 1.100037{col 26}{space 2}  .213033{col 37}{space 1}    5.16{col 46}{space 3}0.000{col 54}{space 4} .6825004{col 67}{space 3} 1.517574
{txt}{space 9}v18 {c |}{col 14}{res}{space 2} .3792675{col 26}{space 2}  .111105{col 37}{space 1}    3.41{col 46}{space 3}0.001{col 54}{space 4} .1615056{col 67}{space 3} .5970294
{txt}{space 9}v19 {c |}{col 14}{res}{space 2} .0478566{col 26}{space 2} .0294369{col 37}{space 1}    1.63{col 46}{space 3}0.104{col 54}{space 4}-.0098386{col 67}{space 3} .1055518
{txt}{space 9}v20 {c |}{col 14}{res}{space 2} 1.641955{col 26}{space 2} .4716646{col 37}{space 1}    3.48{col 46}{space 3}0.000{col 54}{space 4}  .717509{col 67}{space 3}   2.5664
{txt}{space 9}v21 {c |}{col 14}{res}{space 2} .2785537{col 26}{space 2} .0413681{col 37}{space 1}    6.73{col 46}{space 3}0.000{col 54}{space 4} .1974738{col 67}{space 3} .3596336
{txt}{space 9}v23 {c |}{col 14}{res}{space 2} 3.033362{col 26}{space 2} .4879427{col 37}{space 1}    6.22{col 46}{space 3}0.000{col 54}{space 4} 2.077011{col 67}{space 3} 3.989712
{txt}{space 9}v24 {c |}{col 14}{res}{space 2} .7890926{col 26}{space 2} .2063253{col 37}{space 1}    3.82{col 46}{space 3}0.000{col 54}{space 4} .3847024{col 67}{space 3} 1.193483
{txt}{space 9}v25 {c |}{col 14}{res}{space 2}-1.828644{col 26}{space 2} .2862979{col 37}{space 1}   -6.39{col 46}{space 3}0.000{col 54}{space 4}-2.389778{col 67}{space 3}-1.267511
{txt}{space 9}v26 {c |}{col 14}{res}{space 2}-1.153743{col 26}{space 2} .4202757{col 37}{space 1}   -2.75{col 46}{space 3}0.006{col 54}{space 4}-1.977469{col 67}{space 3}-.3300183
{txt}{space 9}v27 {c |}{col 14}{res}{space 2}-8.006192{col 26}{space 2} 1.986354{col 37}{space 1}   -4.03{col 46}{space 3}0.000{col 54}{space 4}-11.89937{col 67}{space 3} -4.11301
{txt}{space 9}v52 {c |}{col 14}{res}{space 2} .4989944{col 26}{space 2} .0862705{col 37}{space 1}    5.78{col 46}{space 3}0.000{col 54}{space 4} .3299073{col 67}{space 3} .6680815
{txt}{space 9}v53 {c |}{col 14}{res}{space 2} 5.196214{col 26}{space 2} .6349955{col 37}{space 1}    8.18{col 46}{space 3}0.000{col 54}{space 4} 3.951646{col 67}{space 3} 6.440782
{txt}{space 9}v57 {c |}{col 14}{res}{space 2} .0009413{col 26}{space 2} .0001316{col 37}{space 1}    7.15{col 46}{space 3}0.000{col 54}{space 4} .0006834{col 67}{space 3} .0011992
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-2.196001{col 26}{space 2} .0999864{col 37}{space 1}  -21.96{col 46}{space 3}0.000{col 54}{space 4}-2.391971{col 67}{space 3}-2.000032
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 6 2}Note: 410 failures and 17 successes completely determined.{p_end}
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v2 {c |}{col 21}{res}     -0.0037409     -0.1389110
{txt}{space 15}v3 {c |}{col 21}{res}      0.1011375      0.1052528
{txt}{space 15}v4 {c |}{col 21}{res}      0.0173759      2.3399989
{txt}{space 15}v5 {c |}{col 21}{res}      0.4296060      0.5853019
{txt}{space 15}v6 {c |}{col 21}{res}      0.4399529      0.8359847
{txt}{space 15}v7 {c |}{col 21}{res}      2.0688244      2.4042943
{txt}{space 15}v8 {c |}{col 21}{res}      0.4808568      0.5882269
{txt}{space 15}v9 {c |}{col 21}{res}      0.3601749      0.7213125
{txt}{space 14}v10 {c |}{col 21}{res}      0.0363979      0.1183907
{txt}{space 14}v12 {c |}{col 21}{res}     -0.0308145     -0.1612150
{txt}{space 14}v16 {c |}{col 21}{res}      0.4744442      0.9566529
{txt}{space 14}v17 {c |}{col 21}{res}      0.5376230      1.0240614
{txt}{space 14}v18 {c |}{col 21}{res}      0.2235757      0.1589568
{txt}{space 14}v19 {c |}{col 21}{res}      0.0684679      0.0765814
{txt}{space 14}v20 {c |}{col 21}{res}      0.3023891      1.3204219
{txt}{space 14}v21 {c |}{col 21}{res}      0.2312331      0.1788195
{txt}{space 14}v22 {c |}{col 21}{res}      0.1524290      0.3431311
{txt}{space 14}v23 {c |}{col 21}{res}      1.6218808      2.2021820
{txt}{space 14}v24 {c |}{col 21}{res}      0.5023649      0.4542068
{txt}{space 14}v25 {c |}{col 21}{res}     -0.6504894     -1.9495298
{txt}{space 14}v26 {c |}{col 21}{res}     -0.3118048     -0.8067431
{txt}{space 14}v27 {c |}{col 21}{res}     -0.1501577    -11.7835281
{txt}{space 14}v33 {c |}{col 21}{res}     -0.2648093     -0.8002706
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1250243      0.0036378
{txt}{space 14}v39 {c |}{col 21}{res}     -0.1063193     -0.7635106
{txt}{space 14}v42 {c |}{col 21}{res}     -0.4459358     -2.6936770
{txt}{space 14}v43 {c |}{col 21}{res}     -0.1163321     -1.3224400
{txt}{space 14}v44 {c |}{col 21}{res}     -0.1287170     -1.7394127
{txt}{space 14}v45 {c |}{col 21}{res}     -0.3007246     -0.7909711
{txt}{space 14}v46 {c |}{col 21}{res}     -0.4174007     -1.5924053
{txt}{space 14}v47 {c |}{col 21}{res}     -0.1506039     -2.2954658
{txt}{space 14}v48 {c |}{col 21}{res}     -0.1642561     -4.4529880
{txt}{space 14}v49 {c |}{col 21}{res}     -0.3189394     -1.2608654
{txt}{space 14}v52 {c |}{col 21}{res}      0.4521116      0.3611414
{txt}{space 14}v53 {c |}{col 21}{res}      3.7605479      5.7431487
{txt}{space 14}v56 {c |}{col 21}{res}      0.0013784      0.0113141
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004669      0.0005325
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6707145     -1.5458167
{txt}{hline 18}{c BT}{hline 32}
Uses lasso for prediction
storing linear predictions
Uses lasso for prediction
storing predicted probabilities

{res}{txt}Iteration 0:{space 3}log likelihood = {res:-3085.0764}  
Iteration 1:{space 3}log likelihood = {res: -1289.242}  
Iteration 2:{space 3}log likelihood = {res:-1093.1269}  
Iteration 3:{space 3}log likelihood = {res:-985.64363}  
Iteration 4:{space 3}log likelihood = {res: -964.6346}  
Iteration 5:{space 3}log likelihood = {res:-952.99295}  
Iteration 6:{space 3}log likelihood = {res:-951.33099}  
Iteration 7:{space 3}log likelihood = {res:-951.31994}  
Iteration 8:{space 3}log likelihood = {res:-951.31994}  
{res}
{txt}Logistic regression{col 49}Number of obs{col 67}= {res}     4,601
{txt}{col 49}LR chi2({res}37{txt}){col 67}= {res}   4267.51
{txt}{col 49}Prob > chi2{col 67}= {res}    0.0000
{txt}Log likelihood = {res}-951.31994{txt}{col 49}Pseudo R2{col 67}= {res}    0.6916

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         v58{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      z{col 46}   P>|z|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 10}v2 {c |}{col 14}{res}{space 2} -.138911{col 26}{space 2} .0658722{col 37}{space 1}   -2.11{col 46}{space 3}0.035{col 54}{space 4} -.268018{col 67}{space 3}-.0098039
{txt}{space 10}v3 {c |}{col 14}{res}{space 2} .1052528{col 26}{space 2} .1068607{col 37}{space 1}    0.98{col 46}{space 3}0.325{col 54}{space 4}-.1041904{col 67}{space 3}  .314696
{txt}{space 10}v4 {c |}{col 14}{res}{space 2} 2.339999{col 26}{space 2} 1.504231{col 37}{space 1}    1.56{col 46}{space 3}0.120{col 54}{space 4}-.6082389{col 67}{space 3} 5.288237
{txt}{space 10}v5 {c |}{col 14}{res}{space 2} .5853019{col 26}{space 2} .1019135{col 37}{space 1}    5.74{col 46}{space 3}0.000{col 54}{space 4}  .385555{col 67}{space 3} .7850487
{txt}{space 10}v6 {c |}{col 14}{res}{space 2} .8359847{col 26}{space 2} .2422989{col 37}{space 1}    3.45{col 46}{space 3}0.001{col 54}{space 4} .3610875{col 67}{space 3} 1.310882
{txt}{space 10}v7 {c |}{col 14}{res}{space 2} 2.404294{col 26}{space 2}  .328566{col 37}{space 1}    7.32{col 46}{space 3}0.000{col 54}{space 4} 1.760317{col 67}{space 3} 3.048272
{txt}{space 10}v8 {c |}{col 14}{res}{space 2} .5882269{col 26}{space 2} .1577331{col 37}{space 1}    3.73{col 46}{space 3}0.000{col 54}{space 4} .2790758{col 67}{space 3}  .897378
{txt}{space 10}v9 {c |}{col 14}{res}{space 2} .7213125{col 26}{space 2} .2736839{col 37}{space 1}    2.64{col 46}{space 3}0.008{col 54}{space 4}  .184902{col 67}{space 3} 1.257723
{txt}{space 9}v10 {c |}{col 14}{res}{space 2} .1183907{col 26}{space 2} .0692106{col 37}{space 1}    1.71{col 46}{space 3}0.087{col 54}{space 4}-.0172595{col 67}{space 3}  .254041
{txt}{space 9}v12 {c |}{col 14}{res}{space 2} -.161215{col 26}{space 2} .0723741{col 37}{space 1}   -2.23{col 46}{space 3}0.026{col 54}{space 4}-.3030656{col 67}{space 3}-.0193644
{txt}{space 9}v16 {c |}{col 14}{res}{space 2} .9566529{col 26}{space 2} .1347323{col 37}{space 1}    7.10{col 46}{space 3}0.000{col 54}{space 4} .6925825{col 67}{space 3} 1.220723
{txt}{space 9}v17 {c |}{col 14}{res}{space 2} 1.024061{col 26}{space 2} .2235529{col 37}{space 1}    4.58{col 46}{space 3}0.000{col 54}{space 4} .5859058{col 67}{space 3} 1.462217
{txt}{space 9}v18 {c |}{col 14}{res}{space 2} .1589568{col 26}{space 2} .1116703{col 37}{space 1}    1.42{col 46}{space 3}0.155{col 54}{space 4} -.059913{col 67}{space 3} .3778267
{txt}{space 9}v19 {c |}{col 14}{res}{space 2} .0765814{col 26}{space 2}  .034181{col 37}{space 1}    2.24{col 46}{space 3}0.025{col 54}{space 4} .0095879{col 67}{space 3} .1435749
{txt}{space 9}v20 {c |}{col 14}{res}{space 2} 1.320422{col 26}{space 2} .5628815{col 37}{space 1}    2.35{col 46}{space 3}0.019{col 54}{space 4} .2171945{col 67}{space 3} 2.423649
{txt}{space 9}v21 {c |}{col 14}{res}{space 2} .1788195{col 26}{space 2}  .044944{col 37}{space 1}    3.98{col 46}{space 3}0.000{col 54}{space 4} .0907309{col 67}{space 3}  .266908
{txt}{space 9}v22 {c |}{col 14}{res}{space 2} .3431311{col 26}{space 2} .1360397{col 37}{space 1}    2.52{col 46}{space 3}0.012{col 54}{space 4} .0764983{col 67}{space 3} .6097639
{txt}{space 9}v23 {c |}{col 14}{res}{space 2} 2.202182{col 26}{space 2} .4686514{col 37}{space 1}    4.70{col 46}{space 3}0.000{col 54}{space 4} 1.283642{col 67}{space 3} 3.120722
{txt}{space 9}v24 {c |}{col 14}{res}{space 2} .4542068{col 26}{space 2} .1703579{col 37}{space 1}    2.67{col 46}{space 3}0.008{col 54}{space 4} .1203116{col 67}{space 3} .7881021
{txt}{space 9}v25 {c |}{col 14}{res}{space 2} -1.94953{col 26}{space 2} .2976284{col 37}{space 1}   -6.55{col 46}{space 3}0.000{col 54}{space 4}-2.532871{col 67}{space 3}-1.366189
{txt}{space 9}v26 {c |}{col 14}{res}{space 2}-.8067431{col 26}{space 2} .4032844{col 37}{space 1}   -2.00{col 46}{space 3}0.045{col 54}{space 4}-1.597166{col 67}{space 3}-.0163202
{txt}{space 9}v27 {c |}{col 14}{res}{space 2}-11.78353{col 26}{space 2} 1.787256{col 37}{space 1}   -6.59{col 46}{space 3}0.000{col 54}{space 4}-15.28649{col 67}{space 3} -8.28057
{txt}{space 9}v33 {c |}{col 14}{res}{space 2}-.8002706{col 26}{space 2} .2982082{col 37}{space 1}   -2.68{col 46}{space 3}0.007{col 54}{space 4}-1.384748{col 67}{space 3}-.2157932
{txt}{space 9}v37 {c |}{col 14}{res}{space 2} .0036378{col 26}{space 2}  .174055{col 37}{space 1}    0.02{col 46}{space 3}0.983{col 54}{space 4}-.3375037{col 67}{space 3} .3447792
{txt}{space 9}v39 {c |}{col 14}{res}{space 2}-.7635106{col 26}{space 2} .3752802{col 37}{space 1}   -2.03{col 46}{space 3}0.042{col 54}{space 4}-1.499046{col 67}{space 3} -.027975
{txt}{space 9}v42 {c |}{col 14}{res}{space 2}-2.693677{col 26}{space 2} .8363757{col 37}{space 1}   -3.22{col 46}{space 3}0.001{col 54}{space 4}-4.332943{col 67}{space 3}-1.054411
{txt}{space 9}v43 {c |}{col 14}{res}{space 2} -1.32244{col 26}{space 2} .8192734{col 37}{space 1}   -1.61{col 46}{space 3}0.106{col 54}{space 4}-2.928186{col 67}{space 3} .2833064
{txt}{space 9}v44 {c |}{col 14}{res}{space 2}-1.739413{col 26}{space 2} .5320299{col 37}{space 1}   -3.27{col 46}{space 3}0.001{col 54}{space 4}-2.782172{col 67}{space 3}-.6966533
{txt}{space 9}v45 {c |}{col 14}{res}{space 2}-.7909711{col 26}{space 2}  .153113{col 37}{space 1}   -5.17{col 46}{space 3}0.000{col 54}{space 4}-1.091067{col 67}{space 3}-.4908751
{txt}{space 9}v46 {c |}{col 14}{res}{space 2}-1.592405{col 26}{space 2} .2733737{col 37}{space 1}   -5.83{col 46}{space 3}0.000{col 54}{space 4}-2.128208{col 67}{space 3}-1.056603
{txt}{space 9}v47 {c |}{col 14}{res}{space 2}-2.295466{col 26}{space 2} 1.622999{col 37}{space 1}   -1.41{col 46}{space 3}0.157{col 54}{space 4}-5.476486{col 67}{space 3} .8855545
{txt}{space 9}v48 {c |}{col 14}{res}{space 2}-4.452988{col 26}{space 2} 1.726587{col 37}{space 1}   -2.58{col 46}{space 3}0.010{col 54}{space 4}-7.837036{col 67}{space 3} -1.06894
{txt}{space 9}v49 {c |}{col 14}{res}{space 2}-1.260865{col 26}{space 2} .4175197{col 37}{space 1}   -3.02{col 46}{space 3}0.003{col 54}{space 4}-2.079189{col 67}{space 3}-.4425418
{txt}{space 9}v52 {c |}{col 14}{res}{space 2} .3611414{col 26}{space 2} .0890868{col 37}{space 1}    4.05{col 46}{space 3}0.000{col 54}{space 4} .1865345{col 67}{space 3} .5357482
{txt}{space 9}v53 {c |}{col 14}{res}{space 2} 5.743149{col 26}{space 2} .7275702{col 37}{space 1}    7.89{col 46}{space 3}0.000{col 54}{space 4} 4.317137{col 67}{space 3}  7.16916
{txt}{space 9}v56 {c |}{col 14}{res}{space 2} .0113141{col 26}{space 2} .0017512{col 37}{space 1}    6.46{col 46}{space 3}0.000{col 54}{space 4} .0078818{col 67}{space 3} .0147463
{txt}{space 9}v57 {c |}{col 14}{res}{space 2} .0005325{col 26}{space 2} .0001693{col 37}{space 1}    3.15{col 46}{space 3}0.002{col 54}{space 4} .0002008{col 67}{space 3} .0008642
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-1.545817{col 26}{space 2} .1258941{col 37}{space 1}  -12.28{col 46}{space 3}0.000{col 54}{space 4}-1.792565{col 67}{space 3}-1.299069
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 6 2}Note: 544 failures and 30 successes completely determined.{p_end}
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.0422566     -0.4523281
{txt}{space 15}v2 {c |}{col 21}{res}     -0.0512758     -0.1504532
{txt}{space 15}v3 {c |}{col 21}{res}      0.1188168      0.0988274
{txt}{space 15}v4 {c |}{col 21}{res}      0.0526757      2.3116675
{txt}{space 15}v5 {c |}{col 21}{res}      0.4847238      0.5488941
{txt}{space 15}v6 {c |}{col 21}{res}      0.4920480      0.8192193
{txt}{space 15}v7 {c |}{col 21}{res}      2.2297529      2.3093270
{txt}{space 15}v8 {c |}{col 21}{res}      0.5311637      0.5722020
{txt}{space 15}v9 {c |}{col 21}{res}      0.4285709      0.6623599
{txt}{space 14}v10 {c |}{col 21}{res}      0.0661834      0.1173268
{txt}{space 14}v12 {c |}{col 21}{res}     -0.0890686     -0.1378215
{txt}{space 14}v14 {c |}{col 21}{res}      0.0080481      0.1683385
{txt}{space 14}v15 {c |}{col 21}{res}      0.1881182      1.2441411
{txt}{space 14}v16 {c |}{col 21}{res}      0.5830756      0.9982845
{txt}{space 14}v17 {c |}{col 21}{res}      0.6665287      1.0019607
{txt}{space 14}v18 {c |}{col 21}{res}      0.2325277      0.1128352
{txt}{space 14}v19 {c |}{col 21}{res}      0.0744252      0.0714617
{txt}{space 14}v20 {c |}{col 21}{res}      0.4010756      1.0847420
{txt}{space 14}v21 {c |}{col 21}{res}      0.2175170      0.2185119
{txt}{space 14}v22 {c |}{col 21}{res}      0.2125489      0.3520371
{txt}{space 14}v23 {c |}{col 21}{res}      1.8809046      2.1495116
{txt}{space 14}v24 {c |}{col 21}{res}      0.5536729      0.4271774
{txt}{space 14}v25 {c |}{col 21}{res}     -0.9477607     -1.8589437
{txt}{space 14}v26 {c |}{col 21}{res}     -0.4763787     -0.8881947
{txt}{space 14}v27 {c |}{col 21}{res}     -0.4648550    -11.4017757
{txt}{space 14}v29 {c |}{col 21}{res}     -0.1131577     -2.4736247
{txt}{space 14}v33 {c |}{col 21}{res}     -0.4653176     -0.7285395
{txt}{space 14}v35 {c |}{col 21}{res}     -0.0637580     -2.1615035
{txt}{space 14}v37 {c |}{col 21}{res}     -0.0889362      0.0075332
{txt}{space 14}v38 {c |}{col 21}{res}     -0.0064648     -0.5566300
{txt}{space 14}v39 {c |}{col 21}{res}     -0.2245650     -0.7307393
{txt}{space 14}v41 {c |}{col 21}{res}     -0.2996689    -44.0279212
{txt}{space 14}v42 {c |}{col 21}{res}     -0.7082101     -2.5860352
{txt}{space 14}v43 {c |}{col 21}{res}     -0.2712233     -1.3714545
{txt}{space 14}v44 {c |}{col 21}{res}     -0.3739589     -1.5813728
{txt}{space 14}v45 {c |}{col 21}{res}     -0.4326240     -0.7865380
{txt}{space 14}v46 {c |}{col 21}{res}     -0.7046002     -1.4113620
{txt}{space 14}v47 {c |}{col 21}{res}     -0.7141176     -2.0788162
{txt}{space 14}v48 {c |}{col 21}{res}     -0.5871826     -3.8399523
{txt}{space 14}v49 {c |}{col 21}{res}     -0.6186623     -1.3437230
{txt}{space 14}v51 {c |}{col 21}{res}     -0.1370985     -0.6993427
{txt}{space 14}v52 {c |}{col 21}{res}      0.4580812      0.3452447
{txt}{space 14}v53 {c |}{col 21}{res}      4.4062312      5.5578661
{txt}{space 14}v56 {c |}{col 21}{res}      0.0022783      0.0105219
{txt}{space 14}v57 {c |}{col 21}{res}      0.0005070      0.0007773
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6005076     -1.4811996
{txt}{hline 18}{c BT}{hline 32}
Uses lasso for prediction
storing linear predictions
Uses lasso for prediction
storing predicted probabilities

{res}{txt}Iteration 0:{space 3}log likelihood = {res:-3085.0764}  
Iteration 1:{space 3}log likelihood = {res:-1280.6273}  
Iteration 2:{space 3}log likelihood = {res:-1082.8591}  
Iteration 3:{space 3}log likelihood = {res:-965.79036}  
Iteration 4:{space 3}log likelihood = {res:-938.03089}  
Iteration 5:{space 3}log likelihood = {res:-924.35308}  
Iteration 6:{space 3}log likelihood = {res:-922.17964}  
Iteration 7:{space 3}log likelihood = {res:-921.83284}  
Iteration 8:{space 3}log likelihood = {res:-921.81424}  
Iteration 9:{space 3}log likelihood = {res:-921.81424}  
{res}
{txt}Logistic regression{col 49}Number of obs{col 67}= {res}     4,601
{txt}{col 49}LR chi2({res}45{txt}){col 67}= {res}   4326.52
{txt}{col 49}Prob > chi2{col 67}= {res}    0.0000
{txt}Log likelihood = {res}-921.81424{txt}{col 49}Pseudo R2{col 67}= {res}    0.7012

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         v58{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      z{col 46}   P>|z|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 10}v1 {c |}{col 14}{res}{space 2}-.4523281{col 26}{space 2} .2136864{col 37}{space 1}   -2.12{col 46}{space 3}0.034{col 54}{space 4}-.8711458{col 67}{space 3}-.0335104
{txt}{space 10}v2 {c |}{col 14}{res}{space 2}-.1504532{col 26}{space 2} .0688535{col 37}{space 1}   -2.19{col 46}{space 3}0.029{col 54}{space 4}-.2854035{col 67}{space 3}-.0155029
{txt}{space 10}v3 {c |}{col 14}{res}{space 2} .0988274{col 26}{space 2} .1092798{col 37}{space 1}    0.90{col 46}{space 3}0.366{col 54}{space 4}-.1153571{col 67}{space 3} .3130119
{txt}{space 10}v4 {c |}{col 14}{res}{space 2} 2.311668{col 26}{space 2} 1.502323{col 37}{space 1}    1.54{col 46}{space 3}0.124{col 54}{space 4}-.6328316{col 67}{space 3} 5.256167
{txt}{space 10}v5 {c |}{col 14}{res}{space 2} .5488941{col 26}{space 2} .1006594{col 37}{space 1}    5.45{col 46}{space 3}0.000{col 54}{space 4} .3516054{col 67}{space 3} .7461829
{txt}{space 10}v6 {c |}{col 14}{res}{space 2} .8192193{col 26}{space 2} .2426995{col 37}{space 1}    3.38{col 46}{space 3}0.001{col 54}{space 4}  .343537{col 67}{space 3} 1.294902
{txt}{space 10}v7 {c |}{col 14}{res}{space 2} 2.309327{col 26}{space 2} .3256075{col 37}{space 1}    7.09{col 46}{space 3}0.000{col 54}{space 4} 1.671148{col 67}{space 3} 2.947506
{txt}{space 10}v8 {c |}{col 14}{res}{space 2}  .572202{col 26}{space 2} .1662842{col 37}{space 1}    3.44{col 46}{space 3}0.001{col 54}{space 4} .2462909{col 67}{space 3}  .898113
{txt}{space 10}v9 {c |}{col 14}{res}{space 2} .6623599{col 26}{space 2} .2741028{col 37}{space 1}    2.42{col 46}{space 3}0.016{col 54}{space 4} .1251284{col 67}{space 3} 1.199592
{txt}{space 9}v10 {c |}{col 14}{res}{space 2} .1173268{col 26}{space 2} .0700561{col 37}{space 1}    1.67{col 46}{space 3}0.094{col 54}{space 4}-.0199806{col 67}{space 3} .2546342
{txt}{space 9}v12 {c |}{col 14}{res}{space 2}-.1378215{col 26}{space 2} .0731265{col 37}{space 1}   -1.88{col 46}{space 3}0.059{col 54}{space 4}-.2811467{col 67}{space 3} .0055037
{txt}{space 9}v14 {c |}{col 14}{res}{space 2} .1683385{col 26}{space 2} .1335325{col 37}{space 1}    1.26{col 46}{space 3}0.207{col 54}{space 4}-.0933804{col 67}{space 3} .4300573
{txt}{space 9}v15 {c |}{col 14}{res}{space 2} 1.244141{col 26}{space 2} .7075049{col 37}{space 1}    1.76{col 46}{space 3}0.079{col 54}{space 4} -.142543{col 67}{space 3} 2.630825
{txt}{space 9}v16 {c |}{col 14}{res}{space 2} .9982845{col 26}{space 2} .1421045{col 37}{space 1}    7.03{col 46}{space 3}0.000{col 54}{space 4} .7197648{col 67}{space 3} 1.276804
{txt}{space 9}v17 {c |}{col 14}{res}{space 2} 1.001961{col 26}{space 2} .2249686{col 37}{space 1}    4.45{col 46}{space 3}0.000{col 54}{space 4} .5610304{col 67}{space 3} 1.442891
{txt}{space 9}v18 {c |}{col 14}{res}{space 2} .1128352{col 26}{space 2} .1164141{col 37}{space 1}    0.97{col 46}{space 3}0.332{col 54}{space 4}-.1153322{col 67}{space 3} .3410026
{txt}{space 9}v19 {c |}{col 14}{res}{space 2} .0714617{col 26}{space 2} .0343223{col 37}{space 1}    2.08{col 46}{space 3}0.037{col 54}{space 4} .0041913{col 67}{space 3} .1387321
{txt}{space 9}v20 {c |}{col 14}{res}{space 2} 1.084742{col 26}{space 2} .5365706{col 37}{space 1}    2.02{col 46}{space 3}0.043{col 54}{space 4} .0330829{col 67}{space 3} 2.136401
{txt}{space 9}v21 {c |}{col 14}{res}{space 2} .2185119{col 26}{space 2} .0491656{col 37}{space 1}    4.44{col 46}{space 3}0.000{col 54}{space 4} .1221491{col 67}{space 3} .3148746
{txt}{space 9}v22 {c |}{col 14}{res}{space 2} .3520371{col 26}{space 2} .1420235{col 37}{space 1}    2.48{col 46}{space 3}0.013{col 54}{space 4} .0736761{col 67}{space 3}  .630398
{txt}{space 9}v23 {c |}{col 14}{res}{space 2} 2.149512{col 26}{space 2} .4689064{col 37}{space 1}    4.58{col 46}{space 3}0.000{col 54}{space 4} 1.230472{col 67}{space 3} 3.068551
{txt}{space 9}v24 {c |}{col 14}{res}{space 2} .4271774{col 26}{space 2} .1639774{col 37}{space 1}    2.61{col 46}{space 3}0.009{col 54}{space 4} .1057875{col 67}{space 3} .7485672
{txt}{space 9}v25 {c |}{col 14}{res}{space 2}-1.858944{col 26}{space 2} .2968632{col 37}{space 1}   -6.26{col 46}{space 3}0.000{col 54}{space 4}-2.440785{col 67}{space 3}-1.277103
{txt}{space 9}v26 {c |}{col 14}{res}{space 2}-.8881947{col 26}{space 2} .4157542{col 37}{space 1}   -2.14{col 46}{space 3}0.033{col 54}{space 4}-1.703058{col 67}{space 3}-.0733314
{txt}{space 9}v27 {c |}{col 14}{res}{space 2}-11.40178{col 26}{space 2} 1.810696{col 37}{space 1}   -6.30{col 46}{space 3}0.000{col 54}{space 4}-14.95068{col 67}{space 3}-7.852876
{txt}{space 9}v29 {c |}{col 14}{res}{space 2}-2.473625{col 26}{space 2} 1.460205{col 37}{space 1}   -1.69{col 46}{space 3}0.090{col 54}{space 4}-5.335573{col 67}{space 3} .3883235
{txt}{space 9}v33 {c |}{col 14}{res}{space 2}-.7285395{col 26}{space 2} .3046051{col 37}{space 1}   -2.39{col 46}{space 3}0.017{col 54}{space 4}-1.325555{col 67}{space 3}-.1315244
{txt}{space 9}v35 {c |}{col 14}{res}{space 2}-2.161504{col 26}{space 2} .8112503{col 37}{space 1}   -2.66{col 46}{space 3}0.008{col 54}{space 4}-3.751525{col 67}{space 3}-.5714821
{txt}{space 9}v37 {c |}{col 14}{res}{space 2} .0075332{col 26}{space 2} .1741224{col 37}{space 1}    0.04{col 46}{space 3}0.965{col 54}{space 4}-.3337404{col 67}{space 3} .3488067
{txt}{space 9}v38 {c |}{col 14}{res}{space 2}  -.55663{col 26}{space 2}  .391743{col 37}{space 1}   -1.42{col 46}{space 3}0.155{col 54}{space 4}-1.324432{col 67}{space 3} .2111722
{txt}{space 9}v39 {c |}{col 14}{res}{space 2}-.7307393{col 26}{space 2} .3666382{col 37}{space 1}   -1.99{col 46}{space 3}0.046{col 54}{space 4}-1.449337{col 67}{space 3}-.0121417
{txt}{space 9}v41 {c |}{col 14}{res}{space 2}-44.02792{col 26}{space 2} 26.27617{col 37}{space 1}   -1.68{col 46}{space 3}0.094{col 54}{space 4}-95.52826{col 67}{space 3} 7.472421
{txt}{space 9}v42 {c |}{col 14}{res}{space 2}-2.586035{col 26}{space 2} .8220483{col 37}{space 1}   -3.15{col 46}{space 3}0.002{col 54}{space 4} -4.19722{col 67}{space 3}-.9748502
{txt}{space 9}v43 {c |}{col 14}{res}{space 2}-1.371454{col 26}{space 2} .8306267{col 37}{space 1}   -1.65{col 46}{space 3}0.099{col 54}{space 4}-2.999453{col 67}{space 3} .2565439
{txt}{space 9}v44 {c |}{col 14}{res}{space 2}-1.581373{col 26}{space 2} .5311944{col 37}{space 1}   -2.98{col 46}{space 3}0.003{col 54}{space 4}-2.622495{col 67}{space 3} -.540251
{txt}{space 9}v45 {c |}{col 14}{res}{space 2} -.786538{col 26}{space 2}  .153215{col 37}{space 1}   -5.13{col 46}{space 3}0.000{col 54}{space 4}-1.086834{col 67}{space 3}-.4862421
{txt}{space 9}v46 {c |}{col 14}{res}{space 2}-1.411362{col 26}{space 2} .2658589{col 37}{space 1}   -5.31{col 46}{space 3}0.000{col 54}{space 4}-1.932436{col 67}{space 3}-.8902881
{txt}{space 9}v47 {c |}{col 14}{res}{space 2}-2.078816{col 26}{space 2} 1.571554{col 37}{space 1}   -1.32{col 46}{space 3}0.186{col 54}{space 4}-5.159006{col 67}{space 3} 1.001374
{txt}{space 9}v48 {c |}{col 14}{res}{space 2}-3.839952{col 26}{space 2} 1.589496{col 37}{space 1}   -2.42{col 46}{space 3}0.016{col 54}{space 4}-6.955306{col 67}{space 3}-.7245981
{txt}{space 9}v49 {c |}{col 14}{res}{space 2}-1.343723{col 26}{space 2} .4369923{col 37}{space 1}   -3.07{col 46}{space 3}0.002{col 54}{space 4}-2.200212{col 67}{space 3}-.4872339
{txt}{space 9}v51 {c |}{col 14}{res}{space 2}-.6993427{col 26}{space 2} .8448507{col 37}{space 1}   -0.83{col 46}{space 3}0.408{col 54}{space 4} -2.35522{col 67}{space 3} .9565343
{txt}{space 9}v52 {c |}{col 14}{res}{space 2} .3452447{col 26}{space 2} .0885411{col 37}{space 1}    3.90{col 46}{space 3}0.000{col 54}{space 4} .1717072{col 67}{space 3} .5187821
{txt}{space 9}v53 {c |}{col 14}{res}{space 2} 5.557866{col 26}{space 2} .7125045{col 37}{space 1}    7.80{col 46}{space 3}0.000{col 54}{space 4} 4.161383{col 67}{space 3} 6.954349
{txt}{space 9}v56 {c |}{col 14}{res}{space 2} .0105219{col 26}{space 2} .0017995{col 37}{space 1}    5.85{col 46}{space 3}0.000{col 54}{space 4}  .006995{col 67}{space 3} .0140489
{txt}{space 9}v57 {c |}{col 14}{res}{space 2} .0007773{col 26}{space 2} .0002096{col 37}{space 1}    3.71{col 46}{space 3}0.000{col 54}{space 4} .0003664{col 67}{space 3} .0011882
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}  -1.4812{col 26}{space 2} .1296569{col 37}{space 1}  -11.42{col 46}{space 3}0.000{col 54}{space 4}-1.735323{col 67}{space 3}-1.227077
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 6 2}Note: 665 failures and 29 successes completely determined.{p_end}
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.2721427     -0.3791446
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1256800     -0.1447328
{txt}{space 15}v3 {c |}{col 21}{res}      0.1390962      0.1116912
{txt}{space 15}v4 {c |}{col 21}{res}      0.1959648      2.2303869
{txt}{space 15}v5 {c |}{col 21}{res}      0.5268010      0.5582587
{txt}{space 15}v6 {c |}{col 21}{res}      0.6398607      0.8601265
{txt}{space 15}v7 {c |}{col 21}{res}      2.2994845      2.2783320
{txt}{space 15}v8 {c |}{col 21}{res}      0.5586001      0.5710605
{txt}{space 15}v9 {c |}{col 21}{res}      0.5722809      0.6990956
{txt}{space 14}v10 {c |}{col 21}{res}      0.0989041      0.1296654
{txt}{space 14}v11 {c |}{col 21}{res}     -0.0891131     -0.2668115
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1347646     -0.1400000
{txt}{space 14}v14 {c |}{col 21}{res}      0.0962984      0.1383352
{txt}{space 14}v15 {c |}{col 21}{res}      0.7678938      1.1864707
{txt}{space 14}v16 {c |}{col 21}{res}      0.9920547      1.0388119
{txt}{space 14}v17 {c |}{col 21}{res}      0.8492258      0.9487245
{txt}{space 14}v18 {c |}{col 21}{res}      0.1525157      0.1163154
{txt}{space 14}v19 {c |}{col 21}{res}      0.0809274      0.0795294
{txt}{space 14}v20 {c |}{col 21}{res}      0.6817314      1.0912048
{txt}{space 14}v21 {c |}{col 21}{res}      0.2268940      0.2445585
{txt}{space 14}v22 {c |}{col 21}{res}      0.2481234      0.2030494
{txt}{space 14}v23 {c |}{col 21}{res}      2.2554731      2.2312204
{txt}{space 14}v24 {c |}{col 21}{res}      0.5401740      0.4300520
{txt}{space 14}v25 {c |}{col 21}{res}     -1.5416988     -1.9352774
{txt}{space 14}v26 {c |}{col 21}{res}     -0.8651848     -1.0338064
{txt}{space 14}v27 {c |}{col 21}{res}     -1.4429284    -11.0879158
{txt}{space 14}v28 {c |}{col 21}{res}      0.2993044      0.4472262
{txt}{space 14}v29 {c |}{col 21}{res}     -0.9746507     -2.4821139
{txt}{space 14}v30 {c |}{col 21}{res}     -0.2146547     -0.3202787
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1517780     -0.1846426
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7640629     -0.7389031
{txt}{space 14}v35 {c |}{col 21}{res}     -0.9709912     -2.0911250
{txt}{space 14}v36 {c |}{col 21}{res}      0.6658666      0.9324802
{txt}{space 14}v37 {c |}{col 21}{res}     -0.0114706      0.0497937
{txt}{space 14}v38 {c |}{col 21}{res}     -0.4369001     -0.5997047
{txt}{space 14}v39 {c |}{col 21}{res}     -0.5880767     -0.8729110
{txt}{space 14}v40 {c |}{col 21}{res}     -0.3570155     -0.3069746
{txt}{space 14}v41 {c |}{col 21}{res}     -2.1216472    -44.7199772
{txt}{space 14}v42 {c |}{col 21}{res}     -1.4707506     -2.7023265
{txt}{space 14}v43 {c |}{col 21}{res}     -0.7101895     -1.2583446
{txt}{space 14}v44 {c |}{col 21}{res}     -1.0508245     -1.5925970
{txt}{space 14}v45 {c |}{col 21}{res}     -0.6734395     -0.7950828
{txt}{space 14}v46 {c |}{col 21}{res}     -1.2119073     -1.4721241
{txt}{space 14}v47 {c |}{col 21}{res}     -1.5974548     -2.3396021
{txt}{space 14}v48 {c |}{col 21}{res}     -2.0645791     -3.9592386
{txt}{space 14}v49 {c |}{col 21}{res}     -1.0606296     -1.2859350
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1278490     -0.1819038
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6705187     -0.6455945
{txt}{space 14}v52 {c |}{col 21}{res}      0.4195137      0.3518535
{txt}{space 14}v53 {c |}{col 21}{res}      5.0716910      5.3236593
{txt}{space 14}v54 {c |}{col 21}{res}      1.0462339      2.4322398
{txt}{space 14}v56 {c |}{col 21}{res}      0.0046267      0.0102458
{txt}{space 14}v57 {c |}{col 21}{res}      0.0006104      0.0008063
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5323640     -1.5551758
{txt}{hline 18}{c BT}{hline 32}
Uses lasso for prediction
storing linear predictions
Uses lasso for prediction
storing predicted probabilities

{res}{txt}Iteration 0:{space 3}log likelihood = {res:-3085.0764}  
Iteration 1:{space 3}log likelihood = {res:-1281.0337}  
Iteration 2:{space 3}log likelihood = {res:-1091.3584}  
Iteration 3:{space 3}log likelihood = {res:-970.45968}  
Iteration 4:{space 3}log likelihood = {res:-928.52995}  
Iteration 5:{space 3}log likelihood = {res:-915.56549}  
Iteration 6:{space 3}log likelihood = {res:-909.26467}  
Iteration 7:{space 3}log likelihood = {res:-908.70395}  
Iteration 8:{space 3}log likelihood = {res:-908.58998}  
Iteration 9:{space 3}log likelihood = {res:-908.58879}  
Iteration 10:{space 2}log likelihood = {res:-908.58879}  
{res}
{txt}Logistic regression{col 49}Number of obs{col 67}= {res}     4,601
{txt}{col 49}LR chi2({res}53{txt}){col 67}= {res}   4352.98
{txt}{col 49}Prob > chi2{col 67}= {res}    0.0000
{txt}Log likelihood = {res}-908.58879{txt}{col 49}Pseudo R2{col 67}= {res}    0.7055

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         v58{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      z{col 46}   P>|z|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 10}v1 {c |}{col 14}{res}{space 2}-.3791446{col 26}{space 2} .2291153{col 37}{space 1}   -1.65{col 46}{space 3}0.098{col 54}{space 4}-.8282023{col 67}{space 3} .0699132
{txt}{space 10}v2 {c |}{col 14}{res}{space 2}-.1447328{col 26}{space 2} .0687834{col 37}{space 1}   -2.10{col 46}{space 3}0.035{col 54}{space 4}-.2795457{col 67}{space 3}-.0099198
{txt}{space 10}v3 {c |}{col 14}{res}{space 2} .1116912{col 26}{space 2} .1098767{col 37}{space 1}    1.02{col 46}{space 3}0.309{col 54}{space 4}-.1036632{col 67}{space 3} .3270457
{txt}{space 10}v4 {c |}{col 14}{res}{space 2} 2.230387{col 26}{space 2} 1.497854{col 37}{space 1}    1.49{col 46}{space 3}0.136{col 54}{space 4}-.7053536{col 67}{space 3} 5.166127
{txt}{space 10}v5 {c |}{col 14}{res}{space 2} .5582587{col 26}{space 2} .1013496{col 37}{space 1}    5.51{col 46}{space 3}0.000{col 54}{space 4} .3596172{col 67}{space 3} .7569002
{txt}{space 10}v6 {c |}{col 14}{res}{space 2} .8601265{col 26}{space 2} .2470516{col 37}{space 1}    3.48{col 46}{space 3}0.000{col 54}{space 4} .3759143{col 67}{space 3} 1.344339
{txt}{space 10}v7 {c |}{col 14}{res}{space 2} 2.278332{col 26}{space 2} .3326932{col 37}{space 1}    6.85{col 46}{space 3}0.000{col 54}{space 4} 1.626265{col 67}{space 3} 2.930399
{txt}{space 10}v8 {c |}{col 14}{res}{space 2} .5710605{col 26}{space 2} .1681879{col 37}{space 1}    3.40{col 46}{space 3}0.001{col 54}{space 4} .2414183{col 67}{space 3} .9007026
{txt}{space 10}v9 {c |}{col 14}{res}{space 2} .6990956{col 26}{space 2}  .278946{col 37}{space 1}    2.51{col 46}{space 3}0.012{col 54}{space 4} .1523714{col 67}{space 3}  1.24582
{txt}{space 9}v10 {c |}{col 14}{res}{space 2} .1296654{col 26}{space 2} .0716798{col 37}{space 1}    1.81{col 46}{space 3}0.070{col 54}{space 4}-.0108244{col 67}{space 3} .2701552
{txt}{space 9}v11 {c |}{col 14}{res}{space 2}-.2668115{col 26}{space 2} .2977127{col 37}{space 1}   -0.90{col 46}{space 3}0.370{col 54}{space 4}-.8503178{col 67}{space 3} .3166947
{txt}{space 9}v12 {c |}{col 14}{res}{space 2}     -.14{col 26}{space 2} .0740752{col 37}{space 1}   -1.89{col 46}{space 3}0.059{col 54}{space 4}-.2851847{col 67}{space 3} .0051846
{txt}{space 9}v14 {c |}{col 14}{res}{space 2} .1383352{col 26}{space 2} .1360127{col 37}{space 1}    1.02{col 46}{space 3}0.309{col 54}{space 4}-.1282447{col 67}{space 3} .4049151
{txt}{space 9}v15 {c |}{col 14}{res}{space 2} 1.186471{col 26}{space 2}  .714746{col 37}{space 1}    1.66{col 46}{space 3}0.097{col 54}{space 4}-.2144057{col 67}{space 3} 2.587347
{txt}{space 9}v16 {c |}{col 14}{res}{space 2} 1.038812{col 26}{space 2} .1452214{col 37}{space 1}    7.15{col 46}{space 3}0.000{col 54}{space 4} .7541831{col 67}{space 3} 1.323441
{txt}{space 9}v17 {c |}{col 14}{res}{space 2} .9487245{col 26}{space 2} .2243132{col 37}{space 1}    4.23{col 46}{space 3}0.000{col 54}{space 4} .5090786{col 67}{space 3}  1.38837
{txt}{space 9}v18 {c |}{col 14}{res}{space 2} .1163154{col 26}{space 2} .1167751{col 37}{space 1}    1.00{col 46}{space 3}0.319{col 54}{space 4}-.1125596{col 67}{space 3} .3451904
{txt}{space 9}v19 {c |}{col 14}{res}{space 2} .0795294{col 26}{space 2} .0350178{col 37}{space 1}    2.27{col 46}{space 3}0.023{col 54}{space 4} .0108957{col 67}{space 3}  .148163
{txt}{space 9}v20 {c |}{col 14}{res}{space 2} 1.091205{col 26}{space 2}   .54262{col 37}{space 1}    2.01{col 46}{space 3}0.044{col 54}{space 4} .0276891{col 67}{space 3}  2.15472
{txt}{space 9}v21 {c |}{col 14}{res}{space 2} .2445585{col 26}{space 2} .0523241{col 37}{space 1}    4.67{col 46}{space 3}0.000{col 54}{space 4}  .142005{col 67}{space 3} .3471119
{txt}{space 9}v22 {c |}{col 14}{res}{space 2} .2030494{col 26}{space 2} .1625843{col 37}{space 1}    1.25{col 46}{space 3}0.212{col 54}{space 4}  -.11561{col 67}{space 3} .5217087
{txt}{space 9}v23 {c |}{col 14}{res}{space 2}  2.23122{col 26}{space 2} .4696526{col 37}{space 1}    4.75{col 46}{space 3}0.000{col 54}{space 4} 1.310718{col 67}{space 3} 3.151722
{txt}{space 9}v24 {c |}{col 14}{res}{space 2}  .430052{col 26}{space 2} .1624451{col 37}{space 1}    2.65{col 46}{space 3}0.008{col 54}{space 4} .1116654{col 67}{space 3} .7484385
{txt}{space 9}v25 {c |}{col 14}{res}{space 2}-1.935277{col 26}{space 2} .3138415{col 37}{space 1}   -6.17{col 46}{space 3}0.000{col 54}{space 4}-2.550395{col 67}{space 3}-1.320159
{txt}{space 9}v26 {c |}{col 14}{res}{space 2}-1.033806{col 26}{space 2} .4397403{col 37}{space 1}   -2.35{col 46}{space 3}0.019{col 54}{space 4}-1.895682{col 67}{space 3}-.1719312
{txt}{space 9}v27 {c |}{col 14}{res}{space 2}-11.08792{col 26}{space 2} 1.812851{col 37}{space 1}   -6.12{col 46}{space 3}0.000{col 54}{space 4}-14.64104{col 67}{space 3}-7.534794
{txt}{space 9}v28 {c |}{col 14}{res}{space 2} .4472262{col 26}{space 2}  .200055{col 37}{space 1}    2.24{col 46}{space 3}0.025{col 54}{space 4} .0551257{col 67}{space 3} .8393267
{txt}{space 9}v29 {c |}{col 14}{res}{space 2}-2.482114{col 26}{space 2} 1.500956{col 37}{space 1}   -1.65{col 46}{space 3}0.098{col 54}{space 4}-5.423933{col 67}{space 3}  .459705
{txt}{space 9}v30 {c |}{col 14}{res}{space 2}-.3202787{col 26}{space 2}  .312797{col 37}{space 1}   -1.02{col 46}{space 3}0.306{col 54}{space 4}-.9333496{col 67}{space 3} .2927922
{txt}{space 9}v31 {c |}{col 14}{res}{space 2}-.1846426{col 26}{space 2} .5228059{col 37}{space 1}   -0.35{col 46}{space 3}0.724{col 54}{space 4}-1.209323{col 67}{space 3} .8400381
{txt}{space 9}v33 {c |}{col 14}{res}{space 2}-.7389031{col 26}{space 2} .3106915{col 37}{space 1}   -2.38{col 46}{space 3}0.017{col 54}{space 4}-1.347847{col 67}{space 3} -.129959
{txt}{space 9}v35 {c |}{col 14}{res}{space 2}-2.091125{col 26}{space 2} .7805987{col 37}{space 1}   -2.68{col 46}{space 3}0.007{col 54}{space 4} -3.62107{col 67}{space 3}-.5611796
{txt}{space 9}v36 {c |}{col 14}{res}{space 2} .9324802{col 26}{space 2}  .309005{col 37}{space 1}    3.02{col 46}{space 3}0.003{col 54}{space 4} .3268416{col 67}{space 3} 1.538119
{txt}{space 9}v37 {c |}{col 14}{res}{space 2} .0497937{col 26}{space 2} .1750451{col 37}{space 1}    0.28{col 46}{space 3}0.776{col 54}{space 4}-.2932884{col 67}{space 3} .3928758
{txt}{space 9}v38 {c |}{col 14}{res}{space 2}-.5997047{col 26}{space 2} .4262241{col 37}{space 1}   -1.41{col 46}{space 3}0.159{col 54}{space 4}-1.435089{col 67}{space 3} .2356793
{txt}{space 9}v39 {c |}{col 14}{res}{space 2} -.872911{col 26}{space 2} .3831098{col 37}{space 1}   -2.28{col 46}{space 3}0.023{col 54}{space 4}-1.623792{col 67}{space 3}-.1220297
{txt}{space 9}v40 {c |}{col 14}{res}{space 2}-.3069746{col 26}{space 2} .3643892{col 37}{space 1}   -0.84{col 46}{space 3}0.400{col 54}{space 4}-1.021164{col 67}{space 3} .4072151
{txt}{space 9}v41 {c |}{col 14}{res}{space 2}-44.71998{col 26}{space 2} 26.66045{col 37}{space 1}   -1.68{col 46}{space 3}0.093{col 54}{space 4}-96.97351{col 67}{space 3} 7.533554
{txt}{space 9}v42 {c |}{col 14}{res}{space 2}-2.702327{col 26}{space 2} .8331605{col 37}{space 1}   -3.24{col 46}{space 3}0.001{col 54}{space 4}-4.335291{col 67}{space 3}-1.069362
{txt}{space 9}v43 {c |}{col 14}{res}{space 2}-1.258345{col 26}{space 2} .8116953{col 37}{space 1}   -1.55{col 46}{space 3}0.121{col 54}{space 4}-2.849238{col 67}{space 3} .3325488
{txt}{space 9}v44 {c |}{col 14}{res}{space 2}-1.592597{col 26}{space 2} .5317162{col 37}{space 1}   -3.00{col 46}{space 3}0.003{col 54}{space 4}-2.634742{col 67}{space 3}-.5504523
{txt}{space 9}v45 {c |}{col 14}{res}{space 2}-.7950828{col 26}{space 2} .1560284{col 37}{space 1}   -5.10{col 46}{space 3}0.000{col 54}{space 4}-1.100893{col 67}{space 3}-.4892727
{txt}{space 9}v46 {c |}{col 14}{res}{space 2}-1.472124{col 26}{space 2} .2694301{col 37}{space 1}   -5.46{col 46}{space 3}0.000{col 54}{space 4}-2.000197{col 67}{space 3}-.9440508
{txt}{space 9}v47 {c |}{col 14}{res}{space 2}-2.339602{col 26}{space 2} 1.673053{col 37}{space 1}   -1.40{col 46}{space 3}0.162{col 54}{space 4}-5.618725{col 67}{space 3} .9395212
{txt}{space 9}v48 {c |}{col 14}{res}{space 2}-3.959239{col 26}{space 2} 1.557008{col 37}{space 1}   -2.54{col 46}{space 3}0.011{col 54}{space 4}-7.010917{col 67}{space 3}-.9075599
{txt}{space 9}v49 {c |}{col 14}{res}{space 2}-1.285935{col 26}{space 2} .4405162{col 37}{space 1}   -2.92{col 46}{space 3}0.004{col 54}{space 4}-2.149331{col 67}{space 3}-.4225391
{txt}{space 9}v50 {c |}{col 14}{res}{space 2}-.1819038{col 26}{space 2} .2486862{col 37}{space 1}   -0.73{col 46}{space 3}0.464{col 54}{space 4}-.6693198{col 67}{space 3} .3055123
{txt}{space 9}v51 {c |}{col 14}{res}{space 2}-.6455945{col 26}{space 2} .8299164{col 37}{space 1}   -0.78{col 46}{space 3}0.437{col 54}{space 4}-2.272201{col 67}{space 3} .9810118
{txt}{space 9}v52 {c |}{col 14}{res}{space 2} .3518535{col 26}{space 2} .0894266{col 37}{space 1}    3.93{col 46}{space 3}0.000{col 54}{space 4} .1765806{col 67}{space 3} .5271264
{txt}{space 9}v53 {c |}{col 14}{res}{space 2} 5.323659{col 26}{space 2} .7044546{col 37}{space 1}    7.56{col 46}{space 3}0.000{col 54}{space 4} 3.942954{col 67}{space 3} 6.704365
{txt}{space 9}v54 {c |}{col 14}{res}{space 2}  2.43224{col 26}{space 2} 1.112616{col 37}{space 1}    2.19{col 46}{space 3}0.029{col 54}{space 4} .2515532{col 67}{space 3} 4.612926
{txt}{space 9}v56 {c |}{col 14}{res}{space 2} .0102458{col 26}{space 2} .0017977{col 37}{space 1}    5.70{col 46}{space 3}0.000{col 54}{space 4} .0067223{col 67}{space 3} .0137693
{txt}{space 9}v57 {c |}{col 14}{res}{space 2} .0008063{col 26}{space 2} .0002138{col 37}{space 1}    3.77{col 46}{space 3}0.000{col 54}{space 4} .0003873{col 67}{space 3} .0012254
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-1.555176{col 26}{space 2} .1390541{col 37}{space 1}  -11.18{col 46}{space 3}0.000{col 54}{space 4}-1.827717{col 67}{space 3}-1.282635
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 6 2}Note: 669 failures and 31 successes completely determined.{p_end}

{com}. //
. 
. ********************************************************************************
. *** Verify "predict" using internal ("Mata") predictions                                         ***
. ********************************************************************************
. 
. foreach lam in 0.18 .1 .05 .01 0.005 0.001 {c -(}
{txt}  2{com}. 
.         $loadspam
{txt}  3{com}.         gen myholdout = _n>4000
{txt}  4{com}.         
.         di "lambda = `lam'"
{txt}  5{com}. 
.         lassologit v58 v1-v57, l(`lam') savep lambdan
{txt}  6{com}.         mat P = e(phat)
{txt}  7{com}.         svmat P
{txt}  8{com}. 
.         predict double p0, pr
{txt}  9{com}.         
.         assert reldif(P1,p0)<10e-4
{txt} 10{com}.         
. {c )-}
{txt}(58 vars, 4,601 obs)
lambda = 0.18
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 14}v21 {c |}{col 21}{res}      0.0251662      0.8584517
{txt}{space 12}_cons {c |}{col 21}{res}     -0.4508119     -1.1097109
{txt}{hline 18}{c BT}{hline 32}
Uses lasso for prediction
storing predicted probabilities
(58 vars, 4,601 obs)
lambda = .1
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v7 {c |}{col 21}{res}      0.5412442      4.2194397
{txt}{space 14}v16 {c |}{col 21}{res}      0.0569502      0.8984170
{txt}{space 14}v21 {c |}{col 21}{res}      0.2448168      0.3940148
{txt}{space 14}v23 {c |}{col 21}{res}      0.5126734      3.8072262
{txt}{space 14}v25 {c |}{col 21}{res}     -0.0071134     -2.7490367
{txt}{space 14}v53 {c |}{col 21}{res}      0.6310249      7.5984195
{txt}{space 14}v57 {c |}{col 21}{res}      0.0000267      0.0011889
{txt}{space 12}_cons {c |}{col 21}{res}     -0.8168528     -1.7667647
{txt}{hline 18}{c BT}{hline 32}
Uses lasso for prediction
storing predicted probabilities
(58 vars, 4,601 obs)
lambda = .05
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v5 {c |}{col 21}{res}      0.1727807      0.4550969
{txt}{space 15}v6 {c |}{col 21}{res}      0.2152931      0.9614203
{txt}{space 15}v7 {c |}{col 21}{res}      1.1426365      3.2847248
{txt}{space 15}v8 {c |}{col 21}{res}      0.1368686      0.6228345
{txt}{space 15}v9 {c |}{col 21}{res}      0.1194438      1.2686870
{txt}{space 14}v16 {c |}{col 21}{res}      0.2610206      1.1365279
{txt}{space 14}v17 {c |}{col 21}{res}      0.1633636      1.1000374
{txt}{space 14}v18 {c |}{col 21}{res}      0.0186096      0.3792675
{txt}{space 14}v19 {c |}{col 21}{res}      0.0354681      0.0478566
{txt}{space 14}v20 {c |}{col 21}{res}      0.0623173      1.6419546
{txt}{space 14}v21 {c |}{col 21}{res}      0.2850692      0.2785537
{txt}{space 14}v23 {c |}{col 21}{res}      0.9087893      3.0333616
{txt}{space 14}v24 {c |}{col 21}{res}      0.1364868      0.7890926
{txt}{space 14}v25 {c |}{col 21}{res}     -0.1194090     -1.8286444
{txt}{space 14}v26 {c |}{col 21}{res}     -0.0365264     -1.1537435
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0021456     -8.0061923
{txt}{space 14}v52 {c |}{col 21}{res}      0.1837436      0.4989944
{txt}{space 14}v53 {c |}{col 21}{res}      1.5733685      5.1962139
{txt}{space 14}v57 {c |}{col 21}{res}      0.0002816      0.0009413
{txt}{space 12}_cons {c |}{col 21}{res}     -1.3345409     -2.1960013
{txt}{hline 18}{c BT}{hline 32}
Uses lasso for prediction
storing predicted probabilities
(58 vars, 4,601 obs)
lambda = .01
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v2 {c |}{col 21}{res}     -0.0037409     -0.1389110
{txt}{space 15}v3 {c |}{col 21}{res}      0.1011375      0.1052528
{txt}{space 15}v4 {c |}{col 21}{res}      0.0173759      2.3399989
{txt}{space 15}v5 {c |}{col 21}{res}      0.4296060      0.5853019
{txt}{space 15}v6 {c |}{col 21}{res}      0.4399529      0.8359847
{txt}{space 15}v7 {c |}{col 21}{res}      2.0688244      2.4042943
{txt}{space 15}v8 {c |}{col 21}{res}      0.4808568      0.5882269
{txt}{space 15}v9 {c |}{col 21}{res}      0.3601749      0.7213125
{txt}{space 14}v10 {c |}{col 21}{res}      0.0363979      0.1183907
{txt}{space 14}v12 {c |}{col 21}{res}     -0.0308145     -0.1612150
{txt}{space 14}v16 {c |}{col 21}{res}      0.4744442      0.9566529
{txt}{space 14}v17 {c |}{col 21}{res}      0.5376230      1.0240614
{txt}{space 14}v18 {c |}{col 21}{res}      0.2235757      0.1589568
{txt}{space 14}v19 {c |}{col 21}{res}      0.0684679      0.0765814
{txt}{space 14}v20 {c |}{col 21}{res}      0.3023891      1.3204219
{txt}{space 14}v21 {c |}{col 21}{res}      0.2312331      0.1788195
{txt}{space 14}v22 {c |}{col 21}{res}      0.1524290      0.3431311
{txt}{space 14}v23 {c |}{col 21}{res}      1.6218808      2.2021820
{txt}{space 14}v24 {c |}{col 21}{res}      0.5023649      0.4542068
{txt}{space 14}v25 {c |}{col 21}{res}     -0.6504894     -1.9495298
{txt}{space 14}v26 {c |}{col 21}{res}     -0.3118048     -0.8067431
{txt}{space 14}v27 {c |}{col 21}{res}     -0.1501577    -11.7835281
{txt}{space 14}v33 {c |}{col 21}{res}     -0.2648093     -0.8002706
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1250243      0.0036378
{txt}{space 14}v39 {c |}{col 21}{res}     -0.1063193     -0.7635106
{txt}{space 14}v42 {c |}{col 21}{res}     -0.4459358     -2.6936770
{txt}{space 14}v43 {c |}{col 21}{res}     -0.1163321     -1.3224400
{txt}{space 14}v44 {c |}{col 21}{res}     -0.1287170     -1.7394127
{txt}{space 14}v45 {c |}{col 21}{res}     -0.3007246     -0.7909711
{txt}{space 14}v46 {c |}{col 21}{res}     -0.4174007     -1.5924053
{txt}{space 14}v47 {c |}{col 21}{res}     -0.1506039     -2.2954658
{txt}{space 14}v48 {c |}{col 21}{res}     -0.1642561     -4.4529880
{txt}{space 14}v49 {c |}{col 21}{res}     -0.3189394     -1.2608654
{txt}{space 14}v52 {c |}{col 21}{res}      0.4521116      0.3611414
{txt}{space 14}v53 {c |}{col 21}{res}      3.7605479      5.7431487
{txt}{space 14}v56 {c |}{col 21}{res}      0.0013784      0.0113141
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004669      0.0005325
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6707145     -1.5458167
{txt}{hline 18}{c BT}{hline 32}
Uses lasso for prediction
storing predicted probabilities
(58 vars, 4,601 obs)
lambda = 0.005
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.0422566     -0.4523281
{txt}{space 15}v2 {c |}{col 21}{res}     -0.0512758     -0.1504532
{txt}{space 15}v3 {c |}{col 21}{res}      0.1188168      0.0988274
{txt}{space 15}v4 {c |}{col 21}{res}      0.0526757      2.3116675
{txt}{space 15}v5 {c |}{col 21}{res}      0.4847238      0.5488941
{txt}{space 15}v6 {c |}{col 21}{res}      0.4920480      0.8192193
{txt}{space 15}v7 {c |}{col 21}{res}      2.2297529      2.3093270
{txt}{space 15}v8 {c |}{col 21}{res}      0.5311637      0.5722020
{txt}{space 15}v9 {c |}{col 21}{res}      0.4285709      0.6623599
{txt}{space 14}v10 {c |}{col 21}{res}      0.0661834      0.1173268
{txt}{space 14}v12 {c |}{col 21}{res}     -0.0890686     -0.1378215
{txt}{space 14}v14 {c |}{col 21}{res}      0.0080481      0.1683385
{txt}{space 14}v15 {c |}{col 21}{res}      0.1881182      1.2441411
{txt}{space 14}v16 {c |}{col 21}{res}      0.5830756      0.9982845
{txt}{space 14}v17 {c |}{col 21}{res}      0.6665287      1.0019607
{txt}{space 14}v18 {c |}{col 21}{res}      0.2325277      0.1128352
{txt}{space 14}v19 {c |}{col 21}{res}      0.0744252      0.0714617
{txt}{space 14}v20 {c |}{col 21}{res}      0.4010756      1.0847420
{txt}{space 14}v21 {c |}{col 21}{res}      0.2175170      0.2185119
{txt}{space 14}v22 {c |}{col 21}{res}      0.2125489      0.3520371
{txt}{space 14}v23 {c |}{col 21}{res}      1.8809046      2.1495116
{txt}{space 14}v24 {c |}{col 21}{res}      0.5536729      0.4271774
{txt}{space 14}v25 {c |}{col 21}{res}     -0.9477607     -1.8589437
{txt}{space 14}v26 {c |}{col 21}{res}     -0.4763787     -0.8881947
{txt}{space 14}v27 {c |}{col 21}{res}     -0.4648550    -11.4017757
{txt}{space 14}v29 {c |}{col 21}{res}     -0.1131577     -2.4736247
{txt}{space 14}v33 {c |}{col 21}{res}     -0.4653176     -0.7285395
{txt}{space 14}v35 {c |}{col 21}{res}     -0.0637580     -2.1615035
{txt}{space 14}v37 {c |}{col 21}{res}     -0.0889362      0.0075332
{txt}{space 14}v38 {c |}{col 21}{res}     -0.0064648     -0.5566300
{txt}{space 14}v39 {c |}{col 21}{res}     -0.2245650     -0.7307393
{txt}{space 14}v41 {c |}{col 21}{res}     -0.2996689    -44.0279212
{txt}{space 14}v42 {c |}{col 21}{res}     -0.7082101     -2.5860352
{txt}{space 14}v43 {c |}{col 21}{res}     -0.2712233     -1.3714545
{txt}{space 14}v44 {c |}{col 21}{res}     -0.3739589     -1.5813728
{txt}{space 14}v45 {c |}{col 21}{res}     -0.4326240     -0.7865380
{txt}{space 14}v46 {c |}{col 21}{res}     -0.7046002     -1.4113620
{txt}{space 14}v47 {c |}{col 21}{res}     -0.7141176     -2.0788162
{txt}{space 14}v48 {c |}{col 21}{res}     -0.5871826     -3.8399523
{txt}{space 14}v49 {c |}{col 21}{res}     -0.6186623     -1.3437230
{txt}{space 14}v51 {c |}{col 21}{res}     -0.1370985     -0.6993427
{txt}{space 14}v52 {c |}{col 21}{res}      0.4580812      0.3452447
{txt}{space 14}v53 {c |}{col 21}{res}      4.4062312      5.5578661
{txt}{space 14}v56 {c |}{col 21}{res}      0.0022783      0.0105219
{txt}{space 14}v57 {c |}{col 21}{res}      0.0005070      0.0007773
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6005076     -1.4811996
{txt}{hline 18}{c BT}{hline 32}
Uses lasso for prediction
storing predicted probabilities
(58 vars, 4,601 obs)
lambda = 0.001
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.2721427     -0.3791446
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1256800     -0.1447328
{txt}{space 15}v3 {c |}{col 21}{res}      0.1390962      0.1116912
{txt}{space 15}v4 {c |}{col 21}{res}      0.1959648      2.2303869
{txt}{space 15}v5 {c |}{col 21}{res}      0.5268010      0.5582587
{txt}{space 15}v6 {c |}{col 21}{res}      0.6398607      0.8601265
{txt}{space 15}v7 {c |}{col 21}{res}      2.2994845      2.2783320
{txt}{space 15}v8 {c |}{col 21}{res}      0.5586001      0.5710605
{txt}{space 15}v9 {c |}{col 21}{res}      0.5722809      0.6990956
{txt}{space 14}v10 {c |}{col 21}{res}      0.0989041      0.1296654
{txt}{space 14}v11 {c |}{col 21}{res}     -0.0891131     -0.2668115
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1347646     -0.1400000
{txt}{space 14}v14 {c |}{col 21}{res}      0.0962984      0.1383352
{txt}{space 14}v15 {c |}{col 21}{res}      0.7678938      1.1864707
{txt}{space 14}v16 {c |}{col 21}{res}      0.9920547      1.0388119
{txt}{space 14}v17 {c |}{col 21}{res}      0.8492258      0.9487245
{txt}{space 14}v18 {c |}{col 21}{res}      0.1525157      0.1163154
{txt}{space 14}v19 {c |}{col 21}{res}      0.0809274      0.0795294
{txt}{space 14}v20 {c |}{col 21}{res}      0.6817314      1.0912048
{txt}{space 14}v21 {c |}{col 21}{res}      0.2268940      0.2445585
{txt}{space 14}v22 {c |}{col 21}{res}      0.2481234      0.2030494
{txt}{space 14}v23 {c |}{col 21}{res}      2.2554731      2.2312204
{txt}{space 14}v24 {c |}{col 21}{res}      0.5401740      0.4300520
{txt}{space 14}v25 {c |}{col 21}{res}     -1.5416988     -1.9352774
{txt}{space 14}v26 {c |}{col 21}{res}     -0.8651848     -1.0338064
{txt}{space 14}v27 {c |}{col 21}{res}     -1.4429284    -11.0879158
{txt}{space 14}v28 {c |}{col 21}{res}      0.2993044      0.4472262
{txt}{space 14}v29 {c |}{col 21}{res}     -0.9746507     -2.4821139
{txt}{space 14}v30 {c |}{col 21}{res}     -0.2146547     -0.3202787
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1517780     -0.1846426
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7640629     -0.7389031
{txt}{space 14}v35 {c |}{col 21}{res}     -0.9709912     -2.0911250
{txt}{space 14}v36 {c |}{col 21}{res}      0.6658666      0.9324802
{txt}{space 14}v37 {c |}{col 21}{res}     -0.0114706      0.0497937
{txt}{space 14}v38 {c |}{col 21}{res}     -0.4369001     -0.5997047
{txt}{space 14}v39 {c |}{col 21}{res}     -0.5880767     -0.8729110
{txt}{space 14}v40 {c |}{col 21}{res}     -0.3570155     -0.3069746
{txt}{space 14}v41 {c |}{col 21}{res}     -2.1216472    -44.7199772
{txt}{space 14}v42 {c |}{col 21}{res}     -1.4707506     -2.7023265
{txt}{space 14}v43 {c |}{col 21}{res}     -0.7101895     -1.2583446
{txt}{space 14}v44 {c |}{col 21}{res}     -1.0508245     -1.5925970
{txt}{space 14}v45 {c |}{col 21}{res}     -0.6734395     -0.7950828
{txt}{space 14}v46 {c |}{col 21}{res}     -1.2119073     -1.4721241
{txt}{space 14}v47 {c |}{col 21}{res}     -1.5974548     -2.3396021
{txt}{space 14}v48 {c |}{col 21}{res}     -2.0645791     -3.9592386
{txt}{space 14}v49 {c |}{col 21}{res}     -1.0606296     -1.2859350
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1278490     -0.1819038
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6705187     -0.6455945
{txt}{space 14}v52 {c |}{col 21}{res}      0.4195137      0.3518535
{txt}{space 14}v53 {c |}{col 21}{res}      5.0716910      5.3236593
{txt}{space 14}v54 {c |}{col 21}{res}      1.0462339      2.4322398
{txt}{space 14}v56 {c |}{col 21}{res}      0.0046267      0.0102458
{txt}{space 14}v57 {c |}{col 21}{res}      0.0006104      0.0008063
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5323640     -1.5551758
{txt}{hline 18}{c BT}{hline 32}
Uses lasso for prediction
storing predicted probabilities

{com}. //
. 
. foreach lam in 0.18 .1 .05 .01 0.005 0.001 {c -(}
{txt}  2{com}. 
.         $loadspam
{txt}  3{com}.         gen myholdout = _n>4000
{txt}  4{com}.         
.         di "lambda = `lam'"
{txt}  5{com}. 
.         lassologit v58 v1-v57, l(`lam') savep postlogit lambdan
{txt}  6{com}.         mat P = e(phat)
{txt}  7{com}.         svmat P
{txt}  8{com}. 
.         predict double p0, pr postlogit
{txt}  9{com}.         
.         assert reldif(P1,p0)<10e-4
{txt} 10{com}.         
. {c )-}
{txt}(58 vars, 4,601 obs)
lambda = 0.18
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 14}v21 {c |}{col 21}{res}      0.0251662      0.8584517
{txt}{space 12}_cons {c |}{col 21}{res}     -0.4508119     -1.1097109
{txt}{hline 18}{c BT}{hline 32}
Uses post-logit for prediction.
storing predicted probabilities
(58 vars, 4,601 obs)
lambda = .1
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v7 {c |}{col 21}{res}      0.5412442      4.2194397
{txt}{space 14}v16 {c |}{col 21}{res}      0.0569502      0.8984170
{txt}{space 14}v21 {c |}{col 21}{res}      0.2448168      0.3940148
{txt}{space 14}v23 {c |}{col 21}{res}      0.5126734      3.8072262
{txt}{space 14}v25 {c |}{col 21}{res}     -0.0071134     -2.7490367
{txt}{space 14}v53 {c |}{col 21}{res}      0.6310249      7.5984195
{txt}{space 14}v57 {c |}{col 21}{res}      0.0000267      0.0011889
{txt}{space 12}_cons {c |}{col 21}{res}     -0.8168528     -1.7667647
{txt}{hline 18}{c BT}{hline 32}
Uses post-logit for prediction.
storing predicted probabilities
(58 vars, 4,601 obs)
lambda = .05
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v5 {c |}{col 21}{res}      0.1727807      0.4550969
{txt}{space 15}v6 {c |}{col 21}{res}      0.2152931      0.9614203
{txt}{space 15}v7 {c |}{col 21}{res}      1.1426365      3.2847248
{txt}{space 15}v8 {c |}{col 21}{res}      0.1368686      0.6228345
{txt}{space 15}v9 {c |}{col 21}{res}      0.1194438      1.2686870
{txt}{space 14}v16 {c |}{col 21}{res}      0.2610206      1.1365279
{txt}{space 14}v17 {c |}{col 21}{res}      0.1633636      1.1000374
{txt}{space 14}v18 {c |}{col 21}{res}      0.0186096      0.3792675
{txt}{space 14}v19 {c |}{col 21}{res}      0.0354681      0.0478566
{txt}{space 14}v20 {c |}{col 21}{res}      0.0623173      1.6419546
{txt}{space 14}v21 {c |}{col 21}{res}      0.2850692      0.2785537
{txt}{space 14}v23 {c |}{col 21}{res}      0.9087893      3.0333616
{txt}{space 14}v24 {c |}{col 21}{res}      0.1364868      0.7890926
{txt}{space 14}v25 {c |}{col 21}{res}     -0.1194090     -1.8286444
{txt}{space 14}v26 {c |}{col 21}{res}     -0.0365264     -1.1537435
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0021456     -8.0061923
{txt}{space 14}v52 {c |}{col 21}{res}      0.1837436      0.4989944
{txt}{space 14}v53 {c |}{col 21}{res}      1.5733685      5.1962139
{txt}{space 14}v57 {c |}{col 21}{res}      0.0002816      0.0009413
{txt}{space 12}_cons {c |}{col 21}{res}     -1.3345409     -2.1960013
{txt}{hline 18}{c BT}{hline 32}
Uses post-logit for prediction.
storing predicted probabilities
(58 vars, 4,601 obs)
lambda = .01
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v2 {c |}{col 21}{res}     -0.0037409     -0.1389110
{txt}{space 15}v3 {c |}{col 21}{res}      0.1011375      0.1052528
{txt}{space 15}v4 {c |}{col 21}{res}      0.0173759      2.3399989
{txt}{space 15}v5 {c |}{col 21}{res}      0.4296060      0.5853019
{txt}{space 15}v6 {c |}{col 21}{res}      0.4399529      0.8359847
{txt}{space 15}v7 {c |}{col 21}{res}      2.0688244      2.4042943
{txt}{space 15}v8 {c |}{col 21}{res}      0.4808568      0.5882269
{txt}{space 15}v9 {c |}{col 21}{res}      0.3601749      0.7213125
{txt}{space 14}v10 {c |}{col 21}{res}      0.0363979      0.1183907
{txt}{space 14}v12 {c |}{col 21}{res}     -0.0308145     -0.1612150
{txt}{space 14}v16 {c |}{col 21}{res}      0.4744442      0.9566529
{txt}{space 14}v17 {c |}{col 21}{res}      0.5376230      1.0240614
{txt}{space 14}v18 {c |}{col 21}{res}      0.2235757      0.1589568
{txt}{space 14}v19 {c |}{col 21}{res}      0.0684679      0.0765814
{txt}{space 14}v20 {c |}{col 21}{res}      0.3023891      1.3204219
{txt}{space 14}v21 {c |}{col 21}{res}      0.2312331      0.1788195
{txt}{space 14}v22 {c |}{col 21}{res}      0.1524290      0.3431311
{txt}{space 14}v23 {c |}{col 21}{res}      1.6218808      2.2021820
{txt}{space 14}v24 {c |}{col 21}{res}      0.5023649      0.4542068
{txt}{space 14}v25 {c |}{col 21}{res}     -0.6504894     -1.9495298
{txt}{space 14}v26 {c |}{col 21}{res}     -0.3118048     -0.8067431
{txt}{space 14}v27 {c |}{col 21}{res}     -0.1501577    -11.7835281
{txt}{space 14}v33 {c |}{col 21}{res}     -0.2648093     -0.8002706
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1250243      0.0036378
{txt}{space 14}v39 {c |}{col 21}{res}     -0.1063193     -0.7635106
{txt}{space 14}v42 {c |}{col 21}{res}     -0.4459358     -2.6936770
{txt}{space 14}v43 {c |}{col 21}{res}     -0.1163321     -1.3224400
{txt}{space 14}v44 {c |}{col 21}{res}     -0.1287170     -1.7394127
{txt}{space 14}v45 {c |}{col 21}{res}     -0.3007246     -0.7909711
{txt}{space 14}v46 {c |}{col 21}{res}     -0.4174007     -1.5924053
{txt}{space 14}v47 {c |}{col 21}{res}     -0.1506039     -2.2954658
{txt}{space 14}v48 {c |}{col 21}{res}     -0.1642561     -4.4529880
{txt}{space 14}v49 {c |}{col 21}{res}     -0.3189394     -1.2608654
{txt}{space 14}v52 {c |}{col 21}{res}      0.4521116      0.3611414
{txt}{space 14}v53 {c |}{col 21}{res}      3.7605479      5.7431487
{txt}{space 14}v56 {c |}{col 21}{res}      0.0013784      0.0113141
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004669      0.0005325
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6707145     -1.5458167
{txt}{hline 18}{c BT}{hline 32}
Uses post-logit for prediction.
storing predicted probabilities
(58 vars, 4,601 obs)
lambda = 0.005
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.0422566     -0.4523281
{txt}{space 15}v2 {c |}{col 21}{res}     -0.0512758     -0.1504532
{txt}{space 15}v3 {c |}{col 21}{res}      0.1188168      0.0988274
{txt}{space 15}v4 {c |}{col 21}{res}      0.0526757      2.3116675
{txt}{space 15}v5 {c |}{col 21}{res}      0.4847238      0.5488941
{txt}{space 15}v6 {c |}{col 21}{res}      0.4920480      0.8192193
{txt}{space 15}v7 {c |}{col 21}{res}      2.2297529      2.3093270
{txt}{space 15}v8 {c |}{col 21}{res}      0.5311637      0.5722020
{txt}{space 15}v9 {c |}{col 21}{res}      0.4285709      0.6623599
{txt}{space 14}v10 {c |}{col 21}{res}      0.0661834      0.1173268
{txt}{space 14}v12 {c |}{col 21}{res}     -0.0890686     -0.1378215
{txt}{space 14}v14 {c |}{col 21}{res}      0.0080481      0.1683385
{txt}{space 14}v15 {c |}{col 21}{res}      0.1881182      1.2441411
{txt}{space 14}v16 {c |}{col 21}{res}      0.5830756      0.9982845
{txt}{space 14}v17 {c |}{col 21}{res}      0.6665287      1.0019607
{txt}{space 14}v18 {c |}{col 21}{res}      0.2325277      0.1128352
{txt}{space 14}v19 {c |}{col 21}{res}      0.0744252      0.0714617
{txt}{space 14}v20 {c |}{col 21}{res}      0.4010756      1.0847420
{txt}{space 14}v21 {c |}{col 21}{res}      0.2175170      0.2185119
{txt}{space 14}v22 {c |}{col 21}{res}      0.2125489      0.3520371
{txt}{space 14}v23 {c |}{col 21}{res}      1.8809046      2.1495116
{txt}{space 14}v24 {c |}{col 21}{res}      0.5536729      0.4271774
{txt}{space 14}v25 {c |}{col 21}{res}     -0.9477607     -1.8589437
{txt}{space 14}v26 {c |}{col 21}{res}     -0.4763787     -0.8881947
{txt}{space 14}v27 {c |}{col 21}{res}     -0.4648550    -11.4017757
{txt}{space 14}v29 {c |}{col 21}{res}     -0.1131577     -2.4736247
{txt}{space 14}v33 {c |}{col 21}{res}     -0.4653176     -0.7285395
{txt}{space 14}v35 {c |}{col 21}{res}     -0.0637580     -2.1615035
{txt}{space 14}v37 {c |}{col 21}{res}     -0.0889362      0.0075332
{txt}{space 14}v38 {c |}{col 21}{res}     -0.0064648     -0.5566300
{txt}{space 14}v39 {c |}{col 21}{res}     -0.2245650     -0.7307393
{txt}{space 14}v41 {c |}{col 21}{res}     -0.2996689    -44.0279212
{txt}{space 14}v42 {c |}{col 21}{res}     -0.7082101     -2.5860352
{txt}{space 14}v43 {c |}{col 21}{res}     -0.2712233     -1.3714545
{txt}{space 14}v44 {c |}{col 21}{res}     -0.3739589     -1.5813728
{txt}{space 14}v45 {c |}{col 21}{res}     -0.4326240     -0.7865380
{txt}{space 14}v46 {c |}{col 21}{res}     -0.7046002     -1.4113620
{txt}{space 14}v47 {c |}{col 21}{res}     -0.7141176     -2.0788162
{txt}{space 14}v48 {c |}{col 21}{res}     -0.5871826     -3.8399523
{txt}{space 14}v49 {c |}{col 21}{res}     -0.6186623     -1.3437230
{txt}{space 14}v51 {c |}{col 21}{res}     -0.1370985     -0.6993427
{txt}{space 14}v52 {c |}{col 21}{res}      0.4580812      0.3452447
{txt}{space 14}v53 {c |}{col 21}{res}      4.4062312      5.5578661
{txt}{space 14}v56 {c |}{col 21}{res}      0.0022783      0.0105219
{txt}{space 14}v57 {c |}{col 21}{res}      0.0005070      0.0007773
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6005076     -1.4811996
{txt}{hline 18}{c BT}{hline 32}
Uses post-logit for prediction.
storing predicted probabilities
(58 vars, 4,601 obs)
lambda = 0.001
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.2721427     -0.3791446
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1256800     -0.1447328
{txt}{space 15}v3 {c |}{col 21}{res}      0.1390962      0.1116912
{txt}{space 15}v4 {c |}{col 21}{res}      0.1959648      2.2303869
{txt}{space 15}v5 {c |}{col 21}{res}      0.5268010      0.5582587
{txt}{space 15}v6 {c |}{col 21}{res}      0.6398607      0.8601265
{txt}{space 15}v7 {c |}{col 21}{res}      2.2994845      2.2783320
{txt}{space 15}v8 {c |}{col 21}{res}      0.5586001      0.5710605
{txt}{space 15}v9 {c |}{col 21}{res}      0.5722809      0.6990956
{txt}{space 14}v10 {c |}{col 21}{res}      0.0989041      0.1296654
{txt}{space 14}v11 {c |}{col 21}{res}     -0.0891131     -0.2668115
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1347646     -0.1400000
{txt}{space 14}v14 {c |}{col 21}{res}      0.0962984      0.1383352
{txt}{space 14}v15 {c |}{col 21}{res}      0.7678938      1.1864707
{txt}{space 14}v16 {c |}{col 21}{res}      0.9920547      1.0388119
{txt}{space 14}v17 {c |}{col 21}{res}      0.8492258      0.9487245
{txt}{space 14}v18 {c |}{col 21}{res}      0.1525157      0.1163154
{txt}{space 14}v19 {c |}{col 21}{res}      0.0809274      0.0795294
{txt}{space 14}v20 {c |}{col 21}{res}      0.6817314      1.0912048
{txt}{space 14}v21 {c |}{col 21}{res}      0.2268940      0.2445585
{txt}{space 14}v22 {c |}{col 21}{res}      0.2481234      0.2030494
{txt}{space 14}v23 {c |}{col 21}{res}      2.2554731      2.2312204
{txt}{space 14}v24 {c |}{col 21}{res}      0.5401740      0.4300520
{txt}{space 14}v25 {c |}{col 21}{res}     -1.5416988     -1.9352774
{txt}{space 14}v26 {c |}{col 21}{res}     -0.8651848     -1.0338064
{txt}{space 14}v27 {c |}{col 21}{res}     -1.4429284    -11.0879158
{txt}{space 14}v28 {c |}{col 21}{res}      0.2993044      0.4472262
{txt}{space 14}v29 {c |}{col 21}{res}     -0.9746507     -2.4821139
{txt}{space 14}v30 {c |}{col 21}{res}     -0.2146547     -0.3202787
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1517780     -0.1846426
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7640629     -0.7389031
{txt}{space 14}v35 {c |}{col 21}{res}     -0.9709912     -2.0911250
{txt}{space 14}v36 {c |}{col 21}{res}      0.6658666      0.9324802
{txt}{space 14}v37 {c |}{col 21}{res}     -0.0114706      0.0497937
{txt}{space 14}v38 {c |}{col 21}{res}     -0.4369001     -0.5997047
{txt}{space 14}v39 {c |}{col 21}{res}     -0.5880767     -0.8729110
{txt}{space 14}v40 {c |}{col 21}{res}     -0.3570155     -0.3069746
{txt}{space 14}v41 {c |}{col 21}{res}     -2.1216472    -44.7199772
{txt}{space 14}v42 {c |}{col 21}{res}     -1.4707506     -2.7023265
{txt}{space 14}v43 {c |}{col 21}{res}     -0.7101895     -1.2583446
{txt}{space 14}v44 {c |}{col 21}{res}     -1.0508245     -1.5925970
{txt}{space 14}v45 {c |}{col 21}{res}     -0.6734395     -0.7950828
{txt}{space 14}v46 {c |}{col 21}{res}     -1.2119073     -1.4721241
{txt}{space 14}v47 {c |}{col 21}{res}     -1.5974548     -2.3396021
{txt}{space 14}v48 {c |}{col 21}{res}     -2.0645791     -3.9592386
{txt}{space 14}v49 {c |}{col 21}{res}     -1.0606296     -1.2859350
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1278490     -0.1819038
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6705187     -0.6455945
{txt}{space 14}v52 {c |}{col 21}{res}      0.4195137      0.3518535
{txt}{space 14}v53 {c |}{col 21}{res}      5.0716910      5.3236593
{txt}{space 14}v54 {c |}{col 21}{res}      1.0462339      2.4322398
{txt}{space 14}v56 {c |}{col 21}{res}      0.0046267      0.0102458
{txt}{space 14}v57 {c |}{col 21}{res}      0.0006104      0.0008063
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5323640     -1.5551758
{txt}{hline 18}{c BT}{hline 32}
Uses post-logit for prediction.
storing predicted probabilities

{com}. //
. 
. foreach lam in .1 .05 .01 0.005 0.001 {c -(}
{txt}  2{com}. 
.         $loadspam
{txt}  3{com}.         gen myholdout = _n>4000
{txt}  4{com}.         
.         di "lambda = `lam'"
{txt}  5{com}. 
.         lassologit v58 v1-v57, l(`lam') savep nocons lambdan
{txt}  6{com}.         mat P = e(phat)
{txt}  7{com}.         svmat P
{txt}  8{com}. 
.         predict double p0, pr
{txt}  9{com}.         
.         assert reldif(P1,p0)<10e-4
{txt} 10{com}.         
. {c )-}
{txt}(58 vars, 4,601 obs)
lambda = .1
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v7 {c |}{col 21}{res}      0.2650131      3.4924194
{txt}{space 14}v21 {c |}{col 21}{res}      0.0024332      0.1020325
{txt}{space 14}v23 {c |}{col 21}{res}      0.2750091      3.3829459
{txt}{space 14}v25 {c |}{col 21}{res}     -0.1326806     -2.3257051
{txt}{space 14}v26 {c |}{col 21}{res}     -0.0608907     -1.8382049
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0103742     -7.6421148
{txt}{space 14}v37 {c |}{col 21}{res}     -0.0630326     -1.3603202
{txt}{space 14}v53 {c |}{col 21}{res}      0.2095697      5.9704748
{txt}{hline 18}{c BT}{hline 32}
Uses lasso for prediction
storing predicted probabilities
(58 vars, 4,601 obs)
lambda = .05
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v7 {c |}{col 21}{res}      0.7933681      2.6253635
{txt}{space 14}v12 {c |}{col 21}{res}     -0.0629520     -0.4247379
{txt}{space 14}v16 {c |}{col 21}{res}      0.1067483      0.9324610
{txt}{space 14}v17 {c |}{col 21}{res}      0.0710060      1.1060487
{txt}{space 14}v20 {c |}{col 21}{res}      0.0238899      1.5232256
{txt}{space 14}v21 {c |}{col 21}{res}      0.0680059      0.1468137
{txt}{space 14}v23 {c |}{col 21}{res}      0.7250324      2.6941404
{txt}{space 14}v24 {c |}{col 21}{res}      0.0479179      0.4504684
{txt}{space 14}v25 {c |}{col 21}{res}     -0.3135342     -2.1956773
{txt}{space 14}v26 {c |}{col 21}{res}     -0.1775486     -1.3329447
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0701598     -7.2267825
{txt}{space 14}v33 {c |}{col 21}{res}     -0.0828687     -1.0037807
{txt}{space 14}v37 {c |}{col 21}{res}     -0.3075390     -0.3504000
{txt}{space 14}v42 {c |}{col 21}{res}     -0.1037288     -3.1005426
{txt}{space 14}v45 {c |}{col 21}{res}     -0.1684503     -1.1473849
{txt}{space 14}v46 {c |}{col 21}{res}     -0.1598983     -2.3516123
{txt}{space 14}v50 {c |}{col 21}{res}     -0.2564002     -0.9437476
{txt}{space 14}v52 {c |}{col 21}{res}      0.0245341      0.2775914
{txt}{space 14}v53 {c |}{col 21}{res}      1.1899608      6.9886589
{txt}{hline 18}{c BT}{hline 32}
Uses lasso for prediction
storing predicted probabilities
(58 vars, 4,601 obs)
lambda = .01
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.0200614     -0.5365942
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1154488     -0.2437637
{txt}{space 15}v5 {c |}{col 21}{res}      0.1956686      0.3515775
{txt}{space 15}v6 {c |}{col 21}{res}      0.1165663      0.4697127
{txt}{space 15}v7 {c |}{col 21}{res}      1.7000846      2.1879866
{txt}{space 15}v8 {c |}{col 21}{res}      0.2964565      0.4535168
{txt}{space 15}v9 {c |}{col 21}{res}      0.1377153      0.4396796
{txt}{space 14}v12 {c |}{col 21}{res}     -0.2915621     -0.3305314
{txt}{space 14}v15 {c |}{col 21}{res}      0.1204029      1.2645380
{txt}{space 14}v16 {c |}{col 21}{res}      0.3284639      0.8163235
{txt}{space 14}v17 {c |}{col 21}{res}      0.4203708      0.8761621
{txt}{space 14}v18 {c |}{col 21}{res}      0.0486125     -0.0057940
{txt}{space 14}v19 {c |}{col 21}{res}     -0.0207722     -0.0906895
{txt}{space 14}v20 {c |}{col 21}{res}      0.2927479      1.2550231
{txt}{space 14}v21 {c |}{col 21}{res}      0.0894497      0.1403134
{txt}{space 14}v22 {c |}{col 21}{res}      0.0775057      0.3317326
{txt}{space 14}v23 {c |}{col 21}{res}      1.4427913      2.0218483
{txt}{space 14}v24 {c |}{col 21}{res}      0.3946860      0.4193053
{txt}{space 14}v25 {c |}{col 21}{res}     -0.9369264     -2.2361590
{txt}{space 14}v26 {c |}{col 21}{res}     -0.4647039     -1.0145500
{txt}{space 14}v27 {c |}{col 21}{res}     -0.2576646     -9.4452785
{txt}{space 14}v29 {c |}{col 21}{res}     -0.0450506     -3.5975876
{txt}{space 14}v33 {c |}{col 21}{res}     -0.5899865     -1.0400269
{txt}{space 14}v35 {c |}{col 21}{res}     -0.0918821     -2.1362442
{txt}{space 14}v37 {c |}{col 21}{res}     -0.3583833     -0.2102179
{txt}{space 14}v39 {c |}{col 21}{res}     -0.2118790     -0.9262838
{txt}{space 14}v41 {c |}{col 21}{res}     -0.1033152    -34.1557491
{txt}{space 14}v42 {c |}{col 21}{res}     -0.6598576     -2.8553308
{txt}{space 14}v43 {c |}{col 21}{res}     -0.3301688     -1.8439233
{txt}{space 14}v44 {c |}{col 21}{res}     -0.4364266     -2.1931420
{txt}{space 14}v45 {c |}{col 21}{res}     -0.6039433     -0.9957092
{txt}{space 14}v46 {c |}{col 21}{res}     -0.8008157     -1.8714535
{txt}{space 14}v47 {c |}{col 21}{res}     -0.5115777     -2.5744130
{txt}{space 14}v48 {c |}{col 21}{res}     -0.4924094     -3.7971354
{txt}{space 14}v49 {c |}{col 21}{res}     -0.5587219     -1.6343045
{txt}{space 14}v50 {c |}{col 21}{res}     -1.0800523     -0.9360925
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6243036     -1.6360753
{txt}{space 14}v52 {c |}{col 21}{res}      0.1969135      0.2376949
{txt}{space 14}v53 {c |}{col 21}{res}      3.2862392      4.9338768
{txt}{space 14}v56 {c |}{col 21}{res}      0.0009495      0.0077243
{txt}{space 14}v57 {c |}{col 21}{res}      0.0001419      0.0004734
{txt}{hline 18}{c BT}{hline 32}
Uses lasso for prediction
storing predicted probabilities
(58 vars, 4,601 obs)
lambda = 0.005
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.1809101     -0.5378352
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1572958     -0.2437759
{txt}{space 15}v4 {c |}{col 21}{res}      0.0248724      2.1049508
{txt}{space 15}v5 {c |}{col 21}{res}      0.2595447      0.3597005
{txt}{space 15}v6 {c |}{col 21}{res}      0.2000384      0.5341243
{txt}{space 15}v7 {c |}{col 21}{res}      1.9126339      2.1816531
{txt}{space 15}v8 {c |}{col 21}{res}      0.3578740      0.4345871
{txt}{space 15}v9 {c |}{col 21}{res}      0.2228843      0.5035271
{txt}{space 14}v12 {c |}{col 21}{res}     -0.3141871     -0.3285839
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0875284     -0.3838125
{txt}{space 14}v15 {c |}{col 21}{res}      0.3541594      1.5264669
{txt}{space 14}v16 {c |}{col 21}{res}      0.5013871      0.8534160
{txt}{space 14}v17 {c |}{col 21}{res}      0.5691103      0.9140972
{txt}{space 14}v18 {c |}{col 21}{res}      0.0575478     -0.0097427
{txt}{space 14}v19 {c |}{col 21}{res}     -0.0435865     -0.0856511
{txt}{space 14}v20 {c |}{col 21}{res}      0.3980754      1.1929666
{txt}{space 14}v21 {c |}{col 21}{res}      0.1054354      0.1407157
{txt}{space 14}v22 {c |}{col 21}{res}      0.1420706      0.3282761
{txt}{space 14}v23 {c |}{col 21}{res}      1.7201139      2.0721137
{txt}{space 14}v24 {c |}{col 21}{res}      0.4724277      0.3984504
{txt}{space 14}v25 {c |}{col 21}{res}     -1.2345620     -2.1574582
{txt}{space 14}v26 {c |}{col 21}{res}     -0.6313616     -1.0300730
{txt}{space 14}v27 {c |}{col 21}{res}     -0.5178156     -9.3080993
{txt}{space 14}v29 {c |}{col 21}{res}     -0.3591802     -3.5319597
{txt}{space 14}v30 {c |}{col 21}{res}     -0.1618564     -0.4851814
{txt}{space 14}v31 {c |}{col 21}{res}     -0.0460959     -0.3252689
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7916606     -1.0259040
{txt}{space 14}v35 {c |}{col 21}{res}     -0.2196920     -2.2944999
{txt}{space 14}v37 {c |}{col 21}{res}     -0.3149192     -0.2114374
{txt}{space 14}v38 {c |}{col 21}{res}     -0.1918731     -0.6960359
{txt}{space 14}v39 {c |}{col 21}{res}     -0.3522177     -0.9350352
{txt}{space 14}v40 {c |}{col 21}{res}     -0.0483339     -0.3780015
{txt}{space 14}v41 {c |}{col 21}{res}     -0.4067984    -35.1248659
{txt}{space 14}v42 {c |}{col 21}{res}     -0.9641549     -2.7912247
{txt}{space 14}v43 {c |}{col 21}{res}     -0.5740110     -1.8487342
{txt}{space 14}v44 {c |}{col 21}{res}     -0.7629171     -2.1331338
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7378221     -1.0101051
{txt}{space 14}v46 {c |}{col 21}{res}     -1.1105822     -1.8257851
{txt}{space 14}v47 {c |}{col 21}{res}     -0.9020299     -2.4623539
{txt}{space 14}v48 {c |}{col 21}{res}     -0.9272574     -3.7774305
{txt}{space 14}v49 {c |}{col 21}{res}     -0.8519997     -1.6597352
{txt}{space 14}v50 {c |}{col 21}{res}     -1.1075607     -0.9226955
{txt}{space 14}v51 {c |}{col 21}{res}     -1.1961590     -1.6631168
{txt}{space 14}v52 {c |}{col 21}{res}      0.2273951      0.2330733
{txt}{space 14}v53 {c |}{col 21}{res}      3.9489601      5.0332783
{txt}{space 14}v56 {c |}{col 21}{res}      0.0014999      0.0077103
{txt}{space 14}v57 {c |}{col 21}{res}      0.0002136      0.0004576
{txt}{hline 18}{c BT}{hline 32}
Uses lasso for prediction
storing predicted probabilities
(58 vars, 4,601 obs)
lambda = 0.001
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3982825     -0.5384526
{txt}{space 15}v2 {c |}{col 21}{res}     -0.2199558     -0.2435814
{txt}{space 15}v3 {c |}{col 21}{res}     -0.0115077     -0.0829364
{txt}{space 15}v4 {c |}{col 21}{res}      0.1436504      2.0968461
{txt}{space 15}v5 {c |}{col 21}{res}      0.3343029      0.3616199
{txt}{space 15}v6 {c |}{col 21}{res}      0.3856801      0.5459681
{txt}{space 15}v7 {c |}{col 21}{res}      2.0959475      2.1145837
{txt}{space 15}v8 {c |}{col 21}{res}      0.4107703      0.4150610
{txt}{space 15}v9 {c |}{col 21}{res}      0.3989677      0.5202900
{txt}{space 14}v10 {c |}{col 21}{res}      0.0151963      0.0332519
{txt}{space 14}v12 {c |}{col 21}{res}     -0.3254721     -0.3318908
{txt}{space 14}v13 {c |}{col 21}{res}     -0.2610581     -0.3470012
{txt}{space 14}v14 {c |}{col 21}{res}     -0.0227294     -0.0519676
{txt}{space 14}v15 {c |}{col 21}{res}      0.9111644      1.4541153
{txt}{space 14}v16 {c |}{col 21}{res}      0.8280731      0.8757171
{txt}{space 14}v17 {c |}{col 21}{res}      0.8068890      0.8974761
{txt}{space 14}v18 {c |}{col 21}{res}      0.0162699     -0.0052409
{txt}{space 14}v19 {c |}{col 21}{res}     -0.0686582     -0.0843323
{txt}{space 14}v20 {c |}{col 21}{res}      0.7500586      1.2233055
{txt}{space 14}v21 {c |}{col 21}{res}      0.1325494      0.1481123
{txt}{space 14}v22 {c |}{col 21}{res}      0.2060754      0.1916727
{txt}{space 14}v23 {c |}{col 21}{res}      2.0838512      2.1058144
{txt}{space 14}v24 {c |}{col 21}{res}      0.4834132      0.4045198
{txt}{space 14}v25 {c |}{col 21}{res}     -1.8348080     -2.2448002
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0129280     -1.1435044
{txt}{space 14}v27 {c |}{col 21}{res}     -1.7329176     -9.1731030
{txt}{space 14}v28 {c |}{col 21}{res}      0.2991567      0.4537484
{txt}{space 14}v29 {c |}{col 21}{res}     -1.4051035     -3.5172228
{txt}{space 14}v30 {c |}{col 21}{res}     -0.4119771     -0.4989323
{txt}{space 14}v31 {c |}{col 21}{res}     -0.2362190     -0.3216134
{txt}{space 14}v33 {c |}{col 21}{res}     -1.0382353     -1.0221971
{txt}{space 14}v35 {c |}{col 21}{res}     -1.2583388     -2.3237163
{txt}{space 14}v36 {c |}{col 21}{res}      0.1167897      0.3925375
{txt}{space 14}v37 {c |}{col 21}{res}     -0.2344411     -0.1769186
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5851062     -0.7396187
{txt}{space 14}v39 {c |}{col 21}{res}     -0.7198888     -0.9942981
{txt}{space 14}v40 {c |}{col 21}{res}     -0.4284416     -0.5274777
{txt}{space 14}v41 {c |}{col 21}{res}     -2.3932394    -35.4819610
{txt}{space 14}v42 {c |}{col 21}{res}     -1.7659382     -2.8886123
{txt}{space 14}v43 {c |}{col 21}{res}     -1.1357853     -1.7651116
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5697362     -2.1709830
{txt}{space 14}v45 {c |}{col 21}{res}     -0.9170786     -0.9935707
{txt}{space 14}v46 {c |}{col 21}{res}     -1.6453863     -1.8919245
{txt}{space 14}v47 {c |}{col 21}{res}     -1.6567375     -2.4726632
{txt}{space 14}v48 {c |}{col 21}{res}     -2.2231595     -3.7887919
{txt}{space 14}v49 {c |}{col 21}{res}     -1.3284236     -1.6211424
{txt}{space 14}v50 {c |}{col 21}{res}     -1.1716418     -1.2302896
{txt}{space 14}v51 {c |}{col 21}{res}     -1.8222803     -1.6166041
{txt}{space 14}v52 {c |}{col 21}{res}      0.2422686      0.2336426
{txt}{space 14}v53 {c |}{col 21}{res}      4.7488130      4.9620987
{txt}{space 14}v54 {c |}{col 21}{res}      0.8396567      2.2167321
{txt}{space 14}v56 {c |}{col 21}{res}      0.0029953      0.0074715
{txt}{space 14}v57 {c |}{col 21}{res}      0.0003678      0.0004834
{txt}{hline 18}{c BT}{hline 32}
Uses lasso for prediction
storing predicted probabilities

{com}. //
. 
. ********************************************************************************
. *** Verify using glmnet (cs_predict.R)                                                                           ***
. ********************************************************************************
. 
. $loadprostate
{txt}(11 vars, 97 obs)

{com}. 
. gen ybin = lpsa > 2
{txt}
{com}. 
. lassologit ybin lcavol-pgg45, lam(.2 .11 .1 0.05 0.01) savep lambdan
{res}{txt}Obtaining solution for 5 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
.....
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}   0.20000{col 25}   1{col 31}   0.69846{col 43}  113.99735{txt} {res}{col 56} 0.0787{txt}{col 65}{c |}{res}{col 67}Added lcavol _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}   0.11000{col 25}   3{col 31}   3.59675{col 43}   99.74080{txt} {res}{col 56} 0.2292{txt}{col 65}{c |}{res}{col 67}Added lweight gleason.
     3{txt}{col 7}{c |}{res}   4{col 13}   0.05000{col 25}   5{col 31}  10.56586{col 43}   90.27006{txt} {res}{col 56} 0.3403{txt}{col 65}{c |}{res}{col 67}Added lbph svi.
     4{txt}{col 7}{c |}{res}   5{col 13}   0.01000{col 25}   8{col 31}  18.32126{col 43}   86.17997{txt} {res}{col 56} 0.4238{txt}{col 65}{c |}{res}{col 67}Added age lcp pgg45.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat P = e(phat)
{txt}
{com}. mat P = P[97,1..5]
{txt}
{com}. mat G = ( 0.761871934040682,0.883722877193935,0.895110432984738,0.955542318252603,0.999505561515738)
{txt}
{com}. assert mreldif(P,G)<0.01
{txt}
{com}. 
. lassologit ybin lcavol-pgg45, lam(.2 .11 .1 0.05 0.01) savep nocons lambdan
{res}{txt}Obtaining solution for 5 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
.....
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}   0.20000{col 25}   2{col 31}   0.25986{col 43}  113.68946{txt} {res}{col 56} 0.0921{txt}{col 65}{c |}{res}{col 67}Added lcavol gleason.
     2{txt}{col 7}{c |}{res}   2{col 13}   0.11000{col 25}   2{col 31}   0.57932{col 43}  102.08041{txt} {res}{col 56} 0.1876{txt}{col 65}{c |}{res}{col 67}Added lweight. Removed gleason.
     3{txt}{col 7}{c |}{res}   4{col 13}   0.05000{col 25}   5{col 31}   1.57115{col 43}   96.27282{txt} {res}{col 56} 0.2764{txt}{col 65}{c |}{res}{col 67}Added age lbph svi pgg45. Removed lweight.
     4{txt}{col 7}{c |}{res}   5{col 13}   0.01000{col 25}   8{col 31}   4.49403{col 43}   90.64428{txt} {res}{col 56} 0.3638{txt}{col 65}{c |}{res}{col 67}Added lweight lcp gleason.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat P = e(phat)
{txt}
{com}. mat P = P[97,1..5]
{txt}
{com}. mat G = ( 0.761411339295924,0.883320216213757,0.893762132556822,0.956213536648691,0.999298395412146)
{txt}
{com}. assert mreldif(P,G)<0.01
{txt}
{com}. 
. lassologit ybin lcavol-pgg45, lam(.2 .11 .1 0.05 0.01) savep nostd lambdan
{res}{txt}Obtaining solution for 5 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
.....
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}   0.20000{col 25}   3{col 31}   0.58709{col 43}  113.58767{txt} {res}{col 56} 0.1153{txt}{col 65}{c |}{res}{col 67}Added lcavol age pgg45 _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}   0.11000{col 25}   4{col 31}   1.21286{col 43}  102.96716{txt} {res}{col 56} 0.2193{txt}{col 65}{c |}{res}{col 67}Added lbph.
     3{txt}{col 7}{c |}{res}   4{col 13}   0.05000{col 25}   3{col 31}   1.51415{col 43}   93.41464{txt} {res}{col 56} 0.2813{txt}{col 65}{c |}{res}{col 67}Removed age.
     4{txt}{col 7}{c |}{res}   5{col 13}   0.01000{col 25}   8{col 31}  15.75757{col 43}   87.63212{txt} {res}{col 56} 0.4118{txt}{col 65}{c |}{res}{col 67}Added lweight age svi lcp gleason.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat P = e(phat)
{txt}
{com}. mat P = P[97,1..5]
{txt}
{com}. mat G = ( 0.708638828605104,0.858851204259658,0.872566014019627,0.931492511316991,0.998846180327787)
{txt}
{com}. assert mreldif(P,G)<0.01
{txt}
{com}. 
. lassologit ybin lcavol-pgg45, lam(.2 .11 .1 0.05 0.01) savep nostd nocons lambdan
{res}{txt}Obtaining solution for 5 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
.....
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}   0.20000{col 25}   3{col 31}   0.06870{col 43}  112.79223{txt} {res}{col 56} 0.1131{txt}{col 65}{c |}{res}{col 67}Added lcavol age pgg45.
     2{txt}{col 7}{c |}{res}   2{col 13}   0.11000{col 25}   4{col 31}   0.50886{col 43}  101.72070{txt} {res}{col 56} 0.2179{txt}{col 65}{c |}{res}{col 67}Added lbph.
     3{txt}{col 7}{c |}{res}   5{col 13}   0.01000{col 25}   8{col 31}   3.41422{col 43}   91.81371{txt} {res}{col 56} 0.3541{txt}{col 65}{c |}{res}{col 67}Added lweight svi lcp gleason.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat P = e(phat)
{txt}
{com}. mat P = P[97,1..5]
{txt}
{com}. mat G = ( 0.703648308982215,0.853973607193486,0.868497657957821,0.929886289492582,0.998267904285371)
{txt}
{com}. assert mreldif(P,G)<0.01
{txt}
{com}. 
. 
. 
. ********************************************************************************
. *** comparison with mata predicted values                                                                        ***
. ********************************************************************************
. 
. 
. *** in-sample
. 
. $loadspam
{txt}(58 vars, 4,601 obs)

{com}. gen myholdout = _n<50
{txt}
{com}. 
. lassologit v58 v1-v57, lambda(0.1) savep lambdan
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v7 {c |}{col 21}{res}      0.5412442      4.2194397
{txt}{space 14}v16 {c |}{col 21}{res}      0.0569502      0.8984170
{txt}{space 14}v21 {c |}{col 21}{res}      0.2448168      0.3940148
{txt}{space 14}v23 {c |}{col 21}{res}      0.5126734      3.8072262
{txt}{space 14}v25 {c |}{col 21}{res}     -0.0071134     -2.7490367
{txt}{space 14}v53 {c |}{col 21}{res}      0.6310249      7.5984195
{txt}{space 14}v57 {c |}{col 21}{res}      0.0000267      0.0011889
{txt}{space 12}_cons {c |}{col 21}{res}     -0.8168528     -1.7667647
{txt}{hline 18}{c BT}{hline 32}

{com}. mat Phat1 = e(phat)
{txt}
{com}. 
. svmat Phat1
{txt}
{com}. 
. predict double Phat2 if e(sample), pr
{txt}Uses lasso for prediction
storing predicted probabilities

{com}. 
. assert abs(Phat1 - Phat2)<10e-8  
{txt}
{com}. 
. 
. *** in-sample (not on full sample)
. 
. $loadspam
{txt}(58 vars, 4,601 obs)

{com}. gen myholdout = _n<50
{txt}
{com}. 
. lassologit v58 v1-v57 if _n<4000, lambda(0.1) savep lambdan
{res}warning: post-logit did not converge after 100 iterations.

{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v7 {c |}{col 21}{res}      0.3346469      3.8281662
{txt}{space 14}v19 {c |}{col 21}{res}      0.1093364      0.1855088
{txt}{space 14}v21 {c |}{col 21}{res}      0.2019775      0.3285388
{txt}{space 14}v23 {c |}{col 21}{res}      0.3357161      4.2536733
{txt}{space 14}v25 {c |}{col 21}{res}     -0.0414092     -2.4138668
{txt}{space 14}v52 {c |}{col 21}{res}      0.5888534      2.8057184
{txt}{space 14}v53 {c |}{col 21}{res}      0.2882914      9.1192984
{txt}{space 12}_cons {c |}{col 21}{res}     -0.7614305     -1.8296059
{txt}{hline 18}{c BT}{hline 32}

{com}. mat Phat1 = e(phat)
{txt}
{com}. 
. svmat Phat1
{txt}
{com}. 
. predict double Phat2 if e(sample), pr
{txt}Uses lasso for prediction
storing predicted probabilities

{com}. 
. assert abs(Phat1 - Phat2)<10e-6  if !missing(Phat1)
{txt}
{com}. 
. 
. *** in-sample
. 
. $loadspam
{txt}(58 vars, 4,601 obs)

{com}. gen myholdout = _n<50
{txt}
{com}. 
. lassologit v58 v1-v57, lambda(0.1) savep  holdout(myh)  lambdan
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v7 {c |}{col 21}{res}      0.5467516      4.1570567
{txt}{space 14}v16 {c |}{col 21}{res}      0.0485652      0.8595936
{txt}{space 14}v21 {c |}{col 21}{res}      0.2489515      0.4009632
{txt}{space 14}v23 {c |}{col 21}{res}      0.5225101      3.8591993
{txt}{space 14}v25 {c |}{col 21}{res}     -0.0027273     -2.7525769
{txt}{space 14}v53 {c |}{col 21}{res}      0.6483558      7.5757553
{txt}{space 14}v57 {c |}{col 21}{res}      0.0000294      0.0012028
{txt}{space 12}_cons {c |}{col 21}{res}     -0.8520893     -1.8036440
{txt}{hline 18}{c BT}{hline 32}

{com}. mat Phat1 = e(phat0)
{txt}
{com}. 
. svmat Phat1
{txt}
{com}. 
. predict double Phat2, pr
{txt}Uses lasso for prediction
storing predicted probabilities

{com}. 
. assert abs(Phat1 - Phat2)<10e-8 if _n<50
{txt}
{com}. 
. 
. ********************************************************************************
. *** predicted values: re-estimation and no re-estimation                                         ***
. ********************************************************************************
. 
. $loadprostate
{txt}(11 vars, 97 obs)

{com}. 
. gen ybin = lpsa > 2
{txt}
{com}. 
. lassologit ybin lcavol-pgg45
{res}{txt}Obtaining solution for 50 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
..................................................    50

{res}
{txt}  Knot{c |}  ID     Lambda    s      L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  24.04967{col 25}   0{col 31}   0.75567{col 43}  121.55230{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}  21.89237{col 25}   1{col 31}   0.72708{col 43}  118.88228{txt} {res}{col 56} 0.0386{txt}{col 65}{c |}{res}{col 67}Added lcavol.
     3{txt}{col 7}{c |}{res}   7{col 13}  13.68394{col 25}   3{col 31}   0.69877{col 43}  107.79964{txt} {res}{col 56} 0.1629{txt}{col 65}{c |}{res}{col 67}Added lweight gleason.
     4{txt}{col 7}{c |}{res}  14{col 13}   7.08756{col 25}   4{col 31}   7.64951{col 43}   93.43198{txt} {res}{col 56} 0.2977{txt}{col 65}{c |}{res}{col 67}Added svi.
     5{txt}{col 7}{c |}{res}  17{col 13}   5.34623{col 25}   5{col 31}   9.95724{col 43}   91.46466{txt} {res}{col 56} 0.3305{txt}{col 65}{c |}{res}{col 67}Added lbph.
     6{txt}{col 7}{c |}{res}  28{col 13}   1.90138{col 25}   6{col 31}  15.02132{col 43}   86.13353{txt} {res}{col 56} 0.3909{txt}{col 65}{c |}{res}{col 67}Added age.
     7{txt}{col 7}{c |}{res}  31{col 13}   1.43423{col 25}   7{col 31}  15.84016{col 43}   86.71472{txt} {res}{col 56} 0.4028{txt}{col 65}{c |}{res}{col 67}Added lcp.
     8{txt}{col 7}{c |}{res}  34{col 13}   1.08186{col 25}   8{col 31}  17.52795{col 43}   86.80734{txt} {res}{col 56} 0.4186{txt}{col 65}{c |}{res}{col 67}Added pgg45.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. predict double yhat , lic(ebic)
{txt}using lasso coefficients stored in e(betas)
storing predicted probabilities

{com}. predict double yhat2, lic(ebic) est
{txt}re-estimating the model with lic(ebic)
Use lambda=.2404966621050475 (selected by EBIC).
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      1.0300356      1.1199492
{txt}{space 10}lweight {c |}{col 21}{res}      1.7103327      1.8118797
{txt}{space 14}age {c |}{col 21}{res}     -0.0514941     -0.0621927
{txt}{space 13}lbph {c |}{col 21}{res}      0.3364414      0.3794069
{txt}{space 14}svi {c |}{col 21}{res}      4.1460914      0.0000000
{txt}{space 14}lcp {c |}{col 21}{res}     -0.5016087     -0.6256899
{txt}{space 10}gleason {c |}{col 21}{res}      1.8019444      2.0448036
{txt}{space 12}pgg45 {c |}{col 21}{res}     -0.0115014     -0.0149088
{txt}{space 12}_cons {c |}{col 21}{res}    -15.4292042    -16.8158245
{txt}{hline 18}{c BT}{hline 32}
Uses lasso for prediction
storing predicted probabilities

{com}. 
. assert abs(yhat- yhat2)<10e-6
{txt}
{com}. cap drop yhat yhat2
{txt}
{com}. 
. ********************************************************************************
. *** more        testing                                                                                                                  ***
. ********************************************************************************
. 
. $loadprostate
{txt}(11 vars, 97 obs)

{com}. 
. gen ybin = lpsa > 2
{txt}
{com}. 
. * post logit
. cap drop yhat yhat2
{txt}
{com}. lassologit ybin lcavol-pgg45
{res}{txt}Obtaining solution for 50 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
..................................................    50

{res}
{txt}  Knot{c |}  ID     Lambda    s      L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  24.04967{col 25}   0{col 31}   0.75567{col 43}  121.55230{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}  21.89237{col 25}   1{col 31}   0.72708{col 43}  118.88228{txt} {res}{col 56} 0.0386{txt}{col 65}{c |}{res}{col 67}Added lcavol.
     3{txt}{col 7}{c |}{res}   7{col 13}  13.68394{col 25}   3{col 31}   0.69877{col 43}  107.79964{txt} {res}{col 56} 0.1629{txt}{col 65}{c |}{res}{col 67}Added lweight gleason.
     4{txt}{col 7}{c |}{res}  14{col 13}   7.08756{col 25}   4{col 31}   7.64951{col 43}   93.43198{txt} {res}{col 56} 0.2977{txt}{col 65}{c |}{res}{col 67}Added svi.
     5{txt}{col 7}{c |}{res}  17{col 13}   5.34623{col 25}   5{col 31}   9.95724{col 43}   91.46466{txt} {res}{col 56} 0.3305{txt}{col 65}{c |}{res}{col 67}Added lbph.
     6{txt}{col 7}{c |}{res}  28{col 13}   1.90138{col 25}   6{col 31}  15.02132{col 43}   86.13353{txt} {res}{col 56} 0.3909{txt}{col 65}{c |}{res}{col 67}Added age.
     7{txt}{col 7}{c |}{res}  31{col 13}   1.43423{col 25}   7{col 31}  15.84016{col 43}   86.71472{txt} {res}{col 56} 0.4028{txt}{col 65}{c |}{res}{col 67}Added lcp.
     8{txt}{col 7}{c |}{res}  34{col 13}   1.08186{col 25}   8{col 31}  17.52795{col 43}   86.80734{txt} {res}{col 56} 0.4186{txt}{col 65}{c |}{res}{col 67}Added pgg45.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. predict double yhat , lic(ebic) postlogit // postlogit is being ignored
{err}postlogit option ignored
{txt}using lasso coefficients stored in e(betas)
storing predicted probabilities

{com}. predict double yhat2, lic(ebic) est postlogit
{txt}re-estimating the model with lic(ebic)
Use lambda=.2404966621050475 (selected by EBIC).
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      1.0300356      1.1199492
{txt}{space 10}lweight {c |}{col 21}{res}      1.7103327      1.8118797
{txt}{space 14}age {c |}{col 21}{res}     -0.0514941     -0.0621927
{txt}{space 13}lbph {c |}{col 21}{res}      0.3364414      0.3794069
{txt}{space 14}svi {c |}{col 21}{res}      4.1460914      0.0000000
{txt}{space 14}lcp {c |}{col 21}{res}     -0.5016087     -0.6256899
{txt}{space 10}gleason {c |}{col 21}{res}      1.8019444      2.0448036
{txt}{space 12}pgg45 {c |}{col 21}{res}     -0.0115014     -0.0149088
{txt}{space 12}_cons {c |}{col 21}{res}    -15.4292042    -16.8158245
{txt}{hline 18}{c BT}{hline 32}
Uses post-logit for prediction.
storing predicted probabilities

{com}. 
. ** cvlassologit: compare two methods 
. cap drop yhat*
{txt}
{com}. set seed 1
{txt}
{com}. cvlassologit ybin lcavol-pgg45
{res}{txt}K-fold cross-validation with 5 folds.
Fold {res}1 2 3 4 5 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         9{c |} {space 3} {res} 7.7859773 {space 3} {res} .94192021 {space 3} {res} .06841629  ^
{txt}        17{c |} {space 3} {res} 2.5206771 {space 3} {res} .86375182 {space 3} {res} .09946637  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. cvlassologit, lopt postres
{res}{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         9{c |} {space 3} {res} 7.7859773 {space 3} {res} .94192021 {space 3} {res} .06841629  ^
{txt}        17{c |} {space 3} {res} 2.5206771 {space 3} {res} .86375182 {space 3} {res} .09946637  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.
Estimate  with lambda=2.521 (lopt).
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.6637460      0.7857923
{txt}{space 10}lweight {c |}{col 21}{res}      1.2384491      1.5596285
{txt}{space 13}lbph {c |}{col 21}{res}      0.1146796      0.2507624
{txt}{space 14}svi {c |}{col 21}{res}      0.9515772      0.0000000
{txt}{space 10}gleason {c |}{col 21}{res}      0.8417432      1.1264209
{txt}{space 12}_cons {c |}{col 21}{res}    -10.1410367    -13.3388319
{txt}{hline 18}{c BT}{hline 32}

{com}. predict double yhat1
{txt}Uses lasso for prediction
storing predicted probabilities

{com}. 
. set seed 1 
{txt}
{com}. cvlassologit ybin lcavol-pgg45
{res}{txt}K-fold cross-validation with 5 folds.
Fold {res}1 2 3 4 5 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         9{c |} {space 3} {res} 7.7859773 {space 3} {res} .94192021 {space 3} {res} .06841629  ^
{txt}        17{c |} {space 3} {res} 2.5206771 {space 3} {res} .86375182 {space 3} {res} .09946637  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. predict double yhat2, lopt
{txt}Uses lasso for prediction
storing predicted probabilities

{com}. 
. assert abs(yhat1- yhat2)<10e-6
{txt}
{com}. 
. ** cvlassologit with postlogit: compare two methods 
. cap drop yhat*
{txt}
{com}. set seed 1
{txt}
{com}. cvlassologit ybin lcavol-pgg45
{res}{txt}K-fold cross-validation with 5 folds.
Fold {res}1 2 3 4 5 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         9{c |} {space 3} {res} 7.7859773 {space 3} {res} .94192021 {space 3} {res} .06841629  ^
{txt}        17{c |} {space 3} {res} 2.5206771 {space 3} {res} .86375182 {space 3} {res} .09946637  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. cvlassologit, lopt postres postlogit
{res}{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         9{c |} {space 3} {res} 7.7859773 {space 3} {res} .94192021 {space 3} {res} .06841629  ^
{txt}        17{c |} {space 3} {res} 2.5206771 {space 3} {res} .86375182 {space 3} {res} .09946637  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.
Estimate  with lambda=2.521 (lopt).
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.6637460      0.7857923
{txt}{space 10}lweight {c |}{col 21}{res}      1.2384491      1.5596285
{txt}{space 13}lbph {c |}{col 21}{res}      0.1146796      0.2507624
{txt}{space 14}svi {c |}{col 21}{res}      0.9515772      0.0000000
{txt}{space 10}gleason {c |}{col 21}{res}      0.8417432      1.1264209
{txt}{space 12}_cons {c |}{col 21}{res}    -10.1410367    -13.3388319
{txt}{hline 18}{c BT}{hline 32}

{com}. predict double yhat1, postlogit
{txt}Uses post-logit for prediction.
storing predicted probabilities

{com}. 
. set seed 1 
{txt}
{com}. cvlassologit ybin lcavol-pgg45
{res}{txt}K-fold cross-validation with 5 folds.
Fold {res}1 2 3 4 5 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         9{c |} {space 3} {res} 7.7859773 {space 3} {res} .94192021 {space 3} {res} .06841629  ^
{txt}        17{c |} {space 3} {res} 2.5206771 {space 3} {res} .86375182 {space 3} {res} .09946637  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. predict double yhat2, lopt postlogit
{txt}Uses post-logit for prediction.
storing predicted probabilities

{com}. 
. assert abs(yhat1- yhat2)<10e-6
{txt}
{com}. 
. ** rlassologit 
. cap drop yhat*
{txt}
{com}. rlassologit ybin lcavol-pgg45
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.5213662      0.9095492
{txt}{space 10}lweight {c |}{col 21}{res}      0.5563134      2.0564072
{txt}{space 10}gleason {c |}{col 21}{res}      0.3314336      1.3449179
{txt}{space 12}_cons {c |}{col 21}{res}     -4.0943091    -16.4802012
{txt}{hline 18}{c BT}{hline 32}

{com}. predict double yhat, postlogit
{txt}Uses post-logit for prediction.
storing predicted probabilities

{com}. 
. ** lassologit: compare two methods
. cap drop yhat*
{txt}
{com}. lassologit ybin lcavol-pgg45
{res}{txt}Obtaining solution for 50 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
..................................................    50

{res}
{txt}  Knot{c |}  ID     Lambda    s      L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  24.04967{col 25}   0{col 31}   0.75567{col 43}  121.55230{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}  21.89237{col 25}   1{col 31}   0.72708{col 43}  118.88228{txt} {res}{col 56} 0.0386{txt}{col 65}{c |}{res}{col 67}Added lcavol.
     3{txt}{col 7}{c |}{res}   7{col 13}  13.68394{col 25}   3{col 31}   0.69877{col 43}  107.79964{txt} {res}{col 56} 0.1629{txt}{col 65}{c |}{res}{col 67}Added lweight gleason.
     4{txt}{col 7}{c |}{res}  14{col 13}   7.08756{col 25}   4{col 31}   7.64951{col 43}   93.43198{txt} {res}{col 56} 0.2977{txt}{col 65}{c |}{res}{col 67}Added svi.
     5{txt}{col 7}{c |}{res}  17{col 13}   5.34623{col 25}   5{col 31}   9.95724{col 43}   91.46466{txt} {res}{col 56} 0.3305{txt}{col 65}{c |}{res}{col 67}Added lbph.
     6{txt}{col 7}{c |}{res}  28{col 13}   1.90138{col 25}   6{col 31}  15.02132{col 43}   86.13353{txt} {res}{col 56} 0.3909{txt}{col 65}{c |}{res}{col 67}Added age.
     7{txt}{col 7}{c |}{res}  31{col 13}   1.43423{col 25}   7{col 31}  15.84016{col 43}   86.71472{txt} {res}{col 56} 0.4028{txt}{col 65}{c |}{res}{col 67}Added lcp.
     8{txt}{col 7}{c |}{res}  34{col 13}   1.08186{col 25}   8{col 31}  17.52795{col 43}   86.80734{txt} {res}{col 56} 0.4186{txt}{col 65}{c |}{res}{col 67}Added pgg45.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. lassologit, lic(ebic) postres
{txt}Use lambda=.2404966621050475 (selected by EBIC).
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      1.0300356      1.1199492
{txt}{space 10}lweight {c |}{col 21}{res}      1.7103327      1.8118797
{txt}{space 14}age {c |}{col 21}{res}     -0.0514941     -0.0621927
{txt}{space 13}lbph {c |}{col 21}{res}      0.3364414      0.3794069
{txt}{space 14}svi {c |}{col 21}{res}      4.1460914      0.0000000
{txt}{space 14}lcp {c |}{col 21}{res}     -0.5016087     -0.6256899
{txt}{space 10}gleason {c |}{col 21}{res}      1.8019444      2.0448036
{txt}{space 12}pgg45 {c |}{col 21}{res}     -0.0115014     -0.0149088
{txt}{space 12}_cons {c |}{col 21}{res}    -15.4292042    -16.8158245
{txt}{hline 18}{c BT}{hline 32}

{com}. predict double yhat1
{txt}Uses lasso for prediction
storing predicted probabilities

{com}. 
. lassologit ybin lcavol-pgg45
{res}{txt}Obtaining solution for 50 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
..................................................    50

{res}
{txt}  Knot{c |}  ID     Lambda    s      L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  24.04967{col 25}   0{col 31}   0.75567{col 43}  121.55230{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}  21.89237{col 25}   1{col 31}   0.72708{col 43}  118.88228{txt} {res}{col 56} 0.0386{txt}{col 65}{c |}{res}{col 67}Added lcavol.
     3{txt}{col 7}{c |}{res}   7{col 13}  13.68394{col 25}   3{col 31}   0.69877{col 43}  107.79964{txt} {res}{col 56} 0.1629{txt}{col 65}{c |}{res}{col 67}Added lweight gleason.
     4{txt}{col 7}{c |}{res}  14{col 13}   7.08756{col 25}   4{col 31}   7.64951{col 43}   93.43198{txt} {res}{col 56} 0.2977{txt}{col 65}{c |}{res}{col 67}Added svi.
     5{txt}{col 7}{c |}{res}  17{col 13}   5.34623{col 25}   5{col 31}   9.95724{col 43}   91.46466{txt} {res}{col 56} 0.3305{txt}{col 65}{c |}{res}{col 67}Added lbph.
     6{txt}{col 7}{c |}{res}  28{col 13}   1.90138{col 25}   6{col 31}  15.02132{col 43}   86.13353{txt} {res}{col 56} 0.3909{txt}{col 65}{c |}{res}{col 67}Added age.
     7{txt}{col 7}{c |}{res}  31{col 13}   1.43423{col 25}   7{col 31}  15.84016{col 43}   86.71472{txt} {res}{col 56} 0.4028{txt}{col 65}{c |}{res}{col 67}Added lcp.
     8{txt}{col 7}{c |}{res}  34{col 13}   1.08186{col 25}   8{col 31}  17.52795{col 43}   86.80734{txt} {res}{col 56} 0.4186{txt}{col 65}{c |}{res}{col 67}Added pgg45.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. predict double yhat2, lic(ebic) 
{txt}using lasso coefficients stored in e(betas)
storing predicted probabilities

{com}. 
. assert abs(yhat1- yhat2)<10e-6
{txt}
{com}. 
. ** lassologit with post-lasso: compare two methods 
. cap drop yhat*
{txt}
{com}. lassologit ybin lcavol-pgg45
{res}{txt}Obtaining solution for 50 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
..................................................    50

{res}
{txt}  Knot{c |}  ID     Lambda    s      L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  24.04967{col 25}   0{col 31}   0.75567{col 43}  121.55230{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}  21.89237{col 25}   1{col 31}   0.72708{col 43}  118.88228{txt} {res}{col 56} 0.0386{txt}{col 65}{c |}{res}{col 67}Added lcavol.
     3{txt}{col 7}{c |}{res}   7{col 13}  13.68394{col 25}   3{col 31}   0.69877{col 43}  107.79964{txt} {res}{col 56} 0.1629{txt}{col 65}{c |}{res}{col 67}Added lweight gleason.
     4{txt}{col 7}{c |}{res}  14{col 13}   7.08756{col 25}   4{col 31}   7.64951{col 43}   93.43198{txt} {res}{col 56} 0.2977{txt}{col 65}{c |}{res}{col 67}Added svi.
     5{txt}{col 7}{c |}{res}  17{col 13}   5.34623{col 25}   5{col 31}   9.95724{col 43}   91.46466{txt} {res}{col 56} 0.3305{txt}{col 65}{c |}{res}{col 67}Added lbph.
     6{txt}{col 7}{c |}{res}  28{col 13}   1.90138{col 25}   6{col 31}  15.02132{col 43}   86.13353{txt} {res}{col 56} 0.3909{txt}{col 65}{c |}{res}{col 67}Added age.
     7{txt}{col 7}{c |}{res}  31{col 13}   1.43423{col 25}   7{col 31}  15.84016{col 43}   86.71472{txt} {res}{col 56} 0.4028{txt}{col 65}{c |}{res}{col 67}Added lcp.
     8{txt}{col 7}{c |}{res}  34{col 13}   1.08186{col 25}   8{col 31}  17.52795{col 43}   86.80734{txt} {res}{col 56} 0.4186{txt}{col 65}{c |}{res}{col 67}Added pgg45.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. lassologit, lic(ebic) postres postlogit
{txt}Use lambda=.2404966621050475 (selected by EBIC).
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      1.0300356      1.1199492
{txt}{space 10}lweight {c |}{col 21}{res}      1.7103327      1.8118797
{txt}{space 14}age {c |}{col 21}{res}     -0.0514941     -0.0621927
{txt}{space 13}lbph {c |}{col 21}{res}      0.3364414      0.3794069
{txt}{space 14}svi {c |}{col 21}{res}      4.1460914      0.0000000
{txt}{space 14}lcp {c |}{col 21}{res}     -0.5016087     -0.6256899
{txt}{space 10}gleason {c |}{col 21}{res}      1.8019444      2.0448036
{txt}{space 12}pgg45 {c |}{col 21}{res}     -0.0115014     -0.0149088
{txt}{space 12}_cons {c |}{col 21}{res}    -15.4292042    -16.8158245
{txt}{hline 18}{c BT}{hline 32}

{com}. predict double yhat1, postlogit
{txt}Uses post-logit for prediction.
storing predicted probabilities

{com}. 
. lassologit ybin lcavol-pgg45
{res}{txt}Obtaining solution for 50 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
..................................................    50

{res}
{txt}  Knot{c |}  ID     Lambda    s      L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  24.04967{col 25}   0{col 31}   0.75567{col 43}  121.55230{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}  21.89237{col 25}   1{col 31}   0.72708{col 43}  118.88228{txt} {res}{col 56} 0.0386{txt}{col 65}{c |}{res}{col 67}Added lcavol.
     3{txt}{col 7}{c |}{res}   7{col 13}  13.68394{col 25}   3{col 31}   0.69877{col 43}  107.79964{txt} {res}{col 56} 0.1629{txt}{col 65}{c |}{res}{col 67}Added lweight gleason.
     4{txt}{col 7}{c |}{res}  14{col 13}   7.08756{col 25}   4{col 31}   7.64951{col 43}   93.43198{txt} {res}{col 56} 0.2977{txt}{col 65}{c |}{res}{col 67}Added svi.
     5{txt}{col 7}{c |}{res}  17{col 13}   5.34623{col 25}   5{col 31}   9.95724{col 43}   91.46466{txt} {res}{col 56} 0.3305{txt}{col 65}{c |}{res}{col 67}Added lbph.
     6{txt}{col 7}{c |}{res}  28{col 13}   1.90138{col 25}   6{col 31}  15.02132{col 43}   86.13353{txt} {res}{col 56} 0.3909{txt}{col 65}{c |}{res}{col 67}Added age.
     7{txt}{col 7}{c |}{res}  31{col 13}   1.43423{col 25}   7{col 31}  15.84016{col 43}   86.71472{txt} {res}{col 56} 0.4028{txt}{col 65}{c |}{res}{col 67}Added lcp.
     8{txt}{col 7}{c |}{res}  34{col 13}   1.08186{col 25}   8{col 31}  17.52795{col 43}   86.80734{txt} {res}{col 56} 0.4186{txt}{col 65}{c |}{res}{col 67}Added pgg45.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. predict double yhat2, lic(ebic) postlogit est
{txt}re-estimating the model with lic(ebic)
Use lambda=.2404966621050475 (selected by EBIC).
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      1.0300356      1.1199492
{txt}{space 10}lweight {c |}{col 21}{res}      1.7103327      1.8118797
{txt}{space 14}age {c |}{col 21}{res}     -0.0514941     -0.0621927
{txt}{space 13}lbph {c |}{col 21}{res}      0.3364414      0.3794069
{txt}{space 14}svi {c |}{col 21}{res}      4.1460914      0.0000000
{txt}{space 14}lcp {c |}{col 21}{res}     -0.5016087     -0.6256899
{txt}{space 10}gleason {c |}{col 21}{res}      1.8019444      2.0448036
{txt}{space 12}pgg45 {c |}{col 21}{res}     -0.0115014     -0.0149088
{txt}{space 12}_cons {c |}{col 21}{res}    -15.4292042    -16.8158245
{txt}{hline 18}{c BT}{hline 32}
Uses post-logit for prediction.
storing predicted probabilities

{com}. 
. assert abs(yhat1- yhat2)<10e-6
{txt}
{com}. 
{txt}end of do-file

{com}. 
. do "cs_lassologit_weights.do"
{txt}
{com}. clear all 
{res}{txt}
{com}. 
. 
. ********************************************************************************
. ***  verify fweights                                                                                                             ***
. ********************************************************************************
. 
. $loadspam
{txt}(58 vars, 4,601 obs)

{com}. 
. // frequencies
. set seed 123
{txt}
{com}. gen freq = max(rpoisson(3),1)
{txt}
{com}. 
. // estimate with fweights
. lassologit v58 v1-v57 [fw=freq]
{res}{txt}Obtaining solution for 50 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
..................................................    50

{res}
{txt}  Knot{c |}  ID     Lambda    s      L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}2652.14886{col 25}   0{col 31}   0.43345{col 43}18856.83345{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added v21 _cons.
     2{txt}{col 7}{c |}{res}   3{col 13}2197.68398{col 25}   2{col 31}   0.68101{col 43}18156.94054{txt} {res}{col 56} 0.0374{txt}{col 65}{c |}{res}{col 67}Added v23.
     3{txt}{col 7}{c |}{res}   4{col 13}2000.54773{col 25}   3{col 31}   1.04108{col 43}17572.06374{txt} {res}{col 56} 0.0686{txt}{col 65}{c |}{res}{col 67}Added v7.
     4{txt}{col 7}{c |}{res}   5{col 13}1821.09495{col 25}   4{col 31}   1.47848{col 43}17000.82094{txt} {res}{col 56} 0.0990{txt}{col 65}{c |}{res}{col 67}Added v53.
     5{txt}{col 7}{c |}{res}   6{col 13}1657.73941{col 25}   5{col 31}   1.92357{col 43}16456.86737{txt} {res}{col 56} 0.1280{txt}{col 65}{c |}{res}{col 67}Added v52.
     6{txt}{col 7}{c |}{res}   7{col 13}1509.03717{col 25}   6{col 31}   2.37585{col 43}15918.47486{txt} {res}{col 56} 0.1567{txt}{col 65}{c |}{res}{col 67}Added v57.
     7{txt}{col 7}{c |}{res}   8{col 13}1373.67379{col 25}   8{col 31}   2.81688{col 43}15313.96430{txt} {res}{col 56} 0.1890{txt}{col 65}{c |}{res}{col 67}Added v16 v25.
     8{txt}{col 7}{c |}{res}   9{col 13}1250.45274{col 25}  11{col 31}   3.26479{col 43}14725.03387{txt} {res}{col 56} 0.2206{txt}{col 65}{c |}{res}{col 67}Added v5 v19 v56.
     9{txt}{col 7}{c |}{res}  10{col 13}1138.28485{col 25}  13{col 31}   3.74757{col 43}14148.00406{txt} {res}{col 56} 0.2515{txt}{col 65}{c |}{res}{col 67}Added v8 v17.
    10{txt}{col 7}{c |}{res}  11{col 13}1036.17863{col 25}  14{col 31}   4.27697{col 43}13593.87671{txt} {res}{col 56} 0.2811{txt}{col 65}{c |}{res}{col 67}Added v24.
    11{txt}{col 7}{c |}{res}  12{col 13} 943.23152{col 25}  15{col 31}   4.84130{col 43}13080.63162{txt} {res}{col 56} 0.3084{txt}{col 65}{c |}{res}{col 67}Added v9.
    12{txt}{col 7}{c |}{res}  13{col 13} 858.62193{col 25}  19{col 31}   5.42156{col 43}12616.34231{txt} {res}{col 56} 0.3336{txt}{col 65}{c |}{res}{col 67}Added v6 v18 v20 v26.
    13{txt}{col 7}{c |}{res}  15{col 13} 711.49086{col 25}  20{col 31}   6.64149{col 43}11762.95437{txt} {res}{col 56} 0.3790{txt}{col 65}{c |}{res}{col 67}Added v27.
    14{txt}{col 7}{c |}{res}  16{col 13} 647.66883{col 25}  22{col 31}   7.22988{col 43}11385.42743{txt} {res}{col 56} 0.3993{txt}{col 65}{c |}{res}{col 67}Added v22 v37.
    15{txt}{col 7}{c |}{res}  17{col 13} 589.57176{col 25}  23{col 31}   7.83815{col 43}11006.32589{txt} {res}{col 56} 0.4195{txt}{col 65}{c |}{res}{col 67}Added v45.
    16{txt}{col 7}{c |}{res}  18{col 13} 536.68610{col 25}  25{col 31}   8.43471{col 43}10654.66134{txt} {res}{col 56} 0.4385{txt}{col 65}{c |}{res}{col 67}Added v42 v46.
    17{txt}{col 7}{c |}{res}  21{col 13} 404.82877{col 25}  26{col 31}  10.22168{col 43} 9721.81359{txt} {res}{col 56} 0.4881{txt}{col 65}{c |}{res}{col 67}Added v3.
    18{txt}{col 7}{c |}{res}  22{col 13} 368.51489{col 25}  27{col 31}  10.82301{col 43} 9458.26909{txt} {res}{col 56} 0.5022{txt}{col 65}{c |}{res}{col 67}Added v33.
    19{txt}{col 7}{c |}{res}  26{col 13} 253.04032{col 25}  28{col 31}  13.24214{col 43} 8578.63303{txt} {res}{col 56} 0.5490{txt}{col 65}{c |}{res}{col 67}Added v49.
    20{txt}{col 7}{c |}{res}  27{col 13} 230.34214{col 25}  33{col 31}  13.91267{col 43} 8402.35731{txt} {res}{col 56} 0.5590{txt}{col 65}{c |}{res}{col 67}Added v4 v39 v43 v44 v48.
    21{txt}{col 7}{c |}{res}  30{col 13} 173.74985{col 25}  34{col 31}  15.99443{col 43} 7907.31436{txt} {res}{col 56} 0.5854{txt}{col 65}{c |}{res}{col 67}Added v47.
    22{txt}{col 7}{c |}{res}  31{col 13} 158.16417{col 25}  35{col 31}  16.76628{col 43} 7765.85178{txt} {res}{col 56} 0.5930{txt}{col 65}{c |}{res}{col 67}Added v10.
    23{txt}{col 7}{c |}{res}  32{col 13} 143.97655{col 25}  38{col 31}  17.55431{col 43} 7635.81406{txt} {res}{col 56} 0.6004{txt}{col 65}{c |}{res}{col 67}Added v2 v12 v41.
    24{txt}{col 7}{c |}{res}  34{col 13} 119.30513{col 25}  39{col 31}  19.14212{col 43} 7383.84921{txt} {res}{col 56} 0.6139{txt}{col 65}{c |}{res}{col 67}Added v35.
    25{txt}{col 7}{c |}{res}  35{col 13} 108.60324{col 25}  40{col 31}  19.94348{col 43} 7270.46716{txt} {res}{col 56} 0.6200{txt}{col 65}{c |}{res}{col 67}Added v15.
    26{txt}{col 7}{c |}{res}  36{col 13}  98.86133{col 25}  42{col 31}  20.80458{col 43} 7165.44680{txt} {res}{col 56} 0.6259{txt}{col 65}{c |}{res}{col 67}Added v29 v51.
    27{txt}{col 7}{c |}{res}  38{col 13}  81.92073{col 25}  45{col 31}  22.66782{col 43} 6966.65317{txt} {res}{col 56} 0.6368{txt}{col 65}{c |}{res}{col 67}Added v1 v36 v54.
    28{txt}{col 7}{c |}{res}  39{col 13}  74.57229{col 25}  46{col 31}  23.71637{col 43} 6870.53825{txt} {res}{col 56} 0.6421{txt}{col 65}{c |}{res}{col 67}Added v40.
    29{txt}{col 7}{c |}{res}  40{col 13}  67.88302{col 25}  47{col 31}  24.79449{col 43} 6781.41660{txt} {res}{col 56} 0.6469{txt}{col 65}{c |}{res}{col 67}Added v31.
    30{txt}{col 7}{c |}{res}  43{col 13}  51.20498{col 25}  48{col 31}  28.06065{col 43} 6553.46675{txt} {res}{col 56} 0.6592{txt}{col 65}{c |}{res}{col 67}Added v28.
    31{txt}{col 7}{c |}{res}  44{col 13}  46.61180{col 25}  49{col 31}  29.20843{col 43} 6490.01160{txt} {res}{col 56} 0.6627{txt}{col 65}{c |}{res}{col 67}Added v38.
    32{txt}{col 7}{c |}{res}  45{col 13}  42.43063{col 25}  50{col 31}  30.35391{col 43} 6432.85656{txt} {res}{col 56} 0.6658{txt}{col 65}{c |}{res}{col 67}Added v50.
    33{txt}{col 7}{c |}{res}  46{col 13}  38.62453{col 25}  51{col 31}  31.50073{col 43} 6381.29222{txt} {res}{col 56} 0.6687{txt}{col 65}{c |}{res}{col 67}Added v30.
    34{txt}{col 7}{c |}{res}  48{col 13}  32.00594{col 25}  52{col 31}  33.76718{col 43} 6290.37496{txt} {res}{col 56} 0.6737{txt}{col 65}{c |}{res}{col 67}Added v14.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat A = e(betas)
{txt}
{com}. mat LA = e(lambdas)
{txt}
{com}. 
. // estimate with expanded data
. expand freq
{txt}(9,467 observations created)

{com}. lassologit v58 v1-v57
{res}{txt}Obtaining solution for 50 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
..................................................    50

{res}
{txt}  Knot{c |}  ID     Lambda    s      L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}2652.14886{col 25}   0{col 31}   0.43345{col 43}18856.83345{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added v21 _cons.
     2{txt}{col 7}{c |}{res}   3{col 13}2197.68398{col 25}   2{col 31}   0.68101{col 43}18156.94054{txt} {res}{col 56} 0.0374{txt}{col 65}{c |}{res}{col 67}Added v23.
     3{txt}{col 7}{c |}{res}   4{col 13}2000.54773{col 25}   3{col 31}   1.04108{col 43}17572.06374{txt} {res}{col 56} 0.0686{txt}{col 65}{c |}{res}{col 67}Added v7.
     4{txt}{col 7}{c |}{res}   5{col 13}1821.09495{col 25}   4{col 31}   1.47848{col 43}17000.82094{txt} {res}{col 56} 0.0990{txt}{col 65}{c |}{res}{col 67}Added v53.
     5{txt}{col 7}{c |}{res}   6{col 13}1657.73941{col 25}   5{col 31}   1.92357{col 43}16456.86737{txt} {res}{col 56} 0.1280{txt}{col 65}{c |}{res}{col 67}Added v52.
     6{txt}{col 7}{c |}{res}   7{col 13}1509.03717{col 25}   6{col 31}   2.37585{col 43}15918.47486{txt} {res}{col 56} 0.1567{txt}{col 65}{c |}{res}{col 67}Added v57.
     7{txt}{col 7}{c |}{res}   8{col 13}1373.67379{col 25}   8{col 31}   2.81688{col 43}15313.96430{txt} {res}{col 56} 0.1890{txt}{col 65}{c |}{res}{col 67}Added v16 v25.
     8{txt}{col 7}{c |}{res}   9{col 13}1250.45274{col 25}  11{col 31}   3.26479{col 43}14725.03387{txt} {res}{col 56} 0.2206{txt}{col 65}{c |}{res}{col 67}Added v5 v19 v56.
     9{txt}{col 7}{c |}{res}  10{col 13}1138.28485{col 25}  13{col 31}   3.74757{col 43}14148.00406{txt} {res}{col 56} 0.2515{txt}{col 65}{c |}{res}{col 67}Added v8 v17.
    10{txt}{col 7}{c |}{res}  11{col 13}1036.17863{col 25}  14{col 31}   4.27697{col 43}13593.87671{txt} {res}{col 56} 0.2811{txt}{col 65}{c |}{res}{col 67}Added v24.
    11{txt}{col 7}{c |}{res}  12{col 13} 943.23152{col 25}  15{col 31}   4.84130{col 43}13080.63162{txt} {res}{col 56} 0.3084{txt}{col 65}{c |}{res}{col 67}Added v9.
    12{txt}{col 7}{c |}{res}  13{col 13} 858.62193{col 25}  19{col 31}   5.42156{col 43}12616.34231{txt} {res}{col 56} 0.3336{txt}{col 65}{c |}{res}{col 67}Added v6 v18 v20 v26.
    13{txt}{col 7}{c |}{res}  15{col 13} 711.49086{col 25}  20{col 31}   6.64149{col 43}11762.95437{txt} {res}{col 56} 0.3790{txt}{col 65}{c |}{res}{col 67}Added v27.
    14{txt}{col 7}{c |}{res}  16{col 13} 647.66883{col 25}  22{col 31}   7.22988{col 43}11385.42743{txt} {res}{col 56} 0.3993{txt}{col 65}{c |}{res}{col 67}Added v22 v37.
    15{txt}{col 7}{c |}{res}  17{col 13} 589.57176{col 25}  23{col 31}   7.83815{col 43}11006.32589{txt} {res}{col 56} 0.4195{txt}{col 65}{c |}{res}{col 67}Added v45.
    16{txt}{col 7}{c |}{res}  18{col 13} 536.68610{col 25}  25{col 31}   8.43471{col 43}10654.66134{txt} {res}{col 56} 0.4385{txt}{col 65}{c |}{res}{col 67}Added v42 v46.
    17{txt}{col 7}{c |}{res}  21{col 13} 404.82877{col 25}  26{col 31}  10.22168{col 43} 9721.81359{txt} {res}{col 56} 0.4881{txt}{col 65}{c |}{res}{col 67}Added v3.
    18{txt}{col 7}{c |}{res}  22{col 13} 368.51489{col 25}  27{col 31}  10.82301{col 43} 9458.26909{txt} {res}{col 56} 0.5022{txt}{col 65}{c |}{res}{col 67}Added v33.
    19{txt}{col 7}{c |}{res}  26{col 13} 253.04032{col 25}  28{col 31}  13.24214{col 43} 8578.63303{txt} {res}{col 56} 0.5490{txt}{col 65}{c |}{res}{col 67}Added v49.
    20{txt}{col 7}{c |}{res}  27{col 13} 230.34214{col 25}  33{col 31}  13.91267{col 43} 8402.35731{txt} {res}{col 56} 0.5590{txt}{col 65}{c |}{res}{col 67}Added v4 v39 v43 v44 v48.
    21{txt}{col 7}{c |}{res}  30{col 13} 173.74985{col 25}  34{col 31}  15.99443{col 43} 7907.31436{txt} {res}{col 56} 0.5854{txt}{col 65}{c |}{res}{col 67}Added v47.
    22{txt}{col 7}{c |}{res}  31{col 13} 158.16417{col 25}  35{col 31}  16.76628{col 43} 7765.85178{txt} {res}{col 56} 0.5930{txt}{col 65}{c |}{res}{col 67}Added v10.
    23{txt}{col 7}{c |}{res}  32{col 13} 143.97655{col 25}  38{col 31}  17.55431{col 43} 7635.81406{txt} {res}{col 56} 0.6004{txt}{col 65}{c |}{res}{col 67}Added v2 v12 v41.
    24{txt}{col 7}{c |}{res}  34{col 13} 119.30513{col 25}  39{col 31}  19.14212{col 43} 7383.84921{txt} {res}{col 56} 0.6139{txt}{col 65}{c |}{res}{col 67}Added v35.
    25{txt}{col 7}{c |}{res}  35{col 13} 108.60324{col 25}  40{col 31}  19.94348{col 43} 7270.46716{txt} {res}{col 56} 0.6200{txt}{col 65}{c |}{res}{col 67}Added v15.
    26{txt}{col 7}{c |}{res}  36{col 13}  98.86133{col 25}  42{col 31}  20.80458{col 43} 7165.44680{txt} {res}{col 56} 0.6259{txt}{col 65}{c |}{res}{col 67}Added v29 v51.
    27{txt}{col 7}{c |}{res}  38{col 13}  81.92073{col 25}  45{col 31}  22.66782{col 43} 6966.65317{txt} {res}{col 56} 0.6368{txt}{col 65}{c |}{res}{col 67}Added v1 v36 v54.
    28{txt}{col 7}{c |}{res}  39{col 13}  74.57229{col 25}  46{col 31}  23.71637{col 43} 6870.53825{txt} {res}{col 56} 0.6421{txt}{col 65}{c |}{res}{col 67}Added v40.
    29{txt}{col 7}{c |}{res}  40{col 13}  67.88302{col 25}  47{col 31}  24.79449{col 43} 6781.41660{txt} {res}{col 56} 0.6469{txt}{col 65}{c |}{res}{col 67}Added v31.
    30{txt}{col 7}{c |}{res}  43{col 13}  51.20498{col 25}  48{col 31}  28.06065{col 43} 6553.46675{txt} {res}{col 56} 0.6592{txt}{col 65}{c |}{res}{col 67}Added v28.
    31{txt}{col 7}{c |}{res}  44{col 13}  46.61180{col 25}  49{col 31}  29.20843{col 43} 6490.01160{txt} {res}{col 56} 0.6627{txt}{col 65}{c |}{res}{col 67}Added v38.
    32{txt}{col 7}{c |}{res}  45{col 13}  42.43063{col 25}  50{col 31}  30.35391{col 43} 6432.85656{txt} {res}{col 56} 0.6658{txt}{col 65}{c |}{res}{col 67}Added v50.
    33{txt}{col 7}{c |}{res}  46{col 13}  38.62453{col 25}  51{col 31}  31.50073{col 43} 6381.29222{txt} {res}{col 56} 0.6687{txt}{col 65}{c |}{res}{col 67}Added v30.
    34{txt}{col 7}{c |}{res}  48{col 13}  32.00594{col 25}  52{col 31}  33.76718{col 43} 6290.37496{txt} {res}{col 56} 0.6737{txt}{col 65}{c |}{res}{col 67}Added v14.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat B = e(betas)
{txt}
{com}. mat LB = e(lambdas)
{txt}
{com}. 
. assert mreldif(LA,LB)<1e-10
{txt}
{com}. assert mreldif(A,B)<1e-10
{txt}
{com}. 
. ********************************************************************************
. ***  verify fweights (without constant)                                                                          ***
. ********************************************************************************
. 
. $loadspam
{txt}(58 vars, 4,601 obs)

{com}. 
. // frequencies
. set seed 123
{txt}
{com}. gen freq = max(rpoisson(3),1)
{txt}
{com}. 
. // estimate with fweights
. lassologit v58 v1-v57 [fw=freq], nocons
{res}{txt}Obtaining solution for 50 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
..................................................    50

{res}
{txt}  Knot{c |}  ID     Lambda    s      L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   2{col 13}2049.62463{col 25}   1{col 31}   0.03225{col 43}19279.50542{txt} {res}{col 56}-0.0223{txt}{col 65}{c |}{res}{col 67}Added v25.
     2{txt}{col 7}{c |}{res}   3{col 13}1865.76957{col 25}   2{col 31}   0.07211{col 43}19071.40676{txt} {res}{col 56}-0.0111{txt}{col 65}{c |}{res}{col 67}Added v23.
     3{txt}{col 7}{c |}{res}   4{col 13}1698.40664{col 25}   4{col 31}   0.29051{col 43}18652.22506{txt} {res}{col 56} 0.0114{txt}{col 65}{c |}{res}{col 67}Added v7 v26.
     4{txt}{col 7}{c |}{res}   5{col 13}1546.05647{col 25}   7{col 31}   0.57671{col 43}18180.99515{txt} {res}{col 56} 0.0368{txt}{col 65}{c |}{res}{col 67}Added v27 v37 v53.
     5{txt}{col 7}{c |}{res}   6{col 13}1407.37239{col 25}   8{col 31}   0.95088{col 43}17573.51667{txt} {res}{col 56} 0.0691{txt}{col 65}{c |}{res}{col 67}Added v21.
     6{txt}{col 7}{c |}{res}   7{col 13}1281.12852{col 25}  10{col 31}   1.41016{col 43}16986.00749{txt} {res}{col 56} 0.1006{txt}{col 65}{c |}{res}{col 67}Added v45 v50.
     7{txt}{col 7}{c |}{res}   8{col 13}1166.20896{col 25}  11{col 31}   1.89052{col 43}16389.79594{txt} {res}{col 56} 0.1323{txt}{col 65}{c |}{res}{col 67}Added v46.
     8{txt}{col 7}{c |}{res}   9{col 13}1061.59789{col 25}  12{col 31}   2.38226{col 43}15801.84364{txt} {res}{col 56} 0.1636{txt}{col 65}{c |}{res}{col 67}Added v52.
     9{txt}{col 7}{c |}{res}  10{col 13} 966.37062{col 25}  15{col 31}   2.89222{col 43}15230.45986{txt} {res}{col 56} 0.1944{txt}{col 65}{c |}{res}{col 67}Added v16 v42 v56.
    10{txt}{col 7}{c |}{res}  11{col 13} 879.68542{col 25}  17{col 31}   3.41388{col 43}14657.05059{txt} {res}{col 56} 0.2250{txt}{col 65}{c |}{res}{col 67}Added v24 v33.
    11{txt}{col 7}{c |}{res}  12{col 13} 800.77603{col 25}  20{col 31}   4.00469{col 43}14083.26229{txt} {res}{col 56} 0.2559{txt}{col 65}{c |}{res}{col 67}Added v12 v17 v20.
    12{txt}{col 7}{c |}{res}  13{col 13} 728.94496{col 25}  21{col 31}   4.61784{col 43}13535.79374{txt} {res}{col 56} 0.2851{txt}{col 65}{c |}{res}{col 67}Added v8.
    13{txt}{col 7}{c |}{res}  15{col 13} 604.03498{col 25}  22{col 31}   5.86677{col 43}12568.67828{txt} {res}{col 56} 0.3365{txt}{col 65}{c |}{res}{col 67}Added v44.
    14{txt}{col 7}{c |}{res}  16{col 13} 549.85194{col 25}  23{col 31}   6.50409{col 43}12137.78363{txt} {res}{col 56} 0.3595{txt}{col 65}{c |}{res}{col 67}Added v57.
    15{txt}{col 7}{c |}{res}  17{col 13} 500.52922{col 25}  25{col 31}   7.17326{col 43}11722.46514{txt} {res}{col 56} 0.3818{txt}{col 65}{c |}{res}{col 67}Added v2 v48.
    16{txt}{col 7}{c |}{res}  18{col 13} 455.63084{col 25}  30{col 31}   7.87033{col 43}11343.40366{txt} {res}{col 56} 0.4025{txt}{col 65}{c |}{res}{col 67}Added v5 v9 v11 v39 v49.
    17{txt}{col 7}{c |}{res}  19{col 13} 414.75992{col 25}  31{col 31}   8.62771{col 43}10973.62057{txt} {res}{col 56} 0.4223{txt}{col 65}{c |}{res}{col 67}Added v43.
    18{txt}{col 7}{c |}{res}  20{col 13} 377.55520{col 25}  32{col 31}   9.39145{col 43}10632.80497{txt} {res}{col 56} 0.4405{txt}{col 65}{c |}{res}{col 67}Added v18.
    19{txt}{col 7}{c |}{res}  21{col 13} 343.68781{col 25}  33{col 31}  10.21684{col 43}10316.54898{txt} {res}{col 56} 0.4574{txt}{col 65}{c |}{res}{col 67}Added v51.
    20{txt}{col 7}{c |}{res}  22{col 13} 312.85839{col 25}  36{col 31}  11.09671{col 43}10028.06392{txt} {res}{col 56} 0.4731{txt}{col 65}{c |}{res}{col 67}Added v22 v35 v47.
    21{txt}{col 7}{c |}{res}  25{col 13} 235.99284{col 25}  38{col 31}  13.95656{col 43} 9254.93660{txt} {res}{col 56} 0.5144{txt}{col 65}{c |}{res}{col 67}Added v19 v41.
    22{txt}{col 7}{c |}{res}  28{col 13} 178.01223{col 25}  40{col 31}  16.87948{col 43} 8633.72067{txt} {res}{col 56} 0.5476{txt}{col 65}{c |}{res}{col 67}Added v6 v15.
    23{txt}{col 7}{c |}{res}  29{col 13} 162.04421{col 25}  43{col 31}  17.88557{col 43} 8461.46998{txt} {res}{col 56} 0.5572{txt}{col 65}{c |}{res}{col 67}Added v4 v29 v31.
    24{txt}{col 7}{c |}{res}  30{col 13} 147.50855{col 25}  44{col 31}  18.91227{col 43} 8294.55116{txt} {res}{col 56} 0.5661{txt}{col 65}{c |}{res}{col 67}Added v1.
    25{txt}{col 7}{c |}{res}  33{col 13} 111.26747{col 25}  45{col 31}  22.08643{col 43} 7853.19073{txt} {res}{col 56} 0.5897{txt}{col 65}{c |}{res}{col 67}Added v40.
    26{txt}{col 7}{c |}{res}  34{col 13} 101.28657{col 25}  47{col 31}  23.20359{col 43} 7727.30505{txt} {res}{col 56} 0.5966{txt}{col 65}{c |}{res}{col 67}Added v13 v30.
    27{txt}{col 7}{c |}{res}  37{col 13}  76.40168{col 25}  48{col 31}  26.60429{col 43} 7391.98031{txt} {res}{col 56} 0.6146{txt}{col 65}{c |}{res}{col 67}Added v38.
    28{txt}{col 7}{c |}{res}  39{col 13}  63.30970{col 25}  50{col 31}  28.90082{col 43} 7213.81854{txt} {res}{col 56} 0.6243{txt}{col 65}{c |}{res}{col 67}Added v14 v54.
    29{txt}{col 7}{c |}{res}  42{col 13}  47.75527{col 25}  51{col 31}  32.35117{col 43} 6993.93711{txt} {res}{col 56} 0.6361{txt}{col 65}{c |}{res}{col 67}Added v28.
    30{txt}{col 7}{c |}{res}  44{col 13}  39.57206{col 25}  52{col 31}  34.70622{col 43} 6872.62826{txt} {res}{col 56} 0.6426{txt}{col 65}{c |}{res}{col 67}Added v3.
    31{txt}{col 7}{c |}{res}  45{col 13}  36.02237{col 25}  53{col 31}  35.85737{col 43} 6820.09430{txt} {res}{col 56} 0.6456{txt}{col 65}{c |}{res}{col 67}Added v36.
    32{txt}{col 7}{c |}{res}  49{col 13}  24.73472{col 25}  54{col 31}  40.48523{col 43} 6632.29067{txt} {res}{col 56} 0.6557{txt}{col 65}{c |}{res}{col 67}Added v34.
    33{txt}{col 7}{c |}{res}  50{col 13}  22.51597{col 25}  55{col 31}  41.68802{col 43} 6594.27081{txt} {res}{col 56} 0.6578{txt}{col 65}{c |}{res}{col 67}Added v55.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat A = e(betas)
{txt}
{com}. mat LA = e(lambdas)
{txt}
{com}. 
. // estimate with expanded data
. expand freq
{txt}(9,467 observations created)

{com}. lassologit v58 v1-v57, nocons
{res}{txt}Obtaining solution for 50 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
..................................................    50

{res}
{txt}  Knot{c |}  ID     Lambda    s      L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   2{col 13}2049.62463{col 25}   1{col 31}   0.03225{col 43}19279.50542{txt} {res}{col 56}-0.0223{txt}{col 65}{c |}{res}{col 67}Added v25.
     2{txt}{col 7}{c |}{res}   3{col 13}1865.76957{col 25}   2{col 31}   0.07211{col 43}19071.40676{txt} {res}{col 56}-0.0111{txt}{col 65}{c |}{res}{col 67}Added v23.
     3{txt}{col 7}{c |}{res}   4{col 13}1698.40664{col 25}   4{col 31}   0.29051{col 43}18652.22506{txt} {res}{col 56} 0.0114{txt}{col 65}{c |}{res}{col 67}Added v7 v26.
     4{txt}{col 7}{c |}{res}   5{col 13}1546.05647{col 25}   7{col 31}   0.57671{col 43}18180.99515{txt} {res}{col 56} 0.0368{txt}{col 65}{c |}{res}{col 67}Added v27 v37 v53.
     5{txt}{col 7}{c |}{res}   6{col 13}1407.37239{col 25}   8{col 31}   0.95088{col 43}17573.51667{txt} {res}{col 56} 0.0691{txt}{col 65}{c |}{res}{col 67}Added v21.
     6{txt}{col 7}{c |}{res}   7{col 13}1281.12852{col 25}  10{col 31}   1.41016{col 43}16986.00749{txt} {res}{col 56} 0.1006{txt}{col 65}{c |}{res}{col 67}Added v45 v50.
     7{txt}{col 7}{c |}{res}   8{col 13}1166.20896{col 25}  11{col 31}   1.89052{col 43}16389.79594{txt} {res}{col 56} 0.1323{txt}{col 65}{c |}{res}{col 67}Added v46.
     8{txt}{col 7}{c |}{res}   9{col 13}1061.59789{col 25}  12{col 31}   2.38226{col 43}15801.84364{txt} {res}{col 56} 0.1636{txt}{col 65}{c |}{res}{col 67}Added v52.
     9{txt}{col 7}{c |}{res}  10{col 13} 966.37062{col 25}  15{col 31}   2.89222{col 43}15230.45986{txt} {res}{col 56} 0.1944{txt}{col 65}{c |}{res}{col 67}Added v16 v42 v56.
    10{txt}{col 7}{c |}{res}  11{col 13} 879.68542{col 25}  17{col 31}   3.41388{col 43}14657.05059{txt} {res}{col 56} 0.2250{txt}{col 65}{c |}{res}{col 67}Added v24 v33.
    11{txt}{col 7}{c |}{res}  12{col 13} 800.77603{col 25}  20{col 31}   4.00469{col 43}14083.26229{txt} {res}{col 56} 0.2559{txt}{col 65}{c |}{res}{col 67}Added v12 v17 v20.
    12{txt}{col 7}{c |}{res}  13{col 13} 728.94496{col 25}  21{col 31}   4.61784{col 43}13535.79374{txt} {res}{col 56} 0.2851{txt}{col 65}{c |}{res}{col 67}Added v8.
    13{txt}{col 7}{c |}{res}  15{col 13} 604.03498{col 25}  22{col 31}   5.86677{col 43}12568.67828{txt} {res}{col 56} 0.3365{txt}{col 65}{c |}{res}{col 67}Added v44.
    14{txt}{col 7}{c |}{res}  16{col 13} 549.85194{col 25}  23{col 31}   6.50409{col 43}12137.78363{txt} {res}{col 56} 0.3595{txt}{col 65}{c |}{res}{col 67}Added v57.
    15{txt}{col 7}{c |}{res}  17{col 13} 500.52922{col 25}  25{col 31}   7.17326{col 43}11722.46514{txt} {res}{col 56} 0.3818{txt}{col 65}{c |}{res}{col 67}Added v2 v48.
    16{txt}{col 7}{c |}{res}  18{col 13} 455.63084{col 25}  30{col 31}   7.87033{col 43}11343.40366{txt} {res}{col 56} 0.4025{txt}{col 65}{c |}{res}{col 67}Added v5 v9 v11 v39 v49.
    17{txt}{col 7}{c |}{res}  19{col 13} 414.75992{col 25}  31{col 31}   8.62771{col 43}10973.62057{txt} {res}{col 56} 0.4223{txt}{col 65}{c |}{res}{col 67}Added v43.
    18{txt}{col 7}{c |}{res}  20{col 13} 377.55520{col 25}  32{col 31}   9.39145{col 43}10632.80497{txt} {res}{col 56} 0.4405{txt}{col 65}{c |}{res}{col 67}Added v18.
    19{txt}{col 7}{c |}{res}  21{col 13} 343.68781{col 25}  33{col 31}  10.21684{col 43}10316.54898{txt} {res}{col 56} 0.4574{txt}{col 65}{c |}{res}{col 67}Added v51.
    20{txt}{col 7}{c |}{res}  22{col 13} 312.85839{col 25}  36{col 31}  11.09671{col 43}10028.06392{txt} {res}{col 56} 0.4731{txt}{col 65}{c |}{res}{col 67}Added v22 v35 v47.
    21{txt}{col 7}{c |}{res}  25{col 13} 235.99284{col 25}  38{col 31}  13.95656{col 43} 9254.93660{txt} {res}{col 56} 0.5144{txt}{col 65}{c |}{res}{col 67}Added v19 v41.
    22{txt}{col 7}{c |}{res}  28{col 13} 178.01223{col 25}  40{col 31}  16.87948{col 43} 8633.72067{txt} {res}{col 56} 0.5476{txt}{col 65}{c |}{res}{col 67}Added v6 v15.
    23{txt}{col 7}{c |}{res}  29{col 13} 162.04421{col 25}  43{col 31}  17.88557{col 43} 8461.46998{txt} {res}{col 56} 0.5572{txt}{col 65}{c |}{res}{col 67}Added v4 v29 v31.
    24{txt}{col 7}{c |}{res}  30{col 13} 147.50855{col 25}  44{col 31}  18.91227{col 43} 8294.55116{txt} {res}{col 56} 0.5661{txt}{col 65}{c |}{res}{col 67}Added v1.
    25{txt}{col 7}{c |}{res}  33{col 13} 111.26747{col 25}  45{col 31}  22.08643{col 43} 7853.19073{txt} {res}{col 56} 0.5897{txt}{col 65}{c |}{res}{col 67}Added v40.
    26{txt}{col 7}{c |}{res}  34{col 13} 101.28657{col 25}  47{col 31}  23.20359{col 43} 7727.30505{txt} {res}{col 56} 0.5966{txt}{col 65}{c |}{res}{col 67}Added v13 v30.
    27{txt}{col 7}{c |}{res}  37{col 13}  76.40168{col 25}  48{col 31}  26.60429{col 43} 7391.98031{txt} {res}{col 56} 0.6146{txt}{col 65}{c |}{res}{col 67}Added v38.
    28{txt}{col 7}{c |}{res}  39{col 13}  63.30970{col 25}  50{col 31}  28.90082{col 43} 7213.81854{txt} {res}{col 56} 0.6243{txt}{col 65}{c |}{res}{col 67}Added v14 v54.
    29{txt}{col 7}{c |}{res}  42{col 13}  47.75527{col 25}  51{col 31}  32.35117{col 43} 6993.93711{txt} {res}{col 56} 0.6361{txt}{col 65}{c |}{res}{col 67}Added v28.
    30{txt}{col 7}{c |}{res}  44{col 13}  39.57206{col 25}  52{col 31}  34.70622{col 43} 6872.62826{txt} {res}{col 56} 0.6426{txt}{col 65}{c |}{res}{col 67}Added v3.
    31{txt}{col 7}{c |}{res}  45{col 13}  36.02237{col 25}  53{col 31}  35.85737{col 43} 6820.09430{txt} {res}{col 56} 0.6456{txt}{col 65}{c |}{res}{col 67}Added v36.
    32{txt}{col 7}{c |}{res}  49{col 13}  24.73472{col 25}  54{col 31}  40.48523{col 43} 6632.29067{txt} {res}{col 56} 0.6557{txt}{col 65}{c |}{res}{col 67}Added v34.
    33{txt}{col 7}{c |}{res}  50{col 13}  22.51597{col 25}  55{col 31}  41.68802{col 43} 6594.27081{txt} {res}{col 56} 0.6578{txt}{col 65}{c |}{res}{col 67}Added v55.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat B = e(betas)
{txt}
{com}. mat LB = e(lambdas)
{txt}
{com}. 
. assert mreldif(LA,LB)<1e-10
{txt}
{com}. assert mreldif(A,B)<1e-10
{txt}
{com}. 
. ********************************************************************************
. ***  verify aweights                                                                                                             ***
. ********************************************************************************
. 
. $loadspam
{txt}(58 vars, 4,601 obs)

{com}. 
. // aweights / pweights
. // check by setting lambda very small
. // => lasso logit and post-logit should be similar
. set seed 123
{txt}
{com}. gen double wtvar=runiform()
{txt}
{com}. lassologit v58 v1-v10 [aw=wtvar], l(0.000001) tolopt(1e-15) tolzero(1e-15)
{txt}(sum of wgt is     2.3211e+03)
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}      0.7744671      0.7744671
{txt}{space 15}v2 {c |}{col 21}{res}     -0.0626458     -0.0626458
{txt}{space 15}v3 {c |}{col 21}{res}      0.6246121      0.6246121
{txt}{space 15}v4 {c |}{col 21}{res}      3.1963970      3.1963963
{txt}{space 15}v5 {c |}{col 21}{res}      0.6076114      0.6076114
{txt}{space 15}v6 {c |}{col 21}{res}      1.2341420      1.2341420
{txt}{space 15}v7 {c |}{col 21}{res}      5.5779583      5.5779583
{txt}{space 15}v8 {c |}{col 21}{res}      1.8396889      1.8396889
{txt}{space 15}v9 {c |}{col 21}{res}      1.8146473      1.8146473
{txt}{space 14}v10 {c |}{col 21}{res}      0.2954549      0.2954549
{txt}{space 12}_cons {c |}{col 21}{res}     -1.7590782     -1.7590782
{txt}{hline 18}{c BT}{hline 32}

{com}. mat bL=e(beta_dense)
{txt}
{com}. mat bPL=e(beta_post_dense)
{txt}
{com}. assert mreldif(bL,bPL)<0.002
{txt}
{com}. 
. // confirm pw and aw are equivalent
. lassologit v58 v1-v5 [aw=wtvar], l(0.05)
{txt}(sum of wgt is     2.3211e+03)
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}      0.9796408      0.9799240
{txt}{space 15}v2 {c |}{col 21}{res}     -0.0345078     -0.0345423
{txt}{space 15}v3 {c |}{col 21}{res}      0.7029451      0.7030173
{txt}{space 15}v4 {c |}{col 21}{res}      2.9951644      3.0512232
{txt}{space 15}v5 {c |}{col 21}{res}      0.8908860      0.8910039
{txt}{space 12}_cons {c |}{col 21}{res}     -1.0201645     -1.0203550
{txt}{hline 18}{c BT}{hline 32}

{com}. mat bL=e(beta_dense)
{txt}
{com}. mat bPL=e(beta_post_dense)
{txt}
{com}. lassologit v58 v1-v5 [pw=wtvar], l(0.05)
{txt}(sum of wgt is     2.3211e+03)
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}      0.9796408      0.9799240
{txt}{space 15}v2 {c |}{col 21}{res}     -0.0345078     -0.0345423
{txt}{space 15}v3 {c |}{col 21}{res}      0.7029451      0.7030173
{txt}{space 15}v4 {c |}{col 21}{res}      2.9951644      3.0512232
{txt}{space 15}v5 {c |}{col 21}{res}      0.8908860      0.8910039
{txt}{space 12}_cons {c |}{col 21}{res}     -1.0201645     -1.0203550
{txt}{hline 18}{c BT}{hline 32}

{com}. assert mreldif(bL,e(beta_dense))<1e-10
{txt}
{com}. assert mreldif(bPL,e(beta_post_dense))<1e-10
{txt}
{com}. 
. 
{txt}end of do-file

{com}. 
. cap log close
{smcl}
{com}{sf}{ul off}