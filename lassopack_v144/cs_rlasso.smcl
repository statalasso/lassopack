{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}C:\LocalStore\ecomes\Documents\GitHub\lassopack\lassopack_v144\cs_rlasso.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}26 Oct 2024, 12:28:32
{txt}r; t=0.02 12:28:32

{com}. about

{txt}StataNow/SE 18.5 for Windows (64-bit x86-64)
Revision 16 Jul 2024
Copyright 1985-2023 StataCorp LLC

Total physical memory:     {res}   8.00 GB
{txt}Available physical memory: {res}   0.86 GB

{txt}Stata license: {res}100-user network, expiring 14 Jul 2026
{txt}Serial number: {res}401809307946
  {txt}Licensed to: {res}Stata User
               Heriot-Watt University
{txt}r; t=0.00 12:28:32

{com}. which rlasso
{txt}.\rlasso.ado
{res}*! rlasso 1.0.11 29jul2020
*! lassopack package 1.4.4
*! authors aa/cbh/ms
{txt}r; t=0.00 12:28:32

{com}. which lassoutils
{txt}.\lassoutils.ado
{res}*! lassoutils 1.2.07 26Oct2024
*! lassopack package 1.4.4
*! authors aa/cbh/ms
{txt}r; t=0.01 12:28:32

{com}. // original code by CBH, modified to use quad precision etc.; not needed.
. cap noi which lassoShootingCBH
{err}command {bf}lassoShootingCBH{sf} not found as either built-in or ado-file
{txt}r; t=0.01 12:28:32

{com}. cap noi which lassoClusterCBH
{err}command {bf}lassoClusterCBH{sf} not found as either built-in or ado-file
{txt}r; t=0.01 12:28:32

{com}. 
. // Initial checks of rlasso are vs. CBH code.
. // Other checks include equivalences that should hold in theory:
. // 1. Partialling-out vs. unpenalized regressors.
. // 2. Standardization "on the fly" (default) vs. pre-standardization of data.
. // 3. Het-robust loadings vs. cluster-robust loadings with singleton clusters.
. // 4. Fixed effects vs. unpenalized dummies.
. 
. // Currently uses Kiel-McClain 1995 housing/incinerator example dataset.
. // Includes some badly-scaled variables so useful.
. qui bcuse kielmc, clear
{txt}r; t=0.32 12:28:32

{com}. gen lcbd=ln(cbd)
{txt}r; t=0.00 12:28:32

{com}. gen lcbdsq=lcbd^2
{txt}r; t=0.00 12:28:32

{com}. gen byte one=1
{txt}r; t=0.00 12:28:32

{com}. gen n=_n
{txt}r; t=0.00 12:28:32

{com}. gen id=ceil(_n/10)
{txt}r; t=0.00 12:28:32

{com}. 
. 
. ******************************************************************************
. // Check vs. CBH code
. // Note that as of lassoutils 1.1.01 08nov2018 we need to set the c0 option.
. 
. // homoskedastic
. /*
> lassoShootingCBH lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,     ///
>         het(0) verb(0) tolzero(1e-10) tolups(1e-10) ltol(1e-8) maxiter(10000)
> mat CBHbetaL=r(betaL)'
> mat CBHbetaPL=r(betaPL)'
> scalar lambda=r(lambda)
> local s = colsof(CBHbetaL)
> */
. mat CBHbetaL    = .55033459 , .0958016  , .00259465
{txt}r; t=0.00 12:28:32

{com}. mat CBHbetaPL   = .65128713 , .15561146 , .01297576
{txt}r; t=0.00 12:28:32

{com}. scalar lambda   = 144.22858784
{txt}r; t=0.00 12:28:32

{com}. local s = 3
{txt}r; t=0.00 12:28:32

{com}. // Basic
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         lalt corrnum(0) tolzero(1e-10) tolpsi(1e-10) tolopt(1e-8)               ///
>         maxiter(10000) c0(0.55)
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5503346      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.0958016      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0025946      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      6.1608410      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.35 12:28:33

{com}. mat b=e(b)
{txt}r; t=0.00 12:28:33

{com}. mat beta=e(beta)
{txt}r; t=0.00 12:28:33

{com}. mat betaOLS=e(betaOLS)
{txt}r; t=0.00 12:28:33

{com}. assert mreldif(b,beta)<1e-8
{txt}r; t=0.00 12:28:33

{com}. mat beta=beta[1,1..`s']
{txt}r; t=0.00 12:28:33

{com}. mat betaOLS=betaOLS[1,1..`s']
{txt}r; t=0.00 12:28:33

{com}. assert mreldif(beta,CBHbetaL)<1e-8
{txt}r; t=0.00 12:28:33

{com}. assert mreldif(betaOLS,CBHbetaPL)<1e-8
{txt}r; t=0.00 12:28:33

{com}. assert reldif(lambda,e(lambda0))<1e-8
{txt}r; t=0.00 12:28:33

{com}. // Partial-out constant
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         lalt corrnum(0) partial(_cons) tolzero(1e-10) tolpsi(1e-10)             ///
>         tolopt(1e-8) maxiter(10000) c0(0.55)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5503346      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.0958016      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0025946      0.0129758
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}      6.1608410      4.7817721
{txt}{hline 18}{c BT}{hline 32}
r; t=0.05 12:28:33

{com}. mat b=e(b)
{txt}r; t=0.00 12:28:33

{com}. mat beta=e(beta)
{txt}r; t=0.00 12:28:33

{com}. mat betaOLS=e(betaOLS)
{txt}r; t=0.00 12:28:33

{com}. assert mreldif(b,beta)<1e-8
{txt}r; t=0.00 12:28:33

{com}. mat beta=beta[1,1..`s']
{txt}r; t=0.00 12:28:33

{com}. mat betaOLS=betaOLS[1,1..`s']
{txt}r; t=0.00 12:28:33

{com}. assert mreldif(beta,CBHbetaL)<1e-8
{txt}r; t=0.00 12:28:33

{com}. assert mreldif(betaOLS,CBHbetaPL)<1e-8
{txt}r; t=0.00 12:28:33

{com}. assert reldif(lambda,e(lambda0))<1e-8
{txt}r; t=0.00 12:28:33

{com}. // Include unpenalized constant by hand
. // Needs high setting for maxpsiiter
. // Also needs looser tolerance
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc one,   ///
>         lalt corrnum(0) tolzero(1e-10) tolpsi(1e-10) tolopt(1e-8)                       ///
>         maxiter(10000) nocons pnotpen(one) maxpsiiter(10) c0(0.55) psolver(chol)
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5503372      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.0958022      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0025946      0.0129758
{txt}{space 14}one {c |}{helpb rlasso##notpen:*}{col 21}{res}      6.1608162      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.14 12:28:33

{com}. mat b=e(b)
{txt}r; t=0.00 12:28:33

{com}. mat beta=e(beta)
{txt}r; t=0.00 12:28:33

{com}. mat betaOLS=e(betaOLS)
{txt}r; t=0.00 12:28:33

{com}. mat beta=beta[1,1..`s']
{txt}r; t=0.00 12:28:33

{com}. mat betaOLS=betaOLS[1,1..`s']
{txt}r; t=0.00 12:28:33

{com}. assert mreldif(beta,CBHbetaL)<1e-5                      // looser tolerance
{txt}r; t=0.00 12:28:33

{com}. assert mreldif(betaOLS,CBHbetaPL)<1e-8
{txt}r; t=0.00 12:28:33

{com}. assert reldif(lambda,e(lambda0))<1e-8
{txt}r; t=0.00 12:28:33

{com}. 
. ******************************************************************************
. // Check vs. CBH code
. 
. // With controls/pnotpen - note that controls do not appear in CBH X list
. // Needs high setting for maxpsiiter
. 
. // Needs looser tolerance
. /*
> lassoShootingCBH lrprice intst lintst y81ldist lintstsq y81nrinc,       ///
>         het(0) verb(0) tolzero(1e-10) tolups(1e-10) ltol(1e-8) maxiter(10000) controls(larea cbd)
> mat CBHbetaL=r(betaL)'
> mat CBHbetaPL=r(betaPL)'
> scalar lambda=r(lambda)
> local s = colsof(CBHbetaL)
> */
. mat CBHbetaL    = .04572585 , .00175637
{txt}r; t=0.00 12:28:33

{com}. mat CBHbetaPL   = .20415454 , .01272592
{txt}r; t=0.00 12:28:33

{com}. scalar lambda   = 140.55736231
{txt}r; t=0.00 12:28:33

{com}. local s = 2
{txt}r; t=0.00 12:28:33

{com}. // pnotpen
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         lalt corrnum(0) partial(_cons) tolzero(1e-10) tolpsi(1e-10)             ///
>         tolopt(1e-8) maxiter(10000) maxpsiiter(10) pnotpen(larea cbd)   ///
>         c0(0.55)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.7112231      0.6458100
{txt}{space 14}cbd {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.0000069     -0.0000046
{txt}{space 11}lintst {c |}{col 21}{res}      0.0457258      0.2041545
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0017564      0.0127259
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}      5.3072922      4.4373393
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.02 12:28:33

{com}. mat b=e(b)
{txt}r; t=0.00 12:28:33

{com}. mat beta=e(beta)
{txt}r; t=0.00 12:28:33

{com}. mat betaOLS=e(betaOLS)
{txt}r; t=0.00 12:28:33

{com}. assert mreldif(b,beta)<1e-8
{txt}r; t=0.00 12:28:33

{com}. // trim
. mat beta=beta[1,3..4]
{txt}r; t=0.00 12:28:33

{com}. mat betaOLS=betaOLS[1,3..4]
{txt}r; t=0.00 12:28:33

{com}. local s = colsof(CBHbetaL) 
{txt}r; t=0.00 12:28:33

{com}. forvalues i=1/`s' {c -(}
{txt}  2{com}.         assert reldif(CBHbetaL[1,`i'],beta[1,`i'])<1e-6
{txt}  3{com}.         assert reldif(CBHbetaPL[1,`i'],betaOLS[1,`i'])<1e-6
{txt}  4{com}. {c )-}
{txt}r; t=0.00 12:28:33

{com}. assert reldif(lambda,e(lambda0))<1e-8
{txt}r; t=0.00 12:28:33

{com}. // partial
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         lalt corrnum(0) tolzero(1e-10) tolpsi(1e-10) tolopt(1e-8)               ///
>         maxiter(10000) maxpsiiter(10) partial(larea cbd)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 11}lintst {c |}{col 21}{res}      0.0457259      0.2041545
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0017564      0.0127259
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.7112231      0.6458100
{txt}{space 14}cbd {c |}{col 21}{res}      0.0000069     -0.0000046
{txt}{space 12}_cons {c |}{col 21}{res}      5.3072922      4.4373393
{txt}{hline 18}{c BT}{hline 32}
r; t=5.97 12:28:39

{com}. mat b=e(b)
{txt}r; t=0.00 12:28:39

{com}. mat beta=e(beta)
{txt}r; t=0.00 12:28:39

{com}. mat betaOLS=e(betaOLS)
{txt}r; t=0.00 12:28:39

{com}. assert mreldif(b,beta)<1e-8
{txt}r; t=0.00 12:28:39

{com}. // trim
. mat beta=beta[1,1..2]
{txt}r; t=0.00 12:28:39

{com}. mat betaOLS=betaOLS[1,1..2]
{txt}r; t=0.00 12:28:39

{com}. local s = colsof(CBHbetaL) 
{txt}r; t=0.00 12:28:39

{com}. forvalues i=1/`s' {c -(}
{txt}  2{com}.         assert reldif(CBHbetaL[1,`i'],beta[1,`i'])<1e-8
{txt}  3{com}.         assert reldif(CBHbetaPL[1,`i'],betaOLS[1,`i'])<1e-8
{txt}  4{com}. {c )-}
{txt}r; t=0.00 12:28:39

{com}. assert reldif(lambda,e(lambda0))<1e-8
{txt}r; t=0.00 12:28:39

{com}. 
. ******************************************************************************
. // Check vs CBH code
. 
. // heteroskedastic
. /*
> lassoShootingCBH lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,     ///
>         het(1) verb(0) tolzero(1e-10) tolups(1e-10) ltol(1e-8) maxiter(10000)
> mat CBHbetaL=r(betaL)'
> mat CBHbetaPL=r(betaPL)'
> scalar lambda=r(lambda)
> local s = colsof(CBHbetaL)
> */
. mat CBHbetaL    = .52823835 , .09894578 , .0030307
{txt}r; t=0.00 12:28:39

{com}. mat CBHbetaPL   = .65128713 , .15561146 , .01297576
{txt}r; t=0.00 12:28:39

{com}. scalar lambda   = 144.22858784
{txt}r; t=0.00 12:28:39

{com}. local s = 3
{txt}r; t=0.00 12:28:39

{com}. // Basic
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         rob lalt corrnum(0) tolzero(1e-10) tolpsi(1e-10) tolopt(1e-8)   ///
>         maxiter(10000) c0(0.55)
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5282384      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.0989458      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0030307      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      6.2970092      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.01 12:28:39

{com}. mat b=e(b)
{txt}r; t=0.00 12:28:39

{com}. mat beta=e(beta)
{txt}r; t=0.00 12:28:39

{com}. mat betaOLS=e(betaOLS)
{txt}r; t=0.00 12:28:39

{com}. assert mreldif(b,beta)<1e-8
{txt}r; t=0.00 12:28:39

{com}. forvalues i=1/`s' {c -(}
{txt}  2{com}.         assert reldif(CBHbetaL[1,`i'],beta[1,`i'])<1e-8
{txt}  3{com}.         assert reldif(CBHbetaPL[1,`i'],betaOLS[1,`i'])<1e-8
{txt}  4{com}. {c )-}
{txt}r; t=0.00 12:28:39

{com}. assert reldif(lambda,e(lambda0))<1e-8
{txt}r; t=0.00 12:28:39

{com}. // partial-out cons
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         rob lalt corrnum(0) partial(_cons) tolzero(1e-10) tolpsi(1e-10) tolopt(1e-8) maxiter(10000) c0(0.55)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5282384      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.0989458      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0030307      0.0129758
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}      6.2970092      4.7817721
{txt}{hline 18}{c BT}{hline 32}
r; t=0.01 12:28:39

{com}. mat b=e(b)
{txt}r; t=0.00 12:28:39

{com}. mat beta=e(beta)
{txt}r; t=0.00 12:28:39

{com}. mat betaOLS=e(betaOLS)
{txt}r; t=0.00 12:28:39

{com}. assert mreldif(b,beta)<1e-8
{txt}r; t=0.00 12:28:39

{com}. local s = colsof(CBHbetaL) 
{txt}r; t=0.00 12:28:39

{com}. forvalues i=1/`s' {c -(}
{txt}  2{com}.         assert reldif(CBHbetaL[1,`i'],beta[1,`i'])<1e-8
{txt}  3{com}.         assert reldif(CBHbetaPL[1,`i'],betaOLS[1,`i'])<1e-8
{txt}  4{com}. {c )-}
{txt}r; t=0.00 12:28:39

{com}. assert reldif(lambda,e(lambda0))<1e-8
{txt}r; t=0.00 12:28:39

{com}. 
. // With controls/pnotpen - note that controls do not appear in CBH X list
. /*
> lassoShootingCBH lrprice intst lintst y81ldist lintstsq y81nrinc,       ///
>         het(1) verb(0) tolzero(1e-10) tolups(1e-10) ltol(1e-8) maxiter(10000) controls(larea cbd)
> mat CBHbetaL=r(betaL)'
> mat CBHbetaPL=r(betaPL)'
> scalar lambda=r(lambda)
> */
. mat CBHbetaL    = .01229867 , .00161341
{txt}r; t=0.00 12:28:39

{com}. mat CBHbetaPL   = .20415454 , .01272592
{txt}r; t=0.00 12:28:39

{com}. scalar lambda   = 140.55736231
{txt}r; t=0.00 12:28:39

{com}. local s = 2
{txt}r; t=0.00 12:28:39

{com}. // pnotpen
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         rob lalt corrnum(0) partial(_cons) tolzero(1e-10) tolpsi(1e-10) tolopt(1e-8) maxiter(10000) pnotpen(larea cbd) c0(0.55)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.7193864      0.6458100
{txt}{space 14}cbd {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.0000095     -0.0000046
{txt}{space 11}lintst {c |}{col 21}{res}      0.0122987      0.2041545
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0016134      0.0127259
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}      5.5227424      4.4373393
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.02 12:28:39

{com}. mat b=e(b)
{txt}r; t=0.00 12:28:39

{com}. mat beta=e(beta)
{txt}r; t=0.00 12:28:39

{com}. mat betaOLS=e(betaOLS)
{txt}r; t=0.00 12:28:39

{com}. assert mreldif(b,beta)<1e-8
{txt}r; t=0.00 12:28:39

{com}. // trim
. mat beta=beta[1,3..4]
{txt}r; t=0.00 12:28:39

{com}. mat betaOLS=betaOLS[1,3..4]
{txt}r; t=0.00 12:28:39

{com}. forvalues i=1/`s' {c -(}
{txt}  2{com}.         assert reldif(CBHbetaL[1,`i'],beta[1,`i'])<1e-6
{txt}  3{com}.         assert reldif(CBHbetaPL[1,`i'],betaOLS[1,`i'])<1e-6
{txt}  4{com}. {c )-}
{txt}r; t=0.00 12:28:39

{com}. assert reldif(lambda,e(lambda0))<1e-8
{txt}r; t=0.00 12:28:39

{com}. // partial
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         rob lalt corrnum(0) tolzero(1e-10) tolpsi(1e-10) tolopt(1e-8) maxiter(10000) partial(larea cbd) c0(0.55)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 11}lintst {c |}{col 21}{res}      0.0122987      0.2041545
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0016134      0.0127259
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.7193863      0.6458100
{txt}{space 14}cbd {c |}{col 21}{res}      0.0000095     -0.0000046
{txt}{space 12}_cons {c |}{col 21}{res}      5.5227424      4.4373393
{txt}{hline 18}{c BT}{hline 32}
r; t=0.03 12:28:39

{com}. mat b=e(b)
{txt}r; t=0.00 12:28:39

{com}. mat beta=e(beta)
{txt}r; t=0.00 12:28:39

{com}. mat betaOLS=e(betaOLS)
{txt}r; t=0.00 12:28:39

{com}. assert mreldif(b,beta)<1e-8
{txt}r; t=0.00 12:28:39

{com}. // trim
. mat beta=beta[1,1..2]
{txt}r; t=0.00 12:28:39

{com}. mat betaOLS=betaOLS[1,1..2]
{txt}r; t=0.00 12:28:39

{com}. local s = colsof(CBHbetaL) 
{txt}r; t=0.00 12:28:39

{com}. forvalues i=1/`s' {c -(}
{txt}  2{com}.         assert reldif(CBHbetaL[1,`i'],beta[1,`i'])<1e-8
{txt}  3{com}.         assert reldif(CBHbetaPL[1,`i'],betaOLS[1,`i'])<1e-8
{txt}  4{com}. {c )-}
{txt}r; t=0.00 12:28:39

{com}. assert reldif(lambda,e(lambda0))<1e-8
{txt}r; t=0.00 12:28:39

{com}. 
. ********************** CLUSTER *********************************
. // Check vs CBH code
. // Update 4 Apr 2018:
. //   CBH cluster code lambda = 2.2*sqrt(nclust)*invnorm(1-(.1/log(nclust))/(2p))
. //   JBES paper and updated rlasso use 2,2*sqrt(n)*invnorm,
. //   i.e., same as standard lasso. Comparisons with CBH lambda commented out.
. 
. // clustering (note no lalt required)
. // note center and maxupsiter are required to match CBH code
. /*
> lassoClusterCBH lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,      ///
>         cluster(age) verb(0) tolzero(1e-10) tolups(1e-10) ltol(1e-8) maxiter(10000)
> mat CBHbetaL=r(betaL)'
> mat CBHbetaPL=r(betaPL)'
> scalar lambda=r(lambda)
> */
. mat CBHbetaL    = .46261782 , .11510062
{txt}r; t=0.00 12:28:39

{com}. mat CBHbetaPL   = .68488126 , .15090246
{txt}r; t=0.00 12:28:39

{com}. scalar lambda   = 50.21173664
{txt}r; t=0.00 12:28:39

{com}. local s = 2
{txt}r; t=0.00 12:28:39

{com}. // Basic
. // need nclust1 option to replicate CBH
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         cluster(age) center corrnum(0) nclust1                                                  ///
>         tolzero(1e-10) tolpsi(1e-10) tolopt(1e-8)                                               ///
>         maxiter(10000) maxpsiiter(10) c0(0.55)
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.4626178      0.6848813
{txt}{space 11}lintst {c |}{col 21}{res}      0.1151006      0.1509025
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      6.6555486      4.6275416
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.06 12:28:39

{com}. mat b=e(b)
{txt}r; t=0.00 12:28:39

{com}. mat beta=e(beta)
{txt}r; t=0.00 12:28:39

{com}. mat betaOLS=e(betaOLS)
{txt}r; t=0.00 12:28:39

{com}. assert mreldif(b,beta)<1e-8
{txt}r; t=0.00 12:28:39

{com}. forvalues i=1/`s' {c -(}
{txt}  2{com}.         assert reldif(CBHbetaL[1,`i'],beta[1,`i'])<1e-8
{txt}  3{com}.         assert reldif(CBHbetaPL[1,`i'],betaOLS[1,`i'])<1e-8
{txt}  4{com}. {c )-}
{txt}r; t=0.00 12:28:39

{com}. // assert reldif(lambda,e(lambda0))<1e-8
. // partial-out cons
. // need nclust1 option to replicate CBH
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         cluster(age) center corrnum(0) nclust1                                                  ///
>         partial(_cons) tolzero(1e-10) tolpsi(1e-10) tolopt(1e-8)                ///
>         maxiter(10000) maxpsiiter(10) c0(0.55)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.4626178      0.6848813
{txt}{space 11}lintst {c |}{col 21}{res}      0.1151006      0.1509025
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}      6.6555486      4.6275416
{txt}{hline 18}{c BT}{hline 32}
r; t=0.05 12:28:39

{com}. mat b=e(b)
{txt}r; t=0.00 12:28:39

{com}. mat beta=e(beta)
{txt}r; t=0.00 12:28:39

{com}. mat betaOLS=e(betaOLS)
{txt}r; t=0.00 12:28:39

{com}. assert mreldif(b,beta)<1e-8
{txt}r; t=0.00 12:28:39

{com}. forvalues i=1/`s' {c -(}
{txt}  2{com}.         assert reldif(CBHbetaL[1,`i'],beta[1,`i'])<1e-8
{txt}  3{com}.         assert reldif(CBHbetaPL[1,`i'],betaOLS[1,`i'])<1e-8
{txt}  4{com}. {c )-}
{txt}r; t=0.00 12:28:39

{com}. // assert reldif(lambda,e(lambda0))<1e-8
. 
. // With controls/pnotpen - note that controls do not appear in CBH X list
. /*
> lassoClusterCBH lrprice intst lintst y81ldist lintstsq y81nrinc,        ///
>         cluster(age) verb(0) tolzero(1e-10) tolups(1e-10) ltol(1e-8) maxiter(10000) controls(larea cbd)
> mat CBHbetaL=r(betaL)'
> mat CBHbetaPL=r(betaPL)'
> scalar lambda=r(lambda)
> */
. mat CBHbetaL    = .00552125 , .00301795
{txt}r; t=0.00 12:28:39

{com}. mat CBHbetaPL   = .01283716 , .01236437
{txt}r; t=0.00 12:28:39

{com}. scalar lambda   = 48.38313172
{txt}r; t=0.00 12:28:39

{com}. local s = 2
{txt}r; t=0.00 12:28:39

{com}. // pnotpen
. // need nclust1 option to replicate CBH
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         cluster(age) center corrnum(0) nclust1                                                  ///
>         tolzero(1e-10) tolpsi(1e-10) tolopt(1e-8) maxiter(10000)                ///
>         pnotpen(larea cbd) maxpsiiter(10) c0(0.55)
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.7003866      0.6450951
{txt}{space 14}cbd {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.0000063     -0.0000065
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0055212      0.0128372
{txt}{space 9}lintstsq {c |}{col 21}{res}      0.0030180      0.0123644
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      5.5434560      5.2894131
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.02 12:28:39

{com}. mat b=e(b)
{txt}r; t=0.00 12:28:39

{com}. mat beta=e(beta)
{txt}r; t=0.00 12:28:39

{com}. mat betaOLS=e(betaOLS)
{txt}r; t=0.00 12:28:39

{com}. assert mreldif(b,beta)<1e-8
{txt}r; t=0.00 12:28:39

{com}. // trim
. mat beta=beta[1,3..4]
{txt}r; t=0.00 12:28:39

{com}. mat betaOLS=betaOLS[1,3..4]
{txt}r; t=0.00 12:28:39

{com}. forvalues i=1/`s' {c -(}
{txt}  2{com}.         assert reldif(CBHbetaL[1,`i'],beta[1,`i'])<1e-6
{txt}  3{com}.         assert reldif(CBHbetaPL[1,`i'],betaOLS[1,`i'])<1e-6
{txt}  4{com}. {c )-}
{txt}r; t=0.00 12:28:39

{com}. // assert reldif(lambda,e(lambda0))<1e-8
. // partial
. // need nclust1 option to replicate CBH
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         cluster(age) center corrnum(0) nclust1                                                  ///
>         tolzero(1e-10) tolpsi(1e-10) tolopt(1e-8) maxiter(10000)                ///
>         partial(larea cbd) maxpsiiter(10) c0(0.55)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 9}y81ldist {c |}{col 21}{res}      0.0055212      0.0128372
{txt}{space 9}lintstsq {c |}{col 21}{res}      0.0030180      0.0123644
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.7003866      0.6450951
{txt}{space 14}cbd {c |}{col 21}{res}      0.0000063     -0.0000065
{txt}{space 12}_cons {c |}{col 21}{res}      5.5434559      5.2894131
{txt}{hline 18}{c BT}{hline 32}
r; t=0.03 12:28:39

{com}. mat b=e(b)
{txt}r; t=0.00 12:28:39

{com}. mat beta=e(beta)
{txt}r; t=0.00 12:28:39

{com}. mat betaOLS=e(betaOLS)
{txt}r; t=0.00 12:28:39

{com}. assert mreldif(b,beta)<1e-8
{txt}r; t=0.00 12:28:39

{com}. // trim
. mat beta=beta[1,1..2]
{txt}r; t=0.00 12:28:39

{com}. mat betaOLS=betaOLS[1,1..2]
{txt}r; t=0.00 12:28:39

{com}. forvalues i=1/`s' {c -(}
{txt}  2{com}.         assert reldif(CBHbetaL[1,`i'],beta[1,`i'])<1e-8
{txt}  3{com}.         assert reldif(CBHbetaPL[1,`i'],betaOLS[1,`i'])<1e-8
{txt}  4{com}. {c )-}
{txt}r; t=0.00 12:28:39

{com}. // assert reldif(lambda,e(lambda0))<1e-8
. 
. 
. ********************** CLUSTER+FE *********************************
. // Check vs. CBH code.
. 
. xtset age

{txt}{col 1}Panel variable: {res}age{txt} (unbalanced)
r; t=0.00 12:28:39

{com}. // clustering (note no lalt required) + fixed effects
. // note center and maxpsiiter are required to match CBH code
. /*
> lassoClusterCBH lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,      ///
>         cluster(age) fix(age) verb(0) tolzero(1e-10) tolups(1e-10) ltol(1e-8) maxiter(10000)
> mat CBHbetaL=r(betaL)'
> mat CBHbetaPL=r(betaPL)'
> scalar lambda=r(lambda)
> */
. mat CBHbetaL    = .38441642 , .00767435
{txt}r; t=0.00 12:28:39

{com}. mat CBHbetaPL   = .53696874 , .01285201
{txt}r; t=0.00 12:28:39

{com}. scalar lambda   = 50.21173664
{txt}r; t=0.00 12:28:39

{com}. local s = 2
{txt}r; t=0.00 12:28:39

{com}. // Basic
. // need nclust1 option to replicate CBH
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         cluster(age) fe center corrnum(0) nclust1                                               ///
>         tolzero(1e-10) tolpsi(1e-10) tolopt(1e-8)                                               ///
>         maxiter(10000) maxpsiiter(10) c0(0.55)
{txt}(sorting by xtset panelvar age)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.3844164      0.5369687
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0076744      0.0128520
{txt}{hline 18}{c BT}{hline 32}
r; t=0.95 12:28:40

{com}. mat b=e(b)
{txt}r; t=0.00 12:28:40

{com}. mat beta=e(beta)
{txt}r; t=0.00 12:28:40

{com}. mat betaOLS=e(betaOLS)
{txt}r; t=0.00 12:28:40

{com}. assert mreldif(b,beta)<1e-8
{txt}r; t=0.00 12:28:40

{com}. forvalues i=1/`s' {c -(}
{txt}  2{com}.         assert reldif(CBHbetaL[1,`i'],beta[1,`i'])<1e-8
{txt}  3{com}.         assert reldif(CBHbetaPL[1,`i'],betaOLS[1,`i'])<1e-8
{txt}  4{com}. {c )-}
{txt}r; t=0.00 12:28:40

{com}. // assert reldif(lambda,e(lambda0))<1e-8
. 
. // With controls/pnotpen - note that controls do not appear in CBH X list
. /*
> lassoClusterCBH lrprice intst lintst y81ldist lintstsq y81nrinc,        ///
>         cluster(age) fix(age) verb(0) tolzero(1e-10) tolups(1e-10) ltol(1e-8) maxiter(10000) controls(larea cbd)
> mat CBHbetaL=r(betaL)'
> mat CBHbetaPL=r(betaPL)'
> scalar lambda=r(lambda)
> */
. mat CBHbetaL    = .00308359
{txt}r; t=0.00 12:28:40

{com}. mat CBHbetaPL   = .01266582
{txt}r; t=0.00 12:28:40

{com}. scalar lambda   = 48.38313172
{txt}r; t=0.00 12:28:40

{com}. local s = 1
{txt}r; t=0.00 12:28:40

{com}. // pnotpen
. // need nclust1 option to replicate CBH
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         cluster(age) fe center corrnum(0) nclust1                                               ///
>         tolzero(1e-10) tolpsi(1e-10) tolopt(1e-8) maxiter(10000)                ///
>         pnotpen(larea cbd) maxpsiiter(10) c0(0.55)
{txt}(sorting by xtset panelvar age)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.5719870      0.5368213
{txt}{space 14}cbd {c |}{helpb rlasso##notpen:*}{col 21}{res}     -0.0000016     -0.0000007
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0030836      0.0126658
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.02 12:28:40

{com}. mat b=e(b)
{txt}r; t=0.00 12:28:40

{com}. mat beta=e(beta)
{txt}r; t=0.00 12:28:40

{com}. mat betaOLS=e(betaOLS)
{txt}r; t=0.00 12:28:40

{com}. assert mreldif(b,beta)<1e-8
{txt}r; t=0.00 12:28:40

{com}. // trim
. mat beta=beta[1,3..3]
{txt}r; t=0.00 12:28:40

{com}. mat betaOLS=betaOLS[1,3..3]
{txt}r; t=0.00 12:28:40

{com}. forvalues i=1/`s' {c -(}
{txt}  2{com}.         assert reldif(CBHbetaL[1,`i'],beta[1,`i'])<1e-6
{txt}  3{com}.         assert reldif(CBHbetaPL[1,`i'],betaOLS[1,`i'])<1e-6
{txt}  4{com}. {c )-}
{txt}r; t=0.00 12:28:40

{com}. // assert reldif(lambda,e(lambda0))<1e-8
. // partial
. // need nclust1 option to replicate CBH
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         cluster(age) fe center corrnum(0) nclust1                                               ///
>         tolzero(1e-10) tolpsi(1e-10) tolopt(1e-8) maxiter(10000)                ///
>         partial(larea cbd) maxpsiiter(10) c0(0.55)
{txt}(sorting by xtset panelvar age)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 9}y81ldist {c |}{col 21}{res}      0.0030836      0.0126658
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5719870      0.5368213
{txt}{space 14}cbd {c |}{col 21}{res}     -0.0000016     -0.0000007
{txt}{hline 18}{c BT}{hline 32}
r; t=0.04 12:28:40

{com}. mat b=e(b)
{txt}r; t=0.00 12:28:40

{com}. mat beta=e(beta)
{txt}r; t=0.00 12:28:40

{com}. mat betaOLS=e(betaOLS)
{txt}r; t=0.00 12:28:40

{com}. assert mreldif(b,beta)<1e-8
{txt}r; t=0.00 12:28:40

{com}. // trim
. mat beta=beta[1,1..1]
{txt}r; t=0.00 12:28:40

{com}. mat betaOLS=betaOLS[1,1..1]
{txt}r; t=0.00 12:28:40

{com}. forvalues i=1/`s' {c -(}
{txt}  2{com}.         assert reldif(CBHbetaL[1,`i'],beta[1,`i'])<1e-8
{txt}  3{com}.         assert reldif(CBHbetaPL[1,`i'],betaOLS[1,`i'])<1e-8
{txt}  4{com}. {c )-}
{txt}r; t=0.00 12:28:40

{com}. // assert reldif(lambda,e(lambda0))<1e-8
. 
. ***************************************************************
. // Equivalence check
. 
. // Robust vs. singleton clusters - should match
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         rob tolzero(1e-10) tolpsi(1e-10) tolopt(1e-8) maxiter(10000) maxpsiiter(10)
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5495169      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1087449      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0047505      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      6.0349821      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.01 12:28:40

{com}. savedresults save rob e()
{txt}r; t=0.01 12:28:40

{com}. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         cluster(n) tolzero(1e-10) tolpsi(1e-10) tolopt(1e-8) maxiter(10000) maxpsiiter(10)
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5495169      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1087449      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0047505      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      6.0349821      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.01 12:28:40

{com}. savedresults comp rob e(), exclude(macro: cmdline robust cluster)  tol(1e-8)
{txt}r; t=0.00 12:28:40

{com}. 
. // center option
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         rob center tolzero(1e-10) tolpsi(1e-10) tolopt(1e-8) maxiter(10000) maxpsiiter(10)
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5495169      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1087449      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0047505      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      6.0349821      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.01 12:28:40

{com}. savedresults save rob e()
{txt}r; t=0.00 12:28:40

{com}. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         cluster(n) center tolzero(1e-10) tolpsi(1e-10) tolopt(1e-8) maxiter(10000) maxpsiiter(10)
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5495169      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1087449      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0047505      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      6.0349821      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.02 12:28:40

{com}. savedresults comp rob e(), exclude(macro: cmdline robust cluster)  tol(1e-8)
{txt}r; t=0.00 12:28:40

{com}. 
. // partial and pnotpen
. // with constant
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         partial(lintst y81ldist)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5116156      0.6512871
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 11}lintst {c |}{col 21}{res}      0.1733954      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0145826      0.0129758
{txt}{space 12}_cons {c |}{col 21}{res}      5.6673104      4.7817721
{txt}{hline 18}{c BT}{hline 32}
r; t=0.02 12:28:40

{com}. savedresults save partial e()
{txt}r; t=0.00 12:28:40

{com}. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         pnotpen(lintst y81ldist)
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5116156      0.6512871
{txt}{space 11}lintst {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.1733954      0.1556115
{txt}{space 9}y81ldist {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.0145826      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      5.6673104      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.03 12:28:40

{com}. savedresults comp partial e(), exclude(                                                         ///
>                 macro: cmdline pnotpen partial varXmodel                                        ///
>                 scalar: niter pminus pnotpen_ct partial_ct r2                           ///
>                 matrix: betaAll betaAllOLS Psi ePsi sPsi                                        /// order/components differ
>                 )  tol(1e-8)
{txt}r; t=0.00 12:28:40

{com}. // with constant + prestd
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         partial(lintst y81ldist) prestd
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5116156      0.6512871
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 11}lintst {c |}{col 21}{res}      0.1733954      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0145826      0.0129758
{txt}{space 12}_cons {c |}{col 21}{res}      5.6673104      4.7817721
{txt}{hline 18}{c BT}{hline 32}
r; t=0.02 12:28:40

{com}. savedresults save partial e()
{txt}r; t=0.00 12:28:40

{com}. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         pnotpen(lintst y81ldist) prestd
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5116156      0.6512871
{txt}{space 11}lintst {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.1733954      0.1556115
{txt}{space 9}y81ldist {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.0145826      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      5.6673104      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.02 12:28:40

{com}. savedresults comp partial e(), exclude(                                                         ///
>                 macro: cmdline pnotpen partial varXmodel                                        ///
>                 scalar: niter pminus pnotpen_ct partial_ct r2                           ///
>                 matrix: betaAll betaAllOLS Psi ePsi sPsi                                        /// order/components differ
>                 )  tol(1e-8)
{txt}r; t=0.00 12:28:40

{com}. // with constant + sqrt
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         partial(lintst y81ldist) sqrt
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}      Sqrt-lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5093104      0.6512871
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 11}lintst {c |}{col 21}{res}      0.1736889      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0146091      0.0129758
{txt}{space 12}_cons {c |}{col 21}{res}      5.6819256      4.7817721
{txt}{hline 18}{c BT}{hline 32}
r; t=0.03 12:28:40

{com}. savedresults save partial e()
{txt}r; t=0.00 12:28:40

{com}. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         pnotpen(lintst y81ldist) sqrt
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}      Sqrt-lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5093104      0.6512871
{txt}{space 11}lintst {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.1736889      0.1556115
{txt}{space 9}y81ldist {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.0146091      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      5.6819256      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.04 12:28:40

{com}. savedresults comp partial e(), exclude(                                                         ///
>                 macro: cmdline pnotpen partial varXmodel                                        ///
>                 scalar: niter pminus pnotpen_ct partial_ct r2                           ///
>                 matrix: betaAll betaAllOLS Psi ePsi sPsi                                        /// order/components differ
>                 )  tol(1e-8)
{txt}r; t=0.00 12:28:40

{com}. // nocons - need an easier minimization
. rlasso lrprice nbh rooms baths y81 nearinc y81nrinc,                            ///
>         partial(nearinc y81nrinc) nocons
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 14}nbh {c |}{col 21}{res}      0.0150455      0.0688260
{txt}{space 12}rooms {c |}{col 21}{res}      1.5564775      1.5416549
{txt}{space 12}baths {c |}{col 21}{res}      0.0378460      0.0916800
{txt}{space 14}y81 {c |}{col 21}{res}      0.4460697      0.6927288
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 10}nearinc {c |}{col 21}{res}      1.4407318      1.2871243
{txt}{space 9}y81nrinc {c |}{col 21}{res}     -0.4910026     -0.7296275
{txt}{hline 18}{c BT}{hline 32}
r; t=0.03 12:28:40

{com}. savedresults save partial e()
{txt}r; t=0.00 12:28:40

{com}. rlasso lrprice nbh rooms baths y81 nearinc y81nrinc,                            ///
>         pnotpen(nearinc y81nrinc) nocons
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 14}nbh {c |}{col 21}{res}      0.0150455      0.0688260
{txt}{space 12}rooms {c |}{col 21}{res}      1.5564775      1.5416549
{txt}{space 12}baths {c |}{col 21}{res}      0.0378460      0.0916800
{txt}{space 14}y81 {c |}{col 21}{res}      0.4460697      0.6927288
{txt}{space 10}nearinc {c |}{helpb rlasso##notpen:*}{col 21}{res}      1.4407318      1.2871243
{txt}{space 9}y81nrinc {c |}{helpb rlasso##notpen:*}{col 21}{res}     -0.4910026     -0.7296275
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.02 12:28:41

{com}. savedresults comp partial e(), exclude(                                                         ///
>                 macro: cmdline pnotpen partial varXmodel                                        ///
>                 scalar: niter pminus pnotpen_ct partial_ct r2                           ///
>                 matrix: betaAll betaAllOLS Psi ePsi sPsi                                        /// order/components differ
>                 )  tol(1e-8)
{txt}r; t=0.00 12:28:41

{com}. // nocons + prestd
. rlasso lrprice nbh rooms baths y81 nearinc y81nrinc,                            ///
>         partial(nearinc y81nrinc) nocons prestd
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 14}nbh {c |}{col 21}{res}      0.0150455      0.0688260
{txt}{space 12}rooms {c |}{col 21}{res}      1.5564775      1.5416549
{txt}{space 12}baths {c |}{col 21}{res}      0.0378460      0.0916800
{txt}{space 14}y81 {c |}{col 21}{res}      0.4460697      0.6927288
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 10}nearinc {c |}{col 21}{res}      1.4407318      1.2871243
{txt}{space 9}y81nrinc {c |}{col 21}{res}     -0.4910026     -0.7296275
{txt}{hline 18}{c BT}{hline 32}
r; t=0.03 12:28:41

{com}. savedresults save partial e()
{txt}r; t=0.00 12:28:41

{com}. rlasso lrprice nbh rooms baths y81 nearinc y81nrinc,                            ///
>         pnotpen(nearinc y81nrinc) nocons prestd
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 14}nbh {c |}{col 21}{res}      0.0150455      0.0688260
{txt}{space 12}rooms {c |}{col 21}{res}      1.5564775      1.5416549
{txt}{space 12}baths {c |}{col 21}{res}      0.0378460      0.0916800
{txt}{space 14}y81 {c |}{col 21}{res}      0.4460697      0.6927288
{txt}{space 10}nearinc {c |}{helpb rlasso##notpen:*}{col 21}{res}      1.4407318      1.2871243
{txt}{space 9}y81nrinc {c |}{helpb rlasso##notpen:*}{col 21}{res}     -0.4910026     -0.7296275
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.02 12:28:41

{com}. savedresults comp partial e(), exclude(                                                         ///
>                 macro: cmdline pnotpen partial varXmodel                                        ///
>                 scalar: niter pminus pnotpen_ct partial_ct r2                           ///
>                 matrix: betaAll betaAllOLS Psi ePsi sPsi                                        /// order/components differ
>                 )  tol(1e-8)
{txt}r; t=0.00 12:28:41

{com}. // nocons + sqrt
. rlasso lrprice nbh rooms baths y81 nearinc y81nrinc,                            ///
>         partial(nearinc y81nrinc) nocons sqrt
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}      Sqrt-lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 14}nbh {c |}{col 21}{res}      0.0137579      0.0688260
{txt}{space 12}rooms {c |}{col 21}{res}      1.5568323      1.5416549
{txt}{space 12}baths {c |}{col 21}{res}      0.0365571      0.0916800
{txt}{space 14}y81 {c |}{col 21}{res}      0.4401644      0.6927288
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 10}nearinc {c |}{col 21}{res}      1.4444094      1.2871243
{txt}{space 9}y81nrinc {c |}{col 21}{res}     -0.4852896     -0.7296275
{txt}{hline 18}{c BT}{hline 32}
r; t=0.08 12:28:41

{com}. savedresults save partial e()
{txt}r; t=0.00 12:28:41

{com}. rlasso lrprice nbh rooms baths y81 nearinc y81nrinc,                            ///
>         pnotpen(nearinc y81nrinc) nocons sqrt
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}      Sqrt-lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 14}nbh {c |}{col 21}{res}      0.0137579      0.0688260
{txt}{space 12}rooms {c |}{col 21}{res}      1.5568323      1.5416549
{txt}{space 12}baths {c |}{col 21}{res}      0.0365571      0.0916800
{txt}{space 14}y81 {c |}{col 21}{res}      0.4401644      0.6927288
{txt}{space 10}nearinc {c |}{helpb rlasso##notpen:*}{col 21}{res}      1.4444094      1.2871243
{txt}{space 9}y81nrinc {c |}{helpb rlasso##notpen:*}{col 21}{res}     -0.4852896     -0.7296275
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.10 12:28:41

{com}. savedresults comp partial e(), exclude(                                                         ///
>                 macro: cmdline pnotpen partial varXmodel                                        ///
>                 scalar: niter pminus pnotpen_ct partial_ct r2                           ///
>                 matrix: betaAll betaAllOLS Psi ePsi sPsi                                        /// order/components differ
>                 )  tol(1e-8)
{txt}r; t=0.00 12:28:41

{com}. 
. // psolver option
. rlasso lrprice nbh rooms baths y81 nearinc y81nrinc,                            ///
>         partial(nearinc y81nrinc)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}rooms {c |}{col 21}{res}      0.0292232      0.0653731
{txt}{space 12}baths {c |}{col 21}{res}      0.2635702      0.2964328
{txt}{space 14}y81 {c |}{col 21}{res}      0.0735169      0.1718676
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 10}nearinc {c |}{col 21}{res}     -0.1888857     -0.0938656
{txt}{space 9}y81nrinc {c |}{col 21}{res}      0.0620594     -0.0393664
{txt}{space 12}_cons {c |}{col 21}{res}     10.4685177     10.0942764
{txt}{hline 18}{c BT}{hline 32}
r; t=0.02 12:28:41

{com}. savedresults save partial e()
{txt}r; t=0.00 12:28:41

{com}. // default solver is qrxx = QR+quadcross
. foreach solver in svd svdxx qr lu luxx chol {c -(}
{txt}  2{com}.         rlasso lrprice nbh rooms baths y81 nearinc y81nrinc,                    ///
>                 partial(nearinc y81nrinc) psolver(`solver')
{txt}  3{com}.         savedresults comp partial e(), exclude(                                                 ///
>                 macro: cmdline                                                                                          ///
>                         )  tol(1e-8)
{txt}  4{com}. {c )-}
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}rooms {c |}{col 21}{res}      0.0292232      0.0653731
{txt}{space 12}baths {c |}{col 21}{res}      0.2635702      0.2964328
{txt}{space 14}y81 {c |}{col 21}{res}      0.0735169      0.1718676
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 10}nearinc {c |}{col 21}{res}     -0.1888857     -0.0938656
{txt}{space 9}y81nrinc {c |}{col 21}{res}      0.0620594     -0.0393664
{txt}{space 12}_cons {c |}{col 21}{res}     10.4685177     10.0942764
{txt}{hline 18}{c BT}{hline 32}
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}rooms {c |}{col 21}{res}      0.0292232      0.0653731
{txt}{space 12}baths {c |}{col 21}{res}      0.2635702      0.2964328
{txt}{space 14}y81 {c |}{col 21}{res}      0.0735169      0.1718676
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 10}nearinc {c |}{col 21}{res}     -0.1888857     -0.0938656
{txt}{space 9}y81nrinc {c |}{col 21}{res}      0.0620594     -0.0393664
{txt}{space 12}_cons {c |}{col 21}{res}     10.4685177     10.0942764
{txt}{hline 18}{c BT}{hline 32}
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}rooms {c |}{col 21}{res}      0.0292232      0.0653731
{txt}{space 12}baths {c |}{col 21}{res}      0.2635702      0.2964328
{txt}{space 14}y81 {c |}{col 21}{res}      0.0735169      0.1718676
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 10}nearinc {c |}{col 21}{res}     -0.1888857     -0.0938656
{txt}{space 9}y81nrinc {c |}{col 21}{res}      0.0620594     -0.0393664
{txt}{space 12}_cons {c |}{col 21}{res}     10.4685177     10.0942764
{txt}{hline 18}{c BT}{hline 32}
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}rooms {c |}{col 21}{res}      0.0292232      0.0653731
{txt}{space 12}baths {c |}{col 21}{res}      0.2635702      0.2964328
{txt}{space 14}y81 {c |}{col 21}{res}      0.0735169      0.1718676
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 10}nearinc {c |}{col 21}{res}     -0.1888857     -0.0938656
{txt}{space 9}y81nrinc {c |}{col 21}{res}      0.0620594     -0.0393664
{txt}{space 12}_cons {c |}{col 21}{res}     10.4685177     10.0942764
{txt}{hline 18}{c BT}{hline 32}
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}rooms {c |}{col 21}{res}      0.0292232      0.0653731
{txt}{space 12}baths {c |}{col 21}{res}      0.2635702      0.2964328
{txt}{space 14}y81 {c |}{col 21}{res}      0.0735169      0.1718676
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 10}nearinc {c |}{col 21}{res}     -0.1888857     -0.0938656
{txt}{space 9}y81nrinc {c |}{col 21}{res}      0.0620594     -0.0393664
{txt}{space 12}_cons {c |}{col 21}{res}     10.4685177     10.0942764
{txt}{hline 18}{c BT}{hline 32}
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}rooms {c |}{col 21}{res}      0.0292232      0.0653731
{txt}{space 12}baths {c |}{col 21}{res}      0.2635702      0.2964328
{txt}{space 14}y81 {c |}{col 21}{res}      0.0735169      0.1718676
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 10}nearinc {c |}{col 21}{res}     -0.1888857     -0.0938656
{txt}{space 9}y81nrinc {c |}{col 21}{res}      0.0620594     -0.0393664
{txt}{space 12}_cons {c |}{col 21}{res}     10.4685177     10.0942764
{txt}{hline 18}{c BT}{hline 32}
r; t=0.19 12:28:41

{com}. 
. ********************** FE ONLY *********************************
. // Equivalence check
. 
. // fe vs. explicit dummies
. xtset age

{txt}{col 1}Panel variable: {res}age{txt} (unbalanced)
r; t=0.00 12:28:41

{com}. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         fe tolzero(1e-10) tolpsi(1e-10) tolopt(1e-8) maxiter(10000) maxpsiiter(10)
{txt}(sorting by xtset panelvar age)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.4188396      0.5369687
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0057321      0.0128520
{txt}{hline 18}{c BT}{hline 32}
r; t=0.01 12:28:41

{com}. mat b=e(b)
{txt}r; t=0.00 12:28:41

{com}. mat beta=e(beta)
{txt}r; t=0.00 12:28:41

{com}. mat betaOLS=e(betaOLS)
{txt}r; t=0.00 12:28:41

{com}. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc i.age, ///
>         partial(i.age) tolzero(1e-10) tolpsi(1e-10) tolopt(1e-8) maxiter(10000) maxpsiiter(10)
{res}{text}Warning: reduced rank encountered when partialling out (may be caused by omitted vars).
Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.4188396      0.5369687
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0057321      0.0128520
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 17} {c |}
{space 14}age {c |}
{space 15}0  {c |}{col 21}      (omitted)      (omitted)
{space 15}1  {c |}{col 21}{res}     -0.1074253     -0.0757639
{txt}{space 15}2  {c |}{col 21}{res}     -0.1620694     -0.1650689
{txt}{space 15}3  {c |}{col 21}{res}     -0.2466746     -0.2043496
{txt}{space 15}4  {c |}{col 21}{res}     -0.0639881     -0.0205436
{txt}{space 15}5  {c |}{col 21}{res}     -0.1138763     -0.0620101
{txt}{space 15}6  {c |}{col 21}{res}     -0.1444857     -0.1641423
{txt}{space 15}7  {c |}{col 21}{res}     -0.1698061     -0.1580507
{txt}{space 15}8  {c |}{col 21}{res}     -0.0562016     -0.0259286
{txt}{space 15}9  {c |}{col 21}{res}     -0.0324962      0.0379956
{txt}{space 14}10  {c |}{col 21}{res}     -0.1192847     -0.0697881
{txt}{space 14}11  {c |}{col 21}{res}     -0.2754333     -0.2125293
{txt}{space 14}12  {c |}{col 21}{res}     -0.1213177     -0.0726461
{txt}{space 14}13  {c |}{col 21}{res}     -0.2318380     -0.1785931
{txt}{space 14}14  {c |}{col 21}{res}     -0.2532146     -0.1606708
{txt}{space 14}15  {c |}{col 21}{res}     -0.3913400     -0.3146402
{txt}{space 14}16  {c |}{col 21}{res}     -0.2509969     -0.2372362
{txt}{space 14}17  {c |}{col 21}{res}     -0.1955477     -0.2203558
{txt}{space 14}18  {c |}{col 21}{res}     -0.3228346     -0.2247184
{txt}{space 14}19  {c |}{col 21}{res}     -0.2938447     -0.2590578
{txt}{space 14}20  {c |}{col 21}{res}     -0.1768026     -0.1417986
{txt}{space 14}21  {c |}{col 21}{res}     -0.5189102     -0.4425419
{txt}{space 14}22  {c |}{col 21}{res}     -0.3357346     -0.2426813
{txt}{space 14}23  {c |}{col 21}{res}     -0.2430005     -0.2075176
{txt}{space 14}24  {c |}{col 21}{res}     -0.3315197     -0.2929506
{txt}{space 14}25  {c |}{col 21}{res}     -0.6068101     -0.5375448
{txt}{space 14}26  {c |}{col 21}{res}     -0.2531357     -0.2009325
{txt}{space 14}28  {c |}{col 21}{res}     -0.5178013     -0.4167807
{txt}{space 14}29  {c |}{col 21}{res}     -0.4020205     -0.3838838
{txt}{space 14}30  {c |}{col 21}{res}     -0.2277585     -0.1231172
{txt}{space 14}31  {c |}{col 21}{res}     -0.5358766     -0.5437240
{txt}{space 14}32  {c |}{col 21}{res}     -0.3932134     -0.2811164
{txt}{space 14}33  {c |}{col 21}{res}     -0.5157354     -0.4156201
{txt}{space 14}36  {c |}{col 21}{res}     -0.4310962     -0.4028292
{txt}{space 14}38  {c |}{col 21}{res}     -0.5276451     -0.4835454
{txt}{space 14}39  {c |}{col 21}{res}     -0.4023266     -0.3749707
{txt}{space 14}41  {c |}{col 21}{res}     -0.5531938     -0.4814310
{txt}{space 14}42  {c |}{col 21}{res}     -0.3480954     -0.2659741
{txt}{space 14}48  {c |}{col 21}{res}     -0.5651149     -0.4815839
{txt}{space 14}51  {c |}{col 21}{res}     -0.6866603     -0.6321052
{txt}{space 14}54  {c |}{col 21}{res}     -0.3140009     -0.1628040
{txt}{space 14}56  {c |}{col 21}{res}     -0.7393784     -0.6890353
{txt}{space 14}58  {c |}{col 21}{res}     -0.3905766     -0.2762806
{txt}{space 14}59  {c |}{col 21}{res}     -0.6218065     -0.6176855
{txt}{space 14}65  {c |}{col 21}{res}     -0.5446228     -0.5759021
{txt}{space 14}68  {c |}{col 21}{res}     -0.6144933     -0.5480469
{txt}{space 14}70  {c |}{col 21}{res}     -0.5421796     -0.5077154
{txt}{space 14}71  {c |}{col 21}{res}     -0.7987981     -0.7774028
{txt}{space 14}78  {c |}{col 21}{res}     -0.7194524     -0.6192860
{txt}{space 14}81  {c |}{col 21}{res}     -0.6661622     -0.6576958
{txt}{space 14}83  {c |}{col 21}{res}     -0.9562909     -0.9290052
{txt}{space 13}104  {c |}{col 21}{res}     -0.7892082     -0.7602831
{txt}{space 13}121  {c |}{col 21}{res}     -0.5842908     -0.5680719
{txt}{space 13}128  {c |}{col 21}{res}     -0.9758364     -0.9358631
{txt}{space 13}131  {c |}{col 21}{res}     -0.3348417     -0.4219250
{txt}{space 13}148  {c |}{col 21}{res}     -0.9369465     -0.8412708
{txt}{space 13}153  {c |}{col 21}{res}     -0.2163358     -0.2330860
{txt}{space 13}158  {c |}{col 21}{res}      0.1272742      0.1433503
{txt}{space 13}178  {c |}{col 21}{res}     -0.2742254     -0.1996289
{txt}{space 13}188  {c |}{col 21}{res}     -0.6151410     -0.5871642
{txt}{space 13}189  {c |}{col 21}{res}      0.2967434      0.2454967
{txt}{space 17} {c |}
{space 12}_cons {c |}{col 21}{res}      8.2575448      7.3008346
{txt}{hline 18}{c BT}{hline 32}
r; t=0.09 12:28:41

{com}. mat btemp=(el(e(b),1,1), el(e(b),1,2))
{txt}r; t=0.00 12:28:41

{com}. assert mreldif(b,btemp)<1e-8
{txt}r; t=0.00 12:28:41

{com}. mat btemp=(el(e(beta),1,1), el(e(beta),1,2))
{txt}r; t=0.00 12:28:41

{com}. assert mreldif(beta,btemp)<1e-8
{txt}r; t=0.00 12:28:41

{com}. mat btemp=(el(e(betaOLS),1,1), el(e(betaOLS),1,2))
{txt}r; t=0.00 12:28:41

{com}. assert mreldif(betaOLS,btemp)<1e-8
{txt}r; t=0.00 12:28:41

{com}. 
. // Controls vs pnotpen
. xtset age

{txt}{col 1}Panel variable: {res}age{txt} (unbalanced)
r; t=0.00 12:28:41

{com}. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         fe partial(larea cbd) tolzero(1e-10) tolpsi(1e-10) tolopt(1e-8)
{txt}(sorting by xtset panelvar age)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 9}y81ldist {c |}{col 21}{res}      0.0038551      0.0126658
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5691556      0.5368213
{txt}{space 14}cbd {c |}{col 21}{res}     -0.0000015     -0.0000007
{txt}{hline 18}{c BT}{hline 32}
r; t=0.04 12:28:41

{com}. mat b=e(b)
{txt}r; t=0.00 12:28:41

{com}. mat beta=e(beta)
{txt}r; t=0.00 12:28:41

{com}. mat betaOLS=e(betaOLS)
{txt}r; t=0.00 12:28:41

{com}. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc,       ///
>         fe pnotpen(larea cbd) tolzero(1e-10) tolpsi(1e-10) tolopt(1e-8)
{txt}(sorting by xtset panelvar age)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.5691556      0.5368213
{txt}{space 14}cbd {c |}{helpb rlasso##notpen:*}{col 21}{res}     -0.0000015     -0.0000007
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0038551      0.0126658
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.01 12:28:41

{com}. mat btemp=e(b)
{txt}r; t=0.00 12:28:41

{com}. assert reldif(b[1,1],btemp[1,3])<1e-8
{txt}r; t=0.00 12:28:41

{com}. assert reldif(b[1,2],btemp[1,1])<1e-8
{txt}r; t=0.00 12:28:41

{com}. assert reldif(b[1,3],btemp[1,2])<1e-8
{txt}r; t=0.00 12:28:41

{com}. mat btemp=e(beta)
{txt}r; t=0.00 12:28:41

{com}. assert reldif(beta[1,1],btemp[1,3])<1e-8
{txt}r; t=0.00 12:28:41

{com}. assert reldif(beta[1,2],btemp[1,1])<1e-8
{txt}r; t=0.00 12:28:41

{com}. assert reldif(beta[1,3],btemp[1,2])<1e-8
{txt}r; t=0.00 12:28:41

{com}. mat btemp=e(betaOLS)
{txt}r; t=0.00 12:28:41

{com}. assert reldif(betaOLS[1,1],btemp[1,3])<1e-8
{txt}r; t=0.00 12:28:41

{com}. assert reldif(betaOLS[1,2],btemp[1,1])<1e-8
{txt}r; t=0.00 12:28:41

{com}. assert reldif(betaOLS[1,3],btemp[1,2])<1e-8
{txt}r; t=0.00 12:28:41

{com}. 
. // noftools option
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc, fe
{txt}(sorting by xtset panelvar age)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.4188396      0.5369687
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0057321      0.0128520
{txt}{hline 18}{c BT}{hline 32}
r; t=0.01 12:28:41

{com}. savedresults save ftools e()
{txt}r; t=0.00 12:28:41

{com}. cap noi assert "`e(noftools)'"==""  // will be error if ftools not installed
{txt}r; t=0.00 12:28:41

{com}. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc, fe noftools
{txt}(sorting by xtset panelvar age)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.4188396      0.5369687
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0057321      0.0128520
{txt}{hline 18}{c BT}{hline 32}
r; t=0.02 12:28:41

{com}. assert "`e(noftools)'"=="noftools"
{txt}r; t=0.00 12:28:41

{com}. savedresults comp ftools e(), exclude(macro: cmdline) tol(1e-10)
{txt}r; t=0.00 12:28:41

{com}. 
. ********************** Standardization **************************
. 
. foreach opt in " " "sqrt" {c -(}
{txt}  2{com}.         rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc, rob `opt'
{txt}  3{com}.         savedresults save nostd e()
{txt}  4{com}.         rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc, prestd rob `opt'
{txt}  5{com}.         savedresults comp nostd e(), exclude(macro: cmdline scalar: niter matrix: Psi) tol(1e-8)
{txt}  6{com}. 
.         rlasso lrprice larea lintst y81ldist lintstsq y81nrinc, rob `opt' pnotpen(larea lintst)
{txt}  7{com}.         savedresults save nostd e()
{txt}  8{com}.         rlasso lrprice larea lintst y81ldist lintstsq y81nrinc, prestd rob `opt' pnotpen(larea lintst)
{txt}  9{com}.         savedresults comp nostd e(), exclude(macro: cmdline scalar: niter matrix: Psi) tol(1e-8)
{txt} 10{com}. 
.         rlasso lrprice larea lintst y81ldist lintstsq y81nrinc, rob `opt' partial(larea lintst)
{txt} 11{com}.         savedresults save nostd e()
{txt} 12{com}.         rlasso lrprice larea lintst y81ldist lintstsq y81nrinc, prestd rob `opt' partial(larea lintst)
{txt} 13{com}.         savedresults comp nostd e(), exclude(macro: cmdline scalar: niter matrix: Psi) tol(1e-8)
{txt} 14{com}. 
.         // note that some coefs have been removed to make it easier for sqrt-lasso
.         xtset id
{txt} 15{com}.         rlasso lrprice larea lintst y81ldist, rob `opt' fe
{txt} 16{com}.         savedresults save nostd e()
{txt} 17{com}.         rlasso lrprice larea lintst y81ldist, prestd rob `opt' fe
{txt} 18{com}.         savedresults comp nostd e(), exclude(macro: cmdline scalar: niter matrix: Psi) tol(1e-8)
{txt} 19{com}. 
.         xtset id
{txt} 20{com}.         rlasso lrprice larea lintst y81ldist, rob `opt' fe pnotpen(larea)
{txt} 21{com}.         savedresults save nostd e()
{txt} 22{com}.         rlasso lrprice larea lintst y81ldist, prestd rob `opt' fe pnotpen(larea)
{txt} 23{com}.         savedresults comp nostd e(), exclude(macro: cmdline scalar: niter matrix: Psi) tol(1e-8)
{txt} 24{com}. 
.         xtset id
{txt} 25{com}.         rlasso lrprice larea lintst y81ldist, rob `opt' fe partial(larea)
{txt} 26{com}.         savedresults save nostd e()
{txt} 27{com}.         rlasso lrprice larea lintst y81ldist, prestd rob `opt' fe partial(larea)
{txt} 28{com}.         savedresults comp nostd e(), exclude(macro: cmdline scalar: niter matrix: Psi) tol(1e-8)
{txt} 29{com}. {c )-}
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5495169      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1087449      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0047505      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      6.0349821      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5495169      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1087449      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0047505      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      6.0349821      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.6743944      0.6512871
{txt}{space 11}lintst {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.1523724      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0040506      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      4.6756870      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.6743944      0.6512871
{txt}{space 11}lintst {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.1523724      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0040506      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      4.6756870      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 9}y81ldist {c |}{col 21}{res}      0.0040506      0.0129758
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.6743944      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1523724      0.1556115
{txt}{space 12}_cons {c |}{col 21}{res}      4.6756870      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 9}y81ldist {c |}{col 21}{res}      0.0040506      0.0129758
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.6743944      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1523724      0.1556115
{txt}{space 12}_cons {c |}{col 21}{res}      4.6756870      4.7817721
{txt}{hline 18}{c BT}{hline 32}

{col 1}Panel variable: {res}id{txt} (unbalanced)
(sorting by xtset panelvar id)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.4339910      0.5869142
{txt}{space 11}lintst {c |}{col 21}{res}      0.0586900      0.1640386
{txt}{hline 18}{c BT}{hline 32}
(sorting by xtset panelvar id)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.4339910      0.5869142
{txt}{space 11}lintst {c |}{col 21}{res}      0.0586900      0.1640386
{txt}{hline 18}{c BT}{hline 32}

{col 1}Panel variable: {res}id{txt} (unbalanced)
(sorting by xtset panelvar id)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.6049295      0.5869142
{txt}{space 11}lintst {c |}{col 21}{res}      0.0487458      0.1640386
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
(sorting by xtset panelvar id)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.6049295      0.5869142
{txt}{space 11}lintst {c |}{col 21}{res}      0.0487458      0.1640386
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}

{col 1}Panel variable: {res}id{txt} (unbalanced)
(sorting by xtset panelvar id)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 11}lintst {c |}{col 21}{res}      0.0487458      0.1640386
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.6049295      0.5869142
{txt}{hline 18}{c BT}{hline 32}
(sorting by xtset panelvar id)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 11}lintst {c |}{col 21}{res}      0.0487458      0.1640386
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.6049295      0.5869142
{txt}{hline 18}{c BT}{hline 32}
Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}      Sqrt-lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5454463      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1062146      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0042061      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      6.0922598      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}      Sqrt-lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5454463      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1062146      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0042061      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      6.0922598      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}      Sqrt-lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.6747441      0.6512871
{txt}{space 11}lintst {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.1523234      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0039155      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      4.6740813      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}      Sqrt-lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.6747441      0.6512871
{txt}{space 11}lintst {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.1523234      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0039155      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      4.6740813      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}      Sqrt-lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 9}y81ldist {c |}{col 21}{res}      0.0039155      0.0129758
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.6747441      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1523234      0.1556115
{txt}{space 12}_cons {c |}{col 21}{res}      4.6740813      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}      Sqrt-lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 9}y81ldist {c |}{col 21}{res}      0.0039155      0.0129758
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.6747441      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1523234      0.1556115
{txt}{space 12}_cons {c |}{col 21}{res}      4.6740813      4.7817721
{txt}{hline 18}{c BT}{hline 32}

{col 1}Panel variable: {res}id{txt} (unbalanced)
(sorting by xtset panelvar id)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}      Sqrt-lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.4279098      0.5869142
{txt}{space 11}lintst {c |}{col 21}{res}      0.0545007      0.1640386
{txt}{hline 18}{c BT}{hline 32}
(sorting by xtset panelvar id)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}      Sqrt-lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.4279098      0.5869142
{txt}{space 11}lintst {c |}{col 21}{res}      0.0545007      0.1640386
{txt}{hline 18}{c BT}{hline 32}

{col 1}Panel variable: {res}id{txt} (unbalanced)
(sorting by xtset panelvar id)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}      Sqrt-lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.6052398      0.5869142
{txt}{space 11}lintst {c |}{col 21}{res}      0.0467594      0.1640386
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
(sorting by xtset panelvar id)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}      Sqrt-lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{helpb rlasso##notpen:*}{col 21}{res}      0.6052398      0.5869142
{txt}{space 11}lintst {c |}{col 21}{res}      0.0467594      0.1640386
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}

{col 1}Panel variable: {res}id{txt} (unbalanced)
(sorting by xtset panelvar id)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}      Sqrt-lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 11}lintst {c |}{col 21}{res}      0.0467594      0.1640386
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.6052398      0.5869142
{txt}{hline 18}{c BT}{hline 32}
(sorting by xtset panelvar id)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}      Sqrt-lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 11}lintst {c |}{col 21}{res}      0.0467594      0.1640386
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.6052398      0.5869142
{txt}{hline 18}{c BT}{hline 32}
r; t=0.76 12:28:42

{com}. 
. ********************** Misc options **************************
. 
. // Confirm these don't crash it and that post-lasso is the same.
. // Lasso est may differ because of slightly different lambda.
. mat betaOLS     = .65128713 , .15561146 , .01297576 , 4.7817721
{txt}r; t=0.00 12:28:42

{com}. foreach opt in  tolopt(1e-8) tolpsi(1e-3) tolzero(1e-3) ///
>                                 maxiter(1000) maxpsiiter(5)                             ///
>                                 lassopsi corrn(3) corrn(0)                              ///
>                                 c(1.05) gamma(0.05) gammad(1)                   ///
>                                 {c -(}
{txt}  2{com}.         di "opt=`opt'"
{txt}  3{com}.         rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc, `opt' rob
{txt}  4{com}.         assert mreldif(betaOLS,e(betaOLS))<1e-8
{txt}  5{com}. {c )-}
opt=tolopt(1e-8)
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5495169      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1087449      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0047505      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      6.0349821      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
opt=tolpsi(1e-3)
Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5495169      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1087449      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0047505      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      6.0349821      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
opt=tolzero(1e-3)
Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5495169      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1087449      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0047505      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      6.0349821      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
opt=maxiter(1000)
Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5495169      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1087449      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0047505      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      6.0349821      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
opt=maxpsiiter(5)
Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5495169      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1087449      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0047505      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      6.0349821      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
opt=lassopsi
Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5528697      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1076152      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0043384      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      6.0220098      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
opt=corrn(3)
Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5495169      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1087449      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0047505      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      6.0349821      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
opt=corrn(0)
Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5495169      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1087449      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0047505      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      6.0349821      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
opt=c(1.05)
Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5541429      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1108752      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0051244      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      5.9780180      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
opt=gamma(0.05)
Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5608241      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1139520      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0056643      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      5.8957444      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
opt=gammad(1)
Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5688986      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1176704      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0063169      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      5.7963143      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.12 12:28:42

{com}. 
. // xdep option - standard lasso
. // NB: update of values for lassoutils 1.1.01 8nov2018
. // benchmark - homoskedastic, no xdep
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5677921      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1061444      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0043898      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      5.9223612      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.01 12:28:42

{com}. mat betaOLS = e(betaOLS)
{txt}r; t=0.00 12:28:42

{com}. // xdep, homoskedastic
. // uses multiplier bootstrap so set seed for replicability
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc, xdep seed(1)
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5711901      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1081575      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0047392      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      5.8759434      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.73 12:28:43

{com}. assert mreldif(betaOLS,e(betaOLS))<1e-8
{txt}r; t=0.00 12:28:43

{com}. assert reldif(e(lambda0),114.432846013)<1e-8
{txt}r; t=0.00 12:28:43

{com}. assert reldif(el(e(beta),1,1),0.571190061895)<1e-8
{txt}r; t=0.00 12:28:43

{com}. // benchmark - heteroskedastic, no xdep
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc, rob
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5495169      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1087449      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0047505      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      6.0349821      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.01 12:28:43

{com}. mat betaOLS = e(betaOLS)
{txt}r; t=0.00 12:28:43

{com}. // xdep, heteroskedastic
. // uses multiplier bootstrap so set seed for replicability
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc, xdep rob seed(1)
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5549289      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1112372      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0051879      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      5.9683382      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.74 12:28:44

{com}. assert mreldif(betaOLS,e(betaOLS))<1e-8
{txt}r; t=0.00 12:28:44

{com}. assert reldif(e(lambda0),112.94387827)<1e-8
{txt}r; t=0.00 12:28:44

{com}. assert reldif(el(e(beta),1,1),0.554928934936)<1e-8
{txt}r; t=0.00 12:28:44

{com}. // benchmark - cluster, no xdep
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc, cluster(id)
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5679360      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.0994303      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0028173      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      5.9917497      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.01 12:28:44

{com}. mat betaOLS = e(betaOLS)
{txt}r; t=0.00 12:28:44

{com}. // xdep, cluster
. // uses multiplier bootstrap so set seed for replicability
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc, xdep cluster(id) seed(1)
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5715880      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1018919      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0032624      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      5.9387351      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=3.16 12:28:47

{com}. assert mreldif(betaOLS,e(betaOLS))<1e-8
{txt}r; t=0.00 12:28:47

{com}. assert reldif(e(lambda0),108.22341837697)<1e-8
{txt}r; t=0.00 12:28:47

{com}. assert reldif(el(e(beta),1,1),0.571588016862)<1e-8
{txt}r; t=0.00 12:28:47

{com}. 
. // xdep option - sqrt-lasso
. // NB: introduced with update of lassoutils 1.1.01 8nov2018
. // benchmark - homoskedastic, no xdep
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc, sqrt
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}      Sqrt-lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5641933      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1040122      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0040198      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      5.9715237      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.02 12:28:47

{com}. mat betaOLS = e(betaOLS)
{txt}r; t=0.00 12:28:47

{com}. // xdep, homoskedastic
. // uses multiplier bootstrap so set seed for replicability
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc, xdep seed(1) sqrt
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}      Sqrt-lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5682010      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1063866      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0044319      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      5.9167762      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.42 12:28:47

{com}. assert mreldif(betaOLS,e(betaOLS))<1e-8
{txt}r; t=0.00 12:28:47

{com}. assert reldif(e(lambda0),57.107312563841)<1e-8
{txt}r; t=0.00 12:28:47

{com}. assert reldif(el(e(beta),1,1),0.568200965628)<1e-8
{txt}r; t=0.00 12:28:47

{com}. // benchmark - heteroskedastic, no xdep
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc, rob sqrt
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}      Sqrt-lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5454463      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1062146      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0042061      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      6.0922598      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.03 12:28:47

{com}. mat betaOLS = e(betaOLS)
{txt}r; t=0.00 12:28:47

{com}. // xdep, heteroskedastic
. // uses multiplier bootstrap so set seed for replicability
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc, xdep rob seed(1) sqrt
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}      Sqrt-lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5540276      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1102196      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0049171      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      5.9860081      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.44 12:28:48

{com}. assert mreldif(betaOLS,e(betaOLS))<1e-8
{txt}r; t=0.00 12:28:48

{com}. assert reldif(e(lambda0),55.179713611581)<1e-8
{txt}r; t=0.00 12:28:48

{com}. assert reldif(el(e(beta),1,1),0.554027632301)<1e-8
{txt}r; t=0.00 12:28:48

{com}. // benchmark - cluster, no xdep
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc, cluster(id) sqrt
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}      Sqrt-lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5633576      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.0963444      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0022593      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      6.0582127      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.03 12:28:48

{com}. mat betaOLS = e(betaOLS)
{txt}r; t=0.00 12:28:48

{com}. // xdep, cluster
. // uses multiplier bootstrap so set seed for replicability
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc, xdep cluster(id) seed(1) sqrt
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}      Sqrt-lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5713229      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1017132      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0032301      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      5.9425831      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=1.66 12:28:49

{com}. assert mreldif(betaOLS,e(betaOLS))<1e-8
{txt}r; t=0.00 12:28:49

{com}. assert reldif(e(lambda0),51.922234705643)<1e-8
{txt}r; t=0.00 12:28:49

{com}. assert reldif(el(e(beta),1,1),0.571322946179)<1e-8
{txt}r; t=0.00 12:28:49

{com}. 
. // supscore option
. // uses multiplier bootstrap so set seed for replicability
. // update for lassoutils 1.1.01 8nov2018 - now sqrt(n)*L instead of n*L
. // set seed for null
. set seed 1
{txt}r; t=0.00 12:28:49

{com}. gen double ynull=rnormal()
{txt}r; t=0.00 12:28:49

{com}. // homoskedastic
. rlasso ynull cbd intst lintst y81ldist lintstsq y81nrinc, testonly seed(1)

{txt}{help rlasso##supscore:Sup-score} test H0: beta=0
CCK sup-score statistic{col 25}{res}  1.73{txt}{col 32}p-value={col 39}{res} 0.242
{txt}CCK {res}5{txt}% critical value{res}{col 25}  2.90{col 32}{txt}(asympt bound)
r; t=0.04 12:28:49

{com}. assert reldif(e(supscore),1.7293626410)<1e-8
{txt}r; t=0.00 12:28:49

{com}. assert reldif(e(supscore_p),0.242)<1e-8
{txt}r; t=0.00 12:28:49

{com}. assert reldif(e(supscore_cv),2.9020830008)<1e-8
{txt}r; t=0.00 12:28:49

{com}. // critical value for gamma=10%
. rlasso ynull cbd intst lintst y81ldist lintstsq y81nrinc, testonly ssgamma(0.1) seed(1)

{txt}{help rlasso##supscore:Sup-score} test H0: beta=0
CCK sup-score statistic{col 25}{res}  1.73{txt}{col 32}p-value={col 39}{res} 0.242
{txt}CCK {res}10{txt}% critical value{res}{col 25}  2.63{col 32}{txt}(asympt bound)
r; t=0.04 12:28:49

{com}. assert reldif(e(supscore_cv),2.63337777980)<1e-8
{txt}r; t=0.00 12:28:49

{com}. // heteroskedastic
. rlasso ynull cbd intst lintst y81ldist lintstsq y81nrinc, testonly rob seed(1)

{txt}{help rlasso##supscore:Sup-score} test H0: beta=0
CCK sup-score statistic{col 25}{res}  1.74{txt}{col 32}p-value={col 39}{res} 0.238
{txt}CCK {res}5{txt}% critical value{res}{col 25}  2.90{col 32}{txt}(asympt bound)
r; t=0.04 12:28:49

{com}. assert reldif(e(supscore),1.736085668840)<1e-8
{txt}r; t=0.00 12:28:49

{com}. assert reldif(e(supscore_p),0.238)<1e-8
{txt}r; t=0.00 12:28:49

{com}. assert reldif(e(supscore_cv),2.9020830008)<1e-8
{txt}r; t=0.00 12:28:49

{com}. // clustered
. rlasso ynull cbd intst lintst y81ldist lintstsq y81nrinc, testonly cluster(id) seed(1)

{txt}{help rlasso##supscore:Sup-score} test H0: beta=0
CCK sup-score statistic{col 25}{res}  1.83{txt}{col 32}p-value={col 39}{res} 0.218
{txt}CCK {res}5{txt}% critical value{res}{col 25}  2.90{col 32}{txt}(asympt bound)
r; t=0.17 12:28:50

{com}. assert reldif(e(supscore),1.833764450629)<1e-8
{txt}r; t=0.00 12:28:50

{com}. assert reldif(e(supscore_p),0.218)<1e-8
{txt}r; t=0.00 12:28:50

{com}. assert reldif(e(supscore_cv),2.9020830008)<1e-8
{txt}r; t=0.00 12:28:50

{com}. 
. ********************** Prediction *********************
. 
. // loop through options
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5677921      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1061444      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0043898      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      5.9223612      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.01 12:28:50

{com}. foreach option in "xb" "xb lasso" "xb ols" "resid" "resid lasso" "resid ols" {c -(}
{txt}  2{com}.         cap drop newvar
{txt}  3{com}.         di "option=`option'"
{txt}  4{com}.         predict double newvar, `option'
{txt}  5{com}. {c )-}
option=xb
option=xb lasso
option=xb ols
option=resid
option=resid lasso
option=resid ols
{txt}r; t=0.15 12:28:50

{com}. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc, fe
{txt}(sorting by xtset panelvar id)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.4601538      0.5880385
{txt}{space 11}lintst {c |}{col 21}{res}      0.0382092      0.1005835
{txt}{space 9}y81nrinc {c |}{col 21}{res}     -0.0777246     -0.2035076
{txt}{hline 18}{c BT}{hline 32}
r; t=0.01 12:28:50

{com}. foreach option in "ue" "e" {c -(}
{txt}  2{com}.         cap drop newvar
{txt}  3{com}.         di "option=`option'"
{txt}  4{com}.         predict double newvar, `option'
{txt}  5{com}. {c )-}
option=ue
option=e
{res}{txt}r; t=0.01 12:28:50

{com}. // resids should be mean zero
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5677921      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1061444      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0043898      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      5.9223612      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.01 12:28:50

{com}. foreach option in " " "lasso" "ols" {c -(}
{txt}  2{com}.         cap drop resid
{txt}  3{com}.         predict double resid, resid `option'
{txt}  4{com}.         qui sum resid, meanonly
{txt}  5{com}.         assert r(mean)<1e-8
{txt}  6{com}. {c )-}
{txt}r; t=0.00 12:28:50

{com}. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc, fe
{txt}(sorting by xtset panelvar id)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.4601538      0.5880385
{txt}{space 11}lintst {c |}{col 21}{res}      0.0382092      0.1005835
{txt}{space 9}y81nrinc {c |}{col 21}{res}     -0.0777246     -0.2035076
{txt}{hline 18}{c BT}{hline 32}
r; t=0.01 12:28:50

{com}. foreach option in "u" "e" "ue" {c -(}
{txt}  2{com}.         cap drop resid
{txt}  3{com}.         predict double resid, `option'
{txt}  4{com}.         qui sum resid, meanonly
{txt}  5{com}.         assert r(mean)<1e-8
{txt}  6{com}. {c )-}
{res}{txt}r; t=0.02 12:28:50

{com}. // mean of predicted yhat = mean of y
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5677921      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1061444      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0043898      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      5.9223612      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.01 12:28:50

{com}. qui sum lrprice, meanonly
{txt}r; t=0.00 12:28:50

{com}. local ymean `r(mean)'
{txt}r; t=0.00 12:28:50

{com}. foreach option in " " "lasso" "ols" {c -(}
{txt}  2{com}.         cap drop yhat
{txt}  3{com}.         predict double yhat, xb
{txt}  4{com}.         qui sum yhat, meanonly
{txt}  5{com}.         assert r(mean)-`ymean'<1e-8
{txt}  6{com}. {c )-}
{txt}r; t=0.00 12:28:50

{com}. // confirm post-lasso OLS matches regress
. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5677921      0.6512871
{txt}{space 11}lintst {c |}{col 21}{res}      0.1061444      0.1556115
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0043898      0.0129758
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      5.9223612      4.7817721
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.01 12:28:50

{com}. local selected `e(selected)'
{txt}r; t=0.00 12:28:50

{com}. cap drop xb_rlasso
{txt}r; t=0.00 12:28:50

{com}. cap drop resid_rlasso
{txt}r; t=0.00 12:28:50

{com}. predict double xb_rlasso, xb ols
{txt}r; t=0.00 12:28:50

{com}. predict double resid_rlasso, resid ols
{txt}r; t=0.00 12:28:50

{com}. regress lrprice `selected'

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}       321
{txt}{hline 13}{c +}{hline 34}   F(3, 317)       = {res}   148.72
{txt}       Model {c |} {res} 28.1487632         3  9.38292105   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 20.0003795       317   .06309268   {txt}R-squared       ={res}    0.5846
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.5807
{txt}       Total {c |} {res} 48.1491427       320  .150466071   {txt}Root MSE        =   {res} .25118

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}     lrprice{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 7}larea {c |}{col 14}{res}{space 2} .6512871{col 26}{space 2} .0437109{col 37}{space 1}   14.90{col 46}{space 3}0.000{col 54}{space 4} .5652869{col 67}{space 3} .7372874
{txt}{space 6}lintst {c |}{col 14}{res}{space 2} .1556115{col 26}{space 2} .0189057{col 37}{space 1}    8.23{col 46}{space 3}0.000{col 54}{space 4}  .118415{col 67}{space 3} .1928079
{txt}{space 4}y81ldist {c |}{col 14}{res}{space 2} .0129758{col 26}{space 2} .0029138{col 37}{space 1}    4.45{col 46}{space 3}0.000{col 54}{space 4}  .007243{col 67}{space 3} .0187085
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 4.781772{col 26}{space 2} .3263734{col 37}{space 1}   14.65{col 46}{space 3}0.000{col 54}{space 4}  4.13964{col 67}{space 3} 5.423904
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}r; t=3.37 12:28:53

{com}. cap drop xb_regress
{txt}r; t=0.00 12:28:53

{com}. cap drop resid_regress
{txt}r; t=0.00 12:28:53

{com}. predict double xb_regress, xb
{txt}r; t=0.02 12:28:53

{com}. predict double resid_regress, resid
{txt}r; t=0.00 12:28:53

{com}. assert reldif(xb_rlasso,xb_regress) < 1e-6
{txt}r; t=0.00 12:28:53

{com}. assert reldif(resid_rlasso,resid_regress) < 1e-6
{txt}r; t=0.00 12:28:53

{com}. // confirm post-lasso LSDV matches xtreg,fe
. foreach opt in xb u e ue xbu {c -(}
{txt}  2{com}.         cap drop `opt'hat_rlasso
{txt}  3{com}.         cap drop `opt'hat_xtreg
{txt}  4{com}. {c )-}
{txt}r; t=0.00 12:28:53

{com}. rlasso lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc, fe
{txt}(sorting by xtset panelvar id)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.4601538      0.5880385
{txt}{space 11}lintst {c |}{col 21}{res}      0.0382092      0.1005835
{txt}{space 9}y81nrinc {c |}{col 21}{res}     -0.0777246     -0.2035076
{txt}{hline 18}{c BT}{hline 32}
r; t=0.02 12:28:53

{com}. local selected `e(selected)'
{txt}r; t=0.00 12:28:53

{com}. foreach opt in xb u e ue xbu {c -(}
{txt}  2{com}.         predict double `opt'hat_rlasso, ols `opt'
{txt}  3{com}. {c )-}
{res}{txt}r; t=0.02 12:28:53

{com}. xtreg lrprice `selected', fe
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}       321
{txt}Group variable: {res}id{txt}{col 49}Number of groups{col 67}={col 69}{res}        33

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.4229{col 63}{txt}min{col 67}={col 69}{res}         1
{txt}     Between = {res}0.6121{col 63}{txt}avg{col 67}={col 69}{res}       9.7
{txt}     Overall = {res}0.5238{col 63}{txt}max{col 67}={col 69}{res}        10

{txt}{col 49}F({res}3{txt}, {res}285{txt}){col 67}={col 70}{res}    69.63
{txt}corr(u_i, Xb) = {res}0.1492{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}     lrprice{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 7}larea {c |}{col 14}{res}{space 2} .5880385{col 26}{space 2}   .04597{col 37}{space 1}   12.79{col 46}{space 3}0.000{col 54}{space 4} .4975547{col 67}{space 3} .6785224
{txt}{space 6}lintst {c |}{col 14}{res}{space 2} .1005835{col 26}{space 2} .0426493{col 37}{space 1}    2.36{col 46}{space 3}0.019{col 54}{space 4} .0166359{col 67}{space 3}  .184531
{txt}{space 4}y81nrinc {c |}{col 14}{res}{space 2}-.2035076{col 26}{space 2} .0695852{col 37}{space 1}   -2.92{col 46}{space 3}0.004{col 54}{space 4}-.3404738{col 67}{space 3}-.0665415
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 5.865687{col 26}{space 2} .5076245{col 37}{space 1}   11.56{col 46}{space 3}0.000{col 54}{space 4} 4.866519{col 67}{space 3} 6.864856
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .17625241
     {txt}sigma_e {c |} {res} .23924531
         {txt}rho {c |} {res} .35179814{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0: F({res}32{txt}, {res}285{txt}) = {res}2.69{col 62}{txt}Prob > F = {res}0.0000
{txt}r; t=0.05 12:28:53

{com}. foreach opt in xb u e ue xbu {c -(}
{txt}  2{com}.         predict double `opt'hat_xtreg, `opt'
{txt}  3{com}. {c )-}
{txt}r; t=0.01 12:28:53

{com}. foreach opt in xb u e ue xbu {c -(}
{txt}  2{com}.         di "checking option `opt'
{txt}  3{com}.         assert reldif(`opt'hat_rlasso, `opt'hat_xtreg) < 1e-6
{txt}  4{com}. {c )-}
checking option xb
checking option u
checking option e
checking option ue
checking option xbu
{txt}r; t=0.00 12:28:53

{com}. 
. 
. **************** Weights *********************
. 
. cap drop one
{txt}r; t=0.00 12:28:53

{com}. cap drop wt
{txt}r; t=0.00 12:28:53

{com}. gen double one=1
{txt}r; t=0.00 12:28:53

{com}. // use a non-integer weight
. global wtvar lcbdsq
{txt}r; t=0.00 12:28:53

{com}. gen double wt=$wtvar
{txt}r; t=0.00 12:28:53

{com}. // assumes no missings for any regressors or dep var
. sum wt

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 10}wt {c |}{res}        321     89.5797    14.18291   47.71708   109.4765
{txt}r; t=0.00 12:28:53

{com}. replace wt = wt * 1/r(mean)
{txt}(321 real changes made)
r; t=0.00 12:28:53

{com}. 
. * Basic estimation with constant and no partialling etc.
. * w_c_ vars are centered (demeaned using weighted means)
. * and then weighted by the sqrt of the weighting var.
. 
. cap drop w_*
{txt}r; t=0.00 12:28:53

{com}. * weighted centering (so no intercept)
. foreach var of varlist lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc {c -(}
{txt}  2{com}.         qui sum `var' [aw=wt], meanonly
{txt}  3{com}.         gen double w_c_`var' = (`var'-r(mean))*sqrt(wt)
{txt}  4{com}. {c )-}
{txt}r; t=0.00 12:28:53

{com}. 
. global vlist lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc
{txt}r; t=0.00 12:28:53

{com}. global w_c_vlist w_c_lrprice w_c_larea w_c_cbd w_c_intst w_c_lintst w_c_y81ldist w_c_lintstsq w_c_y81nrinc
{txt}r; t=0.00 12:28:53

{com}. 
. // disallowed options
. cap noi rlasso $vlist [aw=$wtvar], nocons
{err}incompatible options - weights + noconstant
{txt}r; t=0.00 12:28:53

{com}. assert _rc==198
{txt}r; t=0.00 12:28:53

{com}. 
. foreach opt in "" "rob" {c -(}
{txt}  2{com}.         // cons automatically partialled out
.         rlasso $vlist [aw=$wtvar], `opt'
{txt}  3{com}.         mat b=e(beta)
{txt}  4{com}.         mat bOLS=e(betaOLS)
{txt}  5{com}.         rlasso $vlist [aw=$wtvar], prestd `opt'
{txt}  6{com}.         assert mreldif(e(beta),b)<1e-8
{txt}  7{com}.         assert mreldif(e(betaOLS),bOLS)<1e-8
{txt}  8{com}.         // no constant to compare
.         mat b=b[1,1..colsof(b)-1]
{txt}  9{com}.         mat bOLS=bOLS[1,1..colsof(bOLS)-1]
{txt} 10{com}.         // use dm and nocons
.         rlasso $w_c_vlist, dm nocons `opt'
{txt} 11{com}.         assert mreldif(e(beta),b)<1e-8
{txt} 12{com}.         assert mreldif(e(betaOLS),bOLS)<1e-8
{txt} 13{com}. {c )-}
{txt}(sum of wgt is     2.8755e+04)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5819738      0.6666220
{txt}{space 11}lintst {c |}{col 21}{res}      0.0886430      0.1433958
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0041251      0.0125833
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}      5.9920944      4.7856295
{txt}{hline 18}{c BT}{hline 32}
(sum of wgt is     2.8755e+04)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5819738      0.6666220
{txt}{space 11}lintst {c |}{col 21}{res}      0.0886430      0.1433958
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0041251      0.0125833
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}      5.9920944      4.7856295
{txt}{hline 18}{c BT}{hline 32}
Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 8}w_c_larea {c |}{col 21}{res}      0.5819738      0.6666220
{txt}{space 7}w_c_lintst {c |}{col 21}{res}      0.0886430      0.1433958
{txt}{space 5}w_c_y81ldist {c |}{col 21}{res}      0.0041251      0.0125833
{txt}{hline 18}{c BT}{hline 32}
(sum of wgt is     2.8755e+04)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5670517      0.6666220
{txt}{space 11}lintst {c |}{col 21}{res}      0.0950719      0.1433958
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0045284      0.0125833
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}      6.0422607      4.7856295
{txt}{hline 18}{c BT}{hline 32}
(sum of wgt is     2.8755e+04)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5670517      0.6666220
{txt}{space 11}lintst {c |}{col 21}{res}      0.0950719      0.1433958
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0045284      0.0125833
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}      6.0422607      4.7856295
{txt}{hline 18}{c BT}{hline 32}
Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 8}w_c_larea {c |}{col 21}{res}      0.5670517      0.6666220
{txt}{space 7}w_c_lintst {c |}{col 21}{res}      0.0950719      0.1433958
{txt}{space 5}w_c_y81ldist {c |}{col 21}{res}      0.0045284      0.0125833
{txt}{hline 18}{c BT}{hline 32}
r; t=0.07 12:28:53

{com}. 
. * Estimation with constant and partial/notpen
. 
. cap drop w_*
{txt}r; t=0.00 12:28:53

{com}. cap drop c_*
{txt}r; t=0.00 12:28:53

{com}. * weighted partialling out of y81nrinc
. foreach var of varlist lrprice larea cbd intst lintst y81ldist lintstsq {c -(}
{txt}  2{com}.         qui reg `var' y81nrinc [aw=wt]
{txt}  3{com}.         predict double c_`var', resid
{txt}  4{com}.         gen double w_c_`var' = c_`var'*sqrt(wt)
{txt}  5{com}. {c )-}
{txt}r; t=0.05 12:28:53

{com}. 
. global vlist lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc
{txt}r; t=0.00 12:28:53

{com}. global w_c_vlist w_c_lrprice w_c_larea w_c_cbd w_c_intst w_c_lintst w_c_y81ldist w_c_lintstsq
{txt}r; t=0.00 12:28:53

{com}. 
. foreach opt in "" "rob" {c -(}
{txt}  2{com}.         rlasso $vlist [aw=$wtvar], partial(y81nrinc) `rob'
{txt}  3{com}.         mat b=e(beta)
{txt}  4{com}.         mat bOLS=e(betaOLS)
{txt}  5{com}.         rlasso $vlist [aw=$wtvar], partial(y81nrinc) prestd `rob'
{txt}  6{com}.         assert mreldif(e(beta),b)<1e-8
{txt}  7{com}.         assert mreldif(e(betaOLS),bOLS)<1e-8
{txt}  8{com}.         rlasso $vlist [aw=$wtvar], pnotpen(y81nrinc) `rob'
{txt}  9{com}.         assert mreldif(e(beta),b)<1e-8
{txt} 10{com}.         assert mreldif(e(betaOLS),bOLS)<1e-8
{txt} 11{com}.         rlasso $vlist [aw=$wtvar], pnotpen(y81nrinc) prestd `rob'
{txt} 12{com}.         assert mreldif(e(beta),b)<1e-8
{txt} 13{com}.         assert mreldif(e(betaOLS),bOLS)<1e-8
{txt} 14{com}.         // no constant or partialled-out var to compare
.         mat b=b[1,1..colsof(b)-2]
{txt} 15{com}.         mat bOLS=bOLS[1,1..colsof(bOLS)-2]
{txt} 16{com}.         // use dm and nocons
.         rlasso $w_c_vlist, dm nocons `rob'
{txt} 17{com}.         assert mreldif(e(beta),b)<1e-8
{txt} 18{com}.         assert mreldif(e(betaOLS),bOLS)<1e-8
{txt} 19{com}. {c )-}
{txt}(sum of wgt is     2.8755e+04)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5749949      0.6634407
{txt}{space 11}lintst {c |}{col 21}{res}      0.0789506      0.1297048
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0069238      0.0141991
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 9}y81nrinc {c |}{col 21}{res}     -0.1015180     -0.0802589
{txt}{space 12}_cons {c |}{col 21}{res}      6.1362885      4.9422728
{txt}{hline 18}{c BT}{hline 32}
(sum of wgt is     2.8755e+04)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5749949      0.6634407
{txt}{space 11}lintst {c |}{col 21}{res}      0.0789506      0.1297048
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0069238      0.0141991
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 9}y81nrinc {c |}{col 21}{res}     -0.1015180     -0.0802589
{txt}{space 12}_cons {c |}{col 21}{res}      6.1362885      4.9422728
{txt}{hline 18}{c BT}{hline 32}
(sum of wgt is     2.8755e+04)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5749949      0.6634407
{txt}{space 11}lintst {c |}{col 21}{res}      0.0789506      0.1297048
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0069238      0.0141991
{txt}{space 9}y81nrinc {c |}{helpb rlasso##notpen:*}{col 21}{res}     -0.1015180     -0.0802589
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}      6.1362885      4.9422728
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
(sum of wgt is     2.8755e+04)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5749949      0.6634407
{txt}{space 11}lintst {c |}{col 21}{res}      0.0789506      0.1297048
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0069238      0.0141991
{txt}{space 9}y81nrinc {c |}{helpb rlasso##notpen:*}{col 21}{res}     -0.1015180     -0.0802589
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}      6.1362885      4.9422728
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 8}w_c_larea {c |}{col 21}{res}      0.5749949      0.6634407
{txt}{space 7}w_c_lintst {c |}{col 21}{res}      0.0789506      0.1297048
{txt}{space 5}w_c_y81ldist {c |}{col 21}{res}      0.0069238      0.0141991
{txt}{hline 18}{c BT}{hline 32}
(sum of wgt is     2.8755e+04)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5749949      0.6634407
{txt}{space 11}lintst {c |}{col 21}{res}      0.0789506      0.1297048
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0069238      0.0141991
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 9}y81nrinc {c |}{col 21}{res}     -0.1015180     -0.0802589
{txt}{space 12}_cons {c |}{col 21}{res}      6.1362885      4.9422728
{txt}{hline 18}{c BT}{hline 32}
(sum of wgt is     2.8755e+04)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5749949      0.6634407
{txt}{space 11}lintst {c |}{col 21}{res}      0.0789506      0.1297048
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0069238      0.0141991
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 9}y81nrinc {c |}{col 21}{res}     -0.1015180     -0.0802589
{txt}{space 12}_cons {c |}{col 21}{res}      6.1362885      4.9422728
{txt}{hline 18}{c BT}{hline 32}
(sum of wgt is     2.8755e+04)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5749949      0.6634407
{txt}{space 11}lintst {c |}{col 21}{res}      0.0789506      0.1297048
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0069238      0.0141991
{txt}{space 9}y81nrinc {c |}{helpb rlasso##notpen:*}{col 21}{res}     -0.1015180     -0.0802589
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}      6.1362885      4.9422728
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
(sum of wgt is     2.8755e+04)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.5749949      0.6634407
{txt}{space 11}lintst {c |}{col 21}{res}      0.0789506      0.1297048
{txt}{space 9}y81ldist {c |}{col 21}{res}      0.0069238      0.0141991
{txt}{space 9}y81nrinc {c |}{helpb rlasso##notpen:*}{col 21}{res}     -0.1015180     -0.0802589
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}      6.1362885      4.9422728
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 8}w_c_larea {c |}{col 21}{res}      0.5749949      0.6634407
{txt}{space 7}w_c_lintst {c |}{col 21}{res}      0.0789506      0.1297048
{txt}{space 5}w_c_y81ldist {c |}{col 21}{res}      0.0069238      0.0141991
{txt}{hline 18}{c BT}{hline 32}
r; t=0.20 12:28:54

{com}. 
. 
. * Fixed effects + partialling-out
. * id var created earlier
. xtset id

{txt}{col 1}Panel variable: {res}id{txt} (unbalanced)
r; t=0.00 12:28:54

{com}. 
. cap drop w_*
{txt}r; t=0.00 12:28:54

{com}. cap drop c_*
{txt}r; t=0.00 12:28:54

{com}. * weighted partialling out of y81nrinc and FEs
. foreach var of varlist lrprice larea cbd intst lintst y81ldist lintstsq {c -(}
{txt}  2{com}.         qui reg `var' y81nrinc i.id [aw=wt]
{txt}  3{com}.         predict double c_`var', resid
{txt}  4{com}.         gen double w_c_`var' = c_`var'*sqrt(wt)
{txt}  5{com}. {c )-}
{txt}r; t=0.07 12:28:54

{com}. 
. global vlist lrprice larea cbd intst lintst y81ldist lintstsq y81nrinc
{txt}r; t=0.00 12:28:54

{com}. global w_c_vlist w_c_lrprice w_c_larea w_c_cbd w_c_intst w_c_lintst w_c_y81ldist w_c_lintstsq
{txt}r; t=0.00 12:28:54

{com}. 
. // disallowed options
. cap noi rlasso $vlist [aw=$wtvar], partial(y81nrinc) fe noftools
{txt}(sorting by xtset panelvar id)
(sum of wgt is     2.8755e+04)
{res}{err}error - fe option with weights requires {rnethelp "http://fmwww.bc.edu/RePEc/bocode/f/ftools.sthlp":ftools} package to be installed
see {rnethelp "http://fmwww.bc.edu/RePEc/bocode/f/ftools.sthlp":help ftools} for details
{txt}r; t=0.00 12:28:54

{com}. assert _rc==198
{txt}r; t=0.00 12:28:54

{com}. 
. foreach opt in "" "rob" {c -(}
{txt}  2{com}.         rlasso $vlist [aw=$wtvar], partial(y81nrinc) fe `rob'
{txt}  3{com}.         mat b=e(beta)
{txt}  4{com}.         mat bOLS=e(betaOLS)
{txt}  5{com}.         rlasso $vlist [aw=$wtvar], partial(y81nrinc) prestd fe `rob'
{txt}  6{com}.         assert mreldif(e(beta),b)<1e-8
{txt}  7{com}.         assert mreldif(e(betaOLS),bOLS)<1e-8
{txt}  8{com}.         rlasso $vlist [aw=$wtvar], pnotpen(y81nrinc) fe `rob'
{txt}  9{com}.         assert mreldif(e(beta),b)<1e-8
{txt} 10{com}.         assert mreldif(e(betaOLS),bOLS)<1e-8
{txt} 11{com}.         rlasso $vlist [aw=$wtvar], pnotpen(y81nrinc) prestd fe `rob'
{txt} 12{com}.         assert mreldif(e(beta),b)<1e-8
{txt} 13{com}.         assert mreldif(e(betaOLS),bOLS)<1e-8
{txt} 14{com}.         // partial-out FEs by hand
.         rlasso $vlist i.id [aw=$wtvar], partial(y81nrinc i.id) `rob'
{txt} 15{com}.         mat bfe=e(beta)
{txt} 16{com}.         mat bfe=bfe[1,1..2]
{txt} 17{com}.         mat bfeols=e(betaOLS)
{txt} 18{com}.         mat bfeols=bfeols[1,1..2]
{txt} 19{com}.         assert mreldif(bfe,b)<1e-8
{txt} 20{com}.         assert mreldif(bfeols,bOLS)<1e-8
{txt} 21{com}.         // no partialled-out var to compare
.         mat b=b[1,1..colsof(b)-1]
{txt} 22{com}.         mat bOLS=bOLS[1,1..colsof(bOLS)-1]
{txt} 23{com}.         rlasso $w_c_vlist, dm nocons `rob'
{txt} 24{com}.         assert mreldif(e(beta),b)<1e-8
{txt} 25{com}.         assert mreldif(e(betaOLS),bOLS)<1e-8
{txt} 26{com}. {c )-}
{txt}(sorting by xtset panelvar id)
(sum of wgt is     2.8755e+04)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.4696058      0.6113602
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 9}y81nrinc {c |}{col 21}{res}     -0.2799452     -0.2709871
{txt}{hline 18}{c BT}{hline 32}
(sorting by xtset panelvar id)
(sum of wgt is     2.8755e+04)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.4696058      0.6113602
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 9}y81nrinc {c |}{col 21}{res}     -0.2799452     -0.2709871
{txt}{hline 18}{c BT}{hline 32}
(sorting by xtset panelvar id)
(sum of wgt is     2.8755e+04)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.4696058      0.6113602
{txt}{space 9}y81nrinc {c |}{helpb rlasso##notpen:*}{col 21}{res}     -0.2799452     -0.2709871
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
(sorting by xtset panelvar id)
(sum of wgt is     2.8755e+04)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.4696058      0.6113602
{txt}{space 9}y81nrinc {c |}{helpb rlasso##notpen:*}{col 21}{res}     -0.2799452     -0.2709871
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
(sum of wgt is     2.8755e+04)
{res}{text}Warning: reduced rank encountered when partialling out (may be caused by omitted vars).
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.4696058      0.6113602
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 9}y81nrinc {c |}{col 21}{res}     -0.2799452     -0.2709871
{txt}{space 17} {c |}
{space 15}id {c |}
{space 15}1  {c |}{col 21}      (omitted)      (omitted)
{space 15}2  {c |}{col 21}{res}      0.1054704      0.1172776
{txt}{space 15}3  {c |}{col 21}{res}      0.2652116      0.2387346
{txt}{space 15}4  {c |}{col 21}{res}      0.0778708      0.0551744
{txt}{space 15}5  {c |}{col 21}{res}      0.1063566      0.0847455
{txt}{space 15}6  {c |}{col 21}{res}      0.0980111      0.0839800
{txt}{space 15}7  {c |}{col 21}{res}      0.3868828      0.3560441
{txt}{space 15}8  {c |}{col 21}{res}      0.4192168      0.4024239
{txt}{space 15}9  {c |}{col 21}{res}      0.5067665      0.4601601
{txt}{space 14}10  {c |}{col 21}{res}      0.4283910      0.3815130
{txt}{space 14}11  {c |}{col 21}{res}      0.3917681      0.3638107
{txt}{space 14}12  {c |}{col 21}{res}      0.4184360      0.4112733
{txt}{space 14}13  {c |}{col 21}{res}      0.4165676      0.3923341
{txt}{space 14}14  {c |}{col 21}{res}      0.4511133      0.4113331
{txt}{space 14}15  {c |}{col 21}{res}      0.3494806      0.3234671
{txt}{space 14}16  {c |}{col 21}{res}      0.3919927      0.3755104
{txt}{space 14}17  {c |}{col 21}{res}      0.1841384      0.1574185
{txt}{space 14}18  {c |}{col 21}{res}      0.5963523      0.5431613
{txt}{space 14}19  {c |}{col 21}{res}      0.2817940      0.2928926
{txt}{space 14}20  {c |}{col 21}{res}      0.5056557      0.4968058
{txt}{space 14}21  {c |}{col 21}{res}      0.5124859      0.4939018
{txt}{space 14}22  {c |}{col 21}{res}      0.6594473      0.5787118
{txt}{space 14}23  {c |}{col 21}{res}      0.7817130      0.6953542
{txt}{space 14}24  {c |}{col 21}{res}      0.4947035      0.4656154
{txt}{space 14}25  {c |}{col 21}{res}      0.5789679      0.4993976
{txt}{space 14}26  {c |}{col 21}{res}      0.3569438      0.3187176
{txt}{space 14}27  {c |}{col 21}{res}      0.4250706      0.3835142
{txt}{space 14}28  {c |}{col 21}{res}      0.5403327      0.4771397
{txt}{space 14}29  {c |}{col 21}{res}      0.6580916      0.5884807
{txt}{space 14}30  {c |}{col 21}{res}      0.5760600      0.5330149
{txt}{space 14}31  {c |}{col 21}{res}      0.5106629      0.4961018
{txt}{space 14}32  {c |}{col 21}{res}      0.4849989      0.4698870
{txt}{space 14}33  {c |}{col 21}{res}      1.0104936      0.9624022
{txt}{space 17} {c |}
{space 12}_cons {c |}{col 21}{res}      7.3248470      6.2780896
{txt}{hline 18}{c BT}{hline 32}
Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 8}w_c_larea {c |}{col 21}{res}      0.4696058      0.6113602
{txt}{hline 18}{c BT}{hline 32}
(sorting by xtset panelvar id)
(sum of wgt is     2.8755e+04)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.4696058      0.6113602
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 9}y81nrinc {c |}{col 21}{res}     -0.2799452     -0.2709871
{txt}{hline 18}{c BT}{hline 32}
(sorting by xtset panelvar id)
(sum of wgt is     2.8755e+04)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.4696058      0.6113602
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 9}y81nrinc {c |}{col 21}{res}     -0.2799452     -0.2709871
{txt}{hline 18}{c BT}{hline 32}
(sorting by xtset panelvar id)
(sum of wgt is     2.8755e+04)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.4696058      0.6113602
{txt}{space 9}y81nrinc {c |}{helpb rlasso##notpen:*}{col 21}{res}     -0.2799452     -0.2709871
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
(sorting by xtset panelvar id)
(sum of wgt is     2.8755e+04)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.4696058      0.6113602
{txt}{space 9}y81nrinc {c |}{helpb rlasso##notpen:*}{col 21}{res}     -0.2799452     -0.2709871
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
(sum of wgt is     2.8755e+04)
{res}{text}Warning: reduced rank encountered when partialling out (may be caused by omitted vars).
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}larea {c |}{col 21}{res}      0.4696058      0.6113602
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##notpen:*}{c |}
{hline 18}{c +}{hline 32}
{space 9}y81nrinc {c |}{col 21}{res}     -0.2799452     -0.2709871
{txt}{space 17} {c |}
{space 15}id {c |}
{space 15}1  {c |}{col 21}      (omitted)      (omitted)
{space 15}2  {c |}{col 21}{res}      0.1054704      0.1172776
{txt}{space 15}3  {c |}{col 21}{res}      0.2652116      0.2387346
{txt}{space 15}4  {c |}{col 21}{res}      0.0778708      0.0551744
{txt}{space 15}5  {c |}{col 21}{res}      0.1063566      0.0847455
{txt}{space 15}6  {c |}{col 21}{res}      0.0980111      0.0839800
{txt}{space 15}7  {c |}{col 21}{res}      0.3868828      0.3560441
{txt}{space 15}8  {c |}{col 21}{res}      0.4192168      0.4024239
{txt}{space 15}9  {c |}{col 21}{res}      0.5067665      0.4601601
{txt}{space 14}10  {c |}{col 21}{res}      0.4283910      0.3815130
{txt}{space 14}11  {c |}{col 21}{res}      0.3917681      0.3638107
{txt}{space 14}12  {c |}{col 21}{res}      0.4184360      0.4112733
{txt}{space 14}13  {c |}{col 21}{res}      0.4165676      0.3923341
{txt}{space 14}14  {c |}{col 21}{res}      0.4511133      0.4113331
{txt}{space 14}15  {c |}{col 21}{res}      0.3494806      0.3234671
{txt}{space 14}16  {c |}{col 21}{res}      0.3919927      0.3755104
{txt}{space 14}17  {c |}{col 21}{res}      0.1841384      0.1574185
{txt}{space 14}18  {c |}{col 21}{res}      0.5963523      0.5431613
{txt}{space 14}19  {c |}{col 21}{res}      0.2817940      0.2928926
{txt}{space 14}20  {c |}{col 21}{res}      0.5056557      0.4968058
{txt}{space 14}21  {c |}{col 21}{res}      0.5124859      0.4939018
{txt}{space 14}22  {c |}{col 21}{res}      0.6594473      0.5787118
{txt}{space 14}23  {c |}{col 21}{res}      0.7817130      0.6953542
{txt}{space 14}24  {c |}{col 21}{res}      0.4947035      0.4656154
{txt}{space 14}25  {c |}{col 21}{res}      0.5789679      0.4993976
{txt}{space 14}26  {c |}{col 21}{res}      0.3569438      0.3187176
{txt}{space 14}27  {c |}{col 21}{res}      0.4250706      0.3835142
{txt}{space 14}28  {c |}{col 21}{res}      0.5403327      0.4771397
{txt}{space 14}29  {c |}{col 21}{res}      0.6580916      0.5884807
{txt}{space 14}30  {c |}{col 21}{res}      0.5760600      0.5330149
{txt}{space 14}31  {c |}{col 21}{res}      0.5106629      0.4961018
{txt}{space 14}32  {c |}{col 21}{res}      0.4849989      0.4698870
{txt}{space 14}33  {c |}{col 21}{res}      1.0104936      0.9624022
{txt}{space 17} {c |}
{space 12}_cons {c |}{col 21}{res}      7.3248470      6.2780896
{txt}{hline 18}{c BT}{hline 32}
Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 8}w_c_larea {c |}{col 21}{res}      0.4696058      0.6113602
{txt}{hline 18}{c BT}{hline 32}
r; t=0.35 12:28:54

{com}. 
. **************** Misc syntax/options *****************************
. 
. // Support for inrange(.) and similar [if] expressions:
. rlasso $vlist if inrange(age,50,70)
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}     10.7981860     10.7981860
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.01 12:28:54

{com}. 
. **************** Panel data with time series ops *****************
. 
. use "http://fmwww.bc.edu/ec-p/data/macro/abdata.dta", clear
{txt}(Layard & Nickell, Unemployment in Britain, Economica 53, 1986 from Ox dist)
r; t=0.42 12:28:54

{com}. 
. // FE and noftools options
. rlasso ys l(0/3).k l(0/3).n, fe
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 16}k {c |}
{space 14}--. {c |}{col 21}{res}      0.1055359      0.1284247
{txt}{space 14}L3. {c |}{col 21}{res}     -0.0152348     -0.0618353
{txt}{space 17} {c |}
{space 16}n {c |}{col 21}{res}      0.0896224      0.1114129
{txt}{hline 18}{c BT}{hline 32}
r; t=0.02 12:28:55

{com}. savedresults save ftools e()
{txt}r; t=0.00 12:28:55

{com}. cap noi assert "`e(noftools)'"==""  // will be error if ftools not installed
{txt}r; t=0.00 12:28:55

{com}. rlasso ys l(0/3).k l(0/3).n, fe noftools
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 16}k {c |}
{space 14}--. {c |}{col 21}{res}      0.1055359      0.1284247
{txt}{space 14}L3. {c |}{col 21}{res}     -0.0152348     -0.0618353
{txt}{space 17} {c |}
{space 16}n {c |}{col 21}{res}      0.0896224      0.1114129
{txt}{hline 18}{c BT}{hline 32}
r; t=0.04 12:28:55

{com}. assert "`e(noftools)'"=="noftools"
{txt}r; t=0.00 12:28:55

{com}. savedresults comp ftools e(), exclude(macro: cmdline)
{txt}r; t=0.00 12:28:55

{com}. 
. // two-way cluster-robust; order shouldn't matter
. rlasso ys l(0/3).k l(0/3).n, fe cluster(id year)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 16}k {c |}{col 21}{res}      0.0594519      0.1288796
{txt}{space 16}n {c |}{col 21}{res}      0.0478063      0.1147564
{txt}{hline 18}{c BT}{hline 32}
r; t=0.04 12:28:55

{com}. savedresults save twoway e()
{txt}r; t=0.00 12:28:55

{com}. rlasso ys l(0/3).k l(0/3).n, fe cluster(year id)
{res}{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 16}k {c |}{col 21}{res}      0.0594519      0.1288796
{txt}{space 16}n {c |}{col 21}{res}      0.0478063      0.1147564
{txt}{hline 18}{c BT}{hline 32}
r; t=0.05 12:28:55

{com}. savedresults comp twoway e(), exclude(                                                          ///
>         macro: cmdline loptions clustvar clustvar1 clustvar2                    ///
>         scalar: N_clust1 N_clust2                                                                               ///
>                 )  tol(1e-8)
{txt}r; t=0.00 12:28:55

{com}. 
. // balanced panel
. keep if year>=1978 & year<=1982
{txt}(331 observations deleted)
r; t=0.00 12:28:55

{com}. // cluster-robust with a balanced panel is equivalent to
. // HAC with bw=all lags and kernel=truncated (and same rlasso gamma)
. // can use gamma(0.1) but HAC with maq theoretically appealing
. rlasso n w k ys                                                                                 ///
>                 , rob bw(4) kernel(tru) maq
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 16}k {c |}{col 21}{res}      0.7145334      0.8128797
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      1.3713302      1.4099982
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.02 12:28:55

{com}. savedresults save hac e()
{txt}r; t=0.00 12:28:55

{com}. rlasso n w k ys                                                                         ///
>                 , cluster(id)
{txt}Warning: . negative penalty loadings encountered/adjusted.
Variables affected: 

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 16}k {c |}{col 21}{res}      0.7145334      0.8128797
{txt}{space 12}_cons {c |}{helpb rlasso##notpen:*}{col 21}{res}      1.3713302      1.4099982
{txt}{hline 18}{c BT}{hline 32}
{help rlasso##notpen:*Not penalized}
r; t=0.01 12:28:55

{com}. savedresults comp hac e(), exclude(                                                                     ///
>         macro: cmdline robust clustvar kernel                           ///
>         scalar: N_clust N_clust1 N_clust2 bw niter                                                      ///
>                 )  tol(1e-8)
{txt}r; t=0.00 12:28:55

{com}. 
. 
. // ******************* COMPLETE *********************** //
. 
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}C:\LocalStore\ecomes\Documents\GitHub\lassopack\lassopack_v144\cs_rlasso.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res}26 Oct 2024, 12:28:55
{txt}{.-}
{smcl}
{txt}{sf}{ul off}